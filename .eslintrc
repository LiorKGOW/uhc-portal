{
  "root": true,
  "extends": [
    "airbnb",
    "plugin:import/typescript",
    "prettier",
    "plugin:react-hooks/recommended",
    "plugin:testing-library/react"
  ],
  "plugins": [
    "@typescript-eslint"
  ],
  "env": {
    "browser": true,
    "jest": true
  },
  "rules": {
    "no-restricted-imports": [
      "error",
      {
        "patterns": [
          {
            "group": ["./apiRequest", "../**/apiRequest", "../**/services/apiRequest"],
            "message": "Use ~/services/apiRequest that provides mocks in unit tests"
          },
          {
            "group": ["@patternfly/react-icons/dist/js**"],
            "message": "Import using the full esm path `@patternfly/react-icons/dist/esm/icons/<icon>` instead"
          },
          {
            "group": ["@patternfly/react-tokens/dist/js**"],
            "message": "Import using the full esm path `@patternfly/react-tokens/dist/esm/icons/<icon>` instead"
          }
        ],
        "paths": [
          {
            "name": "@patternfly/react-icons",
            "message": "Import using full path `@patternfly/react-icons/dist/esm/icons/<icon>` instead"
          },
          {
            "name": "@patternfly/react-tokens",
            "message": "Import using full path `@patternfly/react-tokens/dist/esm/<token>` instead"
          }
        ]
      }
    ],
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": [
          "**/*setupTests.ts",
          "**/*.test.js*",
          "**/*test.js*",
          "**/*.spec.js*",
          "**/*.test.ts*",
          "**/*test.ts*",
          "**/*.spec.ts*",
          "webpack.config.js",
          "src/testUtils.tsx",
          "deploy_info.mjs",
          "scripts/**/*"
        ]
      }
    ],
    "react/forbid-prop-types": [0],
    "react/require-default-props": [0],
    "react/jsx-no-target-blank": [2],
    "react/jsx-props-no-spreading": [0],
    "react/sort-comp": "off",
    "react-hooks/exhaustive-deps": "error",
    "react/state-in-constructor": [2, "never"],
    "no-param-reassign": [
      "error",
      { "props": true, "ignorePropertyModificationsFor": ["draft", "response", "acc"] }
    ],
    "no-use-before-define": "off",
    "import/prefer-default-export": 0,
    "no-shadow": "off",
    "react/jsx-wrap-multilines": "off",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "mjs": "never",
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "react/jsx-filename-extension": [1, { "extensions": [".tsx", ".jsx"] }],
    "testing-library/prefer-screen-queries": "off", // can be automatically fixed if preferred
    "testing-library/prefer-presence-queries": "off", // can be automatically fixed if preferred
    "testing-library/no-container": "off",
    "testing-library/no-dom-import": "error",
    "testing-library/no-unnecessary-act": "error",
    "testing-library/prefer-find-by": "error",
    "testing-library/prefer-user-event": "error",
    "testing-library/no-wait-for-multiple-assertions": "error",
    "testing-library/render-result-naming-convention": "error",
    "testing-library/no-debugging-utils": "error"
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "rules": {
        "no-unused-vars": 0,
        "react/prop-types": "off",
        // use prettier with typescript
        "implicit-arrow-linebreak": 0,
        "arrow-parens": 0,
        "indent": 0,
        "operator-linebreak": 0,
        "object-curly-newline": 0,
        "no-confusing-arrow": 0,
        "function-paren-newline": 0,
        "react/jsx-one-expression-per-line": 0
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.lint.json",
    "comment": true,
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2017,
    "extraFileExtensions": [".json"],
    "sourceType": "module",
    "tsconfigRootDir": "./"
  },
  "globals": {
    "insights": "readonly",
    "APP_BETA": "readonly",
    "APP_DEVMODE": "readonly",
    "APP_API_ENV": "readonly",
    "APP_DEV_SERVER": "readonly",
    "OCM_SHOW_OLD_METRICS": "readonly"
  },
  "settings": {
    "import/resolver": {
      "alias": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "map": [["~", "./src"]]
      }
    }
  }
}
