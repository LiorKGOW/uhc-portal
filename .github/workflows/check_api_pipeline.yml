name: Check Backend Open API changes

on:
  workflow_dispatch:
    inputs:
      node-version:
        default: '22.x'
        description: 'NodeJs version'
      swap-branch-name:
        default: 'openapi'
        description: 'Swap branch name to work with'
  schedule:
    - cron: '0 0 * * *'

env:
  NODE_VERSION: ${{ github.event.inputs.node-version || '22.x' }}
  SWAP_BRANCH_NAME: ${{ github.event.inputs.swap-branch-name || 'openapi' }}
  BASE_BRANCH_NAME: ${{ github.ref_name || 'master' }}

jobs:
  check_api:
    name: Check API
    concurrency:
      group: check_api-${{ github.event_name }}-${{ github.head_ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - uses: actions/cache@v4
        with:
          path: './node_modules'
          key: check_api-${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
      - name: Swap Branch handling
        run: |
          git fetch origin
          git checkout ${{ env.SWAP_BRANCH_NAME }} || git checkout -b ${{ env.SWAP_BRANCH_NAME }}
          git ls-remote --heads origin ${{ env.SWAP_BRANCH_NAME }} | grep . && git reset origin/${{ env.SWAP_BRANCH_NAME }} --hard
      - name: Install yarn
        uses: borales/actions-yarn@v4
        with:
          cmd: install --frozen-lockfile --cache-folder .yarn          
      - name: Generating model based on OpenAPI contracts
        run: make openapi
      - name: Diffs Counter
        id: diffs
        run: echo "counter=$(git --no-pager diff --name-only | grep . | wc -l)" >> $GITHUB_OUTPUT
      - name: Apply Manual Patches
        if: steps.diffs.outputs.counter > 0 
        run: git apply openapi/manual_patches.patch
      - name: Add files to commit
        if: steps.diffs.outputs.counter > 0 
        run: |
          git add openapi/** src/types/**
          git status
      - name: Create commit
        if: steps.diffs.outputs.counter > 0 
        run: |
          git config --global user.name "Open API Bot"
          git config --global user.email "***REMOVED***"
          git commit -m "Open API Changes" --no-verify
      - name: Push changes
        if: steps.diffs.outputs.counter > 0 
        run: git push origin ${{ env.SWAP_BRANCH_NAME }}    
      - name: Create Pull Request
        if: steps.diffs.outputs.counter > 0 
        run: |
          echo -e "Automatically created by Github action.\nReviewers should pay attention to changes from openapi/*.json files have a correspondant change on the TS model.\nAdditionally to it, build and lint output should be checked. In case of build errors, `openapi/manual_patches.patch` and `openapi/README.md` files should be adapted for the new manual patches to be applied. Manual patches documentation should be also kept up to date in case some of the manual patches are not needed any longer." > msg
          export msg=$(cat msg) ; gh pr create -B ${{ env.BASE_BRANCH_NAME }} -H ${{ env.SWAP_BRANCH_NAME }} --title '[OPEN API] update model' --body "$msg" || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
