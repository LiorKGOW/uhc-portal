name: Pull Request CI

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
    - 'LICENSE'
    - 'Makefile'
    - 'renovate.json'
    - '*.sh'
    - '.gitignore'
    - 'deploy*.sh'
    - '*.md'
    - '*.adoc'
    - '*.txt'
    - 'mockdata/**'
    - 'docs/**'
    - 'run/**'
    - 'qe-images/**'

jobs:
  install:
    name: ${{ matrix.os }} - Install - Node ${{ matrix.node-version }}
    concurrency:
    group: install-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.node-version }}
    cancel-in-progress: true
    strategy:
    matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v4
        with:
        path: './node_modules'
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - name: Install
        uses: borales/actions-yarn@v4
        with:
        cmd: install
    - name: Check uncommitted changes
        if: ${{ always() }}
        # Check that Git working tree is clean after running `npm install` via the frontend-maven-plugin.
        # The `git` command exits with 1 and fails the build if there are any uncommitted changes.
        run: git diff HEAD --exit-code
  build:
    name: ${{ matrix.os }} - Build - Node ${{ matrix.node-version }}
    concurrency:
    group: build-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.node-version }}
    cancel-in-progress: true
    needs: install
    strategy:
    matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache/restore@v4
        with:
        path: './node_modules'
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        fail-on-cache-miss: true
    - name: Build
        uses: borales/actions-yarn@v4
        with:
        cmd: build
  lint:
    name: ${{ matrix.os }} - Lint - Node ${{ matrix.node-version }}
    concurrency:
    group: lint-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.node-version }}
    cancel-in-progress: true
    needs: install
    strategy:
    matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache/restore@v4
        with:
        path: './node_modules'
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        fail-on-cache-miss: true
    - name: Lint
        uses: borales/actions-yarn@v4
        with:
        cmd: lint-prettier
  unitary-test:
    name: ${{ matrix.os }} - Unitary Tests - Node ${{ matrix.node-version }}
    concurrency:
    group: unitary-test-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.node-version }}
    cancel-in-progress: true
    needs: [build]
    strategy:
    matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache/restore@v4
        with:
        path: './node_modules'
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
        fail-on-cache-miss: true
    - name: Test
        uses: borales/actions-yarn@v4
        with:
        cmd: test
  e2e-test:
    name: ${{ matrix.os }} - e2e Tests - Node ${{ matrix.node-version }}
    concurrency:
    group: e2e-test-${{ github.event_name }}-${{ github.head_ref }}-${{ matrix.os }}-${{ matrix.node-version }}
    cancel-in-progress: true
    needs: [build]
    strategy:
    matrix:
        os: [ubuntu-latest]
        node-version: [22.x]
    fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
        node-version: ${{ matrix.node-version }}
    - uses: actions/cache@v4
        with:
        path: './node_modules'
        key: ${{ runner.os }}-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
    - name: Install
        uses: borales/actions-yarn@v4
        with:
        cmd: install
    - name: Add hosts
        run: make dev-env-setup
    - name: Check hosts
        run: cat /etc/hosts
    - name: Install cypress
        run: npx cypress install
    - name: Execute tests
        run: |
        yarn start --env logging=quiet --no-client-overlay &
        NODE_TLS_REJECT_UNAUTHORIZED=0 yarn wait-on -i 5000 https://prod.foo.redhat.com:1337/openshift/
        CYPRESS_TEST_WITHQUOTA_USER=${{ secrets.CYPRESS_TEST_WITHQUOTA_USER }} CYPRESS_TEST_WITHQUOTA_PASSWORD=${{ secrets.CYPRESS_TEST_WITHQUOTA_PASSWORD }} TERM=xterm LC_ALL=C.UTF-8 LANG=C.UTF-8 yarn e2e-test
    - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
        name: 2e2-facts
        retention-days: 5
        path: |
            cypress/screenshots/
            cypress/videos/