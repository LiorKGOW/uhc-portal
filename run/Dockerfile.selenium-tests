FROM fedora:29

MAINTAINER ***REMOVED***

# TODO: how to use prebuilt rubygem-nokogiri?  Compiling it is heavy and brittle.
#   That's what tools/hack_bundle.rb tries to achieve, but still compiles it.
#   Fedora's rubygem-bundler is patched (as opposed to upstream `gem install bundler`)
#   but no luck, both compile it.  See also https://github.com/rubygems/bundler/issues/1964
RUN dnf install -y ruby ruby-devel rubygem-bundler rubygem-nokogiri gcc-c++ make redhat-rpm-config git dnf-plugins-core
RUN dnf builddep -y rubygem-nokogiri

RUN useradd user

# First copy only inputs to bundler, full directory copied/mounted later, to improve build caching.
# (1st step of https://medium.com/magnetis-backstage/how-to-cache-bundle-install-with-docker-7bed453a5800)
COPY verification-tests/Gemfile* /ruby-dependencies/
# Bundler needs to run as non-root, but defaults to installing globally with sudo;
# setting BUNDLE_PATH avoids that, installs as current user.
RUN mkdir /bundle
RUN chown --recursive user:user /ruby-dependencies /bundle
ENV BUNDLE_GEMFILE=/ruby-dependencies/Gemfile
ENV BUNDLE_PATH=/bundle

USER user
#RUN tools/hack_bundle.rb
WORKDIR /ruby-dependencies
RUN bundle install

# This container assumes volumes will be mounted as-if the following were copied:
#COPY verification-tests /verification-tests
#COPY cucushift /cucushift
#COPY private /verification-tests/private
# plus an optional read-write volume at /output:
USER root
RUN mkdir /output; chown --recursive user:user /output
ENV BUSHSLICER_REPORT_DIR=/output

USER user
WORKDIR /verification-tests
# Environments configured in /verification-tests/private/config/config.yaml
ENV BUSHSLICER_DEFAULT_ENVIRONMENT=ocm_local_dev
CMD bundle exec cucumber ../cucushift/features/ocm/
