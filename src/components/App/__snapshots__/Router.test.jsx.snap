// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Every route should render:  / 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        }
                      }
                      exact={true}
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/",
                          "search": "",
                        }
                      }
                      path="/"
                    >
                      <Connect(ClusterList)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          }
                        }
                      >
                        <ClusterList
                          anyModalOpen={false}
                          canSubscribeOCPList={Object {}}
                          closeModal={[Function]}
                          cloudProviders={
                            Object {
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": true,
                              "providers": Object {},
                            }
                          }
                          clusters={Array []}
                          error={false}
                          errorDetails={null}
                          errorMessage=""
                          fetchClusters={[Function]}
                          fulfilled={false}
                          getCloudProviders={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          invalidateClusters={[Function]}
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/",
                              "url": "/",
                            }
                          }
                          openModal={[Function]}
                          pending={true}
                          queryParams={Object {}}
                          setClusterDetails={[Function]}
                          setListFlag={[Function]}
                          setSorting={[Function]}
                          valid={true}
                          viewOptions={
                            Object {
                              "currentPage": 1,
                              "filter": "",
                              "flags": Object {
                                "showArchived": false,
                              },
                              "pageSize": 50,
                              "sorting": Object {
                                "isAscending": true,
                                "sortField": "name",
                              },
                              "totalCount": 0,
                              "totalPages": 0,
                            }
                          }
                        >
                          <PageHeader>
                            <section
                              className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                              widget-type="InsightsPageHeader"
                            >
                              <PageHeaderTitle
                                className="page-title"
                                title="Clusters"
                              >
                                <Title
                                  className="page-title"
                                  headingLevel="h1"
                                  size="2xl"
                                  widget-type="InsightsPageHeaderTitle"
                                >
                                  <h1
                                    className="pf-c-title pf-m-2xl page-title"
                                    widget-type="InsightsPageHeaderTitle"
                                  >
                                     
                                    Clusters
                                     
                                  </h1>
                                </Title>
                              </PageHeaderTitle>
                            </section>
                          </PageHeader>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="cluster-list"
                                    data-ready={false}
                                  >
                                    <Connect(GlobalErrorBox)>
                                      <GlobalErrorBox
                                        clearGlobalError={[Function]}
                                      />
                                    </Connect(GlobalErrorBox)>
                                    <Toolbar
                                      id="cluster-list-toolbar"
                                    >
                                      <div
                                        className="pf-c-toolbar"
                                        id="cluster-list-toolbar"
                                      >
                                        <ToolbarContent
                                          isExpanded={false}
                                          showClearFiltersButton={false}
                                        >
                                          <div
                                            className="pf-c-toolbar__content"
                                          >
                                            <div
                                              className="pf-c-toolbar__content-section"
                                            >
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Connect(ClusterListFilter)
                                                    isDisabled={true}
                                                    view="CLUSTERS_VIEW"
                                                  >
                                                    <ClusterListFilter
                                                      currentFilter=""
                                                      isDisabled={true}
                                                      setFilter={[Function]}
                                                      view="CLUSTERS_VIEW"
                                                    >
                                                      <ForwardRef
                                                        aria-label="Filter"
                                                        className="cluster-list-filter"
                                                        isDisabled={true}
                                                        onChange={[Function]}
                                                        placeholder="Filter by name or ID..."
                                                        type="text"
                                                        value=""
                                                      >
                                                        <TextInputBase
                                                          aria-label="Filter"
                                                          className="cluster-list-filter"
                                                          innerRef={null}
                                                          isDisabled={true}
                                                          isReadOnly={false}
                                                          isRequired={false}
                                                          onChange={[Function]}
                                                          placeholder="Filter by name or ID..."
                                                          type="text"
                                                          validated="default"
                                                          value=""
                                                        >
                                                          <input
                                                            aria-invalid={false}
                                                            aria-label="Filter"
                                                            className="pf-c-form-control cluster-list-filter"
                                                            disabled={true}
                                                            onChange={[Function]}
                                                            placeholder="Filter by name or ID..."
                                                            readOnly={false}
                                                            required={false}
                                                            type="text"
                                                            value=""
                                                          />
                                                        </TextInputBase>
                                                      </ForwardRef>
                                                    </ClusterListFilter>
                                                  </Connect(ClusterListFilter)>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Connect(ClusterListFilterDropdown)
                                                    history={
                                                      Object {
                                                        "action": "POP",
                                                        "block": [Function],
                                                        "canGo": [Function],
                                                        "createHref": [Function],
                                                        "entries": Array [
                                                          Object {
                                                            "hash": "",
                                                            "key": "testKey",
                                                            "pathname": "/",
                                                            "search": "",
                                                          },
                                                        ],
                                                        "go": [Function],
                                                        "goBack": [Function],
                                                        "goForward": [Function],
                                                        "index": 0,
                                                        "length": 1,
                                                        "listen": [Function],
                                                        "location": Object {
                                                          "hash": "",
                                                          "key": "testKey",
                                                          "pathname": "/",
                                                          "search": "",
                                                        },
                                                        "push": [Function],
                                                        "replace": [Function],
                                                      }
                                                    }
                                                    isDisabled={true}
                                                  >
                                                    <ClusterListFilterDropdown
                                                      currentFilters={Object {}}
                                                      history={
                                                        Object {
                                                          "action": "POP",
                                                          "block": [Function],
                                                          "canGo": [Function],
                                                          "createHref": [Function],
                                                          "entries": Array [
                                                            Object {
                                                              "hash": "",
                                                              "key": "testKey",
                                                              "pathname": "/",
                                                              "search": "",
                                                            },
                                                          ],
                                                          "go": [Function],
                                                          "goBack": [Function],
                                                          "goForward": [Function],
                                                          "index": 0,
                                                          "length": 1,
                                                          "listen": [Function],
                                                          "location": Object {
                                                            "hash": "",
                                                            "key": "testKey",
                                                            "pathname": "/",
                                                            "search": "",
                                                          },
                                                          "push": [Function],
                                                          "replace": [Function],
                                                        }
                                                      }
                                                      isDisabled={true}
                                                      setFilter={[Function]}
                                                    >
                                                      <Dropdown
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownGroup
                                                              label="Cluster type"
                                                            >
                                                              <DropdownItem>
                                                                <div>
                                                                  <Checkbox
                                                                    className="pf-c-dropdown__menu-item"
                                                                    id="OSD"
                                                                    isChecked={false}
                                                                    isDisabled={false}
                                                                    isValid={true}
                                                                    label="OSD"
                                                                    onChange={[Function]}
                                                                  />
                                                                </div>
                                                              </DropdownItem>
                                                              <DropdownItem>
                                                                <div>
                                                                  <Checkbox
                                                                    className="pf-c-dropdown__menu-item"
                                                                    id="OCP"
                                                                    isChecked={false}
                                                                    isDisabled={false}
                                                                    isValid={true}
                                                                    label="OCP"
                                                                    onChange={[Function]}
                                                                  />
                                                                </div>
                                                              </DropdownItem>
                                                            </DropdownGroup>,
                                                          ]
                                                        }
                                                        isGrouped={true}
                                                        isOpen={false}
                                                        toggle={
                                                          <DropdownToggle
                                                            isDisabled={true}
                                                            onToggle={[Function]}
                                                          >
                                                            <FilterIcon
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            />
                                                             
                                                            Filter
                                                          </DropdownToggle>
                                                        }
                                                      >
                                                        <DropdownWithContext
                                                          autoFocus={true}
                                                          className=""
                                                          direction="down"
                                                          dropdownItems={
                                                            Array [
                                                              <DropdownGroup
                                                                label="Cluster type"
                                                              >
                                                                <DropdownItem>
                                                                  <div>
                                                                    <Checkbox
                                                                      className="pf-c-dropdown__menu-item"
                                                                      id="OSD"
                                                                      isChecked={false}
                                                                      isDisabled={false}
                                                                      isValid={true}
                                                                      label="OSD"
                                                                      onChange={[Function]}
                                                                    />
                                                                  </div>
                                                                </DropdownItem>
                                                                <DropdownItem>
                                                                  <div>
                                                                    <Checkbox
                                                                      className="pf-c-dropdown__menu-item"
                                                                      id="OCP"
                                                                      isChecked={false}
                                                                      isDisabled={false}
                                                                      isValid={true}
                                                                      label="OCP"
                                                                      onChange={[Function]}
                                                                    />
                                                                  </div>
                                                                </DropdownItem>
                                                              </DropdownGroup>,
                                                            ]
                                                          }
                                                          isGrouped={true}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          menuAppendTo="inline"
                                                          onSelect={[Function]}
                                                          position="left"
                                                          toggle={
                                                            <DropdownToggle
                                                              isDisabled={true}
                                                              onToggle={[Function]}
                                                            >
                                                              <FilterIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              />
                                                               
                                                              Filter
                                                            </DropdownToggle>
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-dropdown"
                                                            data-ouia-component-id={31}
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe={true}
                                                          >
                                                            <DropdownToggle
                                                              aria-haspopup={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-toggle-id-4"
                                                              isDisabled={true}
                                                              isOpen={false}
                                                              isPlain={false}
                                                              key=".0"
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="31"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      class="pf-c-dropdown__toggle"
                                                                      disabled=""
                                                                      id="pf-toggle-id-4"
                                                                      type="button"
                                                                    >
                                                                      <span
                                                                        class="pf-c-dropdown__toggle-text"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 512 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                         
                                                                        Filter
                                                                      </span>
                                                                      <span
                                                                        class="pf-c-dropdown__toggle-icon"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 320 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </span>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <Toggle
                                                                aria-haspopup={true}
                                                                bubbleEvent={false}
                                                                className=""
                                                                getMenuRef={[Function]}
                                                                id="pf-toggle-id-4"
                                                                isActive={false}
                                                                isDisabled={true}
                                                                isOpen={false}
                                                                isPlain={false}
                                                                isPrimary={false}
                                                                isSplitButton={false}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown"
                                                                      data-ouia-component-id="31"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe="true"
                                                                    >
                                                                      <button
                                                                        aria-expanded="false"
                                                                        aria-haspopup="true"
                                                                        class="pf-c-dropdown__toggle"
                                                                        disabled=""
                                                                        id="pf-toggle-id-4"
                                                                        type="button"
                                                                      >
                                                                        <span
                                                                          class="pf-c-dropdown__toggle-text"
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            fill="currentColor"
                                                                            height="1em"
                                                                            role="img"
                                                                            style="vertical-align: -0.125em;"
                                                                            viewBox="0 0 512 512"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                                              transform=""
                                                                            />
                                                                          </svg>
                                                                           
                                                                          Filter
                                                                        </span>
                                                                        <span
                                                                          class="pf-c-dropdown__toggle-icon"
                                                                        >
                                                                          <svg
                                                                            aria-hidden="true"
                                                                            fill="currentColor"
                                                                            height="1em"
                                                                            role="img"
                                                                            style="vertical-align: -0.125em;"
                                                                            viewBox="0 0 320 512"
                                                                            width="1em"
                                                                          >
                                                                            <path
                                                                              d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                              transform=""
                                                                            />
                                                                          </svg>
                                                                        </span>
                                                                      </button>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  className="pf-c-dropdown__toggle"
                                                                  disabled={true}
                                                                  id="pf-toggle-id-4"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    className="pf-c-dropdown__toggle-text"
                                                                  >
                                                                    <FilterIcon
                                                                      color="currentColor"
                                                                      noVerticalAlign={false}
                                                                      size="sm"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        aria-labelledby={null}
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style={
                                                                          Object {
                                                                            "verticalAlign": "-0.125em",
                                                                          }
                                                                        }
                                                                        viewBox="0 0 512 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </FilterIcon>
                                                                     
                                                                    Filter
                                                                  </span>
                                                                  <span
                                                                    className="pf-c-dropdown__toggle-icon"
                                                                  >
                                                                    <CaretDownIcon
                                                                      color="currentColor"
                                                                      noVerticalAlign={false}
                                                                      size="sm"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        aria-labelledby={null}
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style={
                                                                          Object {
                                                                            "verticalAlign": "-0.125em",
                                                                          }
                                                                        }
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </CaretDownIcon>
                                                                  </span>
                                                                </button>
                                                              </Toggle>
                                                            </DropdownToggle>
                                                          </div>
                                                        </DropdownWithContext>
                                                      </Dropdown>
                                                    </ClusterListFilterDropdown>
                                                  </Connect(ClusterListFilterDropdown)>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Link
                                                    replace={false}
                                                    to="/create"
                                                  >
                                                    <a
                                                      href="/create"
                                                      onClick={[Function]}
                                                    >
                                                      <Button>
                                                        <button
                                                          aria-disabled={false}
                                                          aria-label={null}
                                                          className="pf-c-button pf-m-primary"
                                                          data-ouia-component-id={32}
                                                          data-ouia-component-type="PF4/Button"
                                                          data-ouia-safe={true}
                                                          disabled={false}
                                                          type="button"
                                                        >
                                                          Create cluster
                                                        </button>
                                                      </Button>
                                                    </a>
                                                  </Link>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <Connect(ClusterListExtraActions)>
                                                    <ClusterListExtraActions
                                                      currentFlags={
                                                        Object {
                                                          "showArchived": false,
                                                        }
                                                      }
                                                      dispatch={[Function]}
                                                    >
                                                      <Dropdown
                                                        dropdownItems={
                                                          Array [
                                                            <DropdownItem
                                                              component="button"
                                                            >
                                                              <div>
                                                                <Link
                                                                  className="pf-c-dropdown__menu-item"
                                                                  replace={false}
                                                                  to="/register"
                                                                >
                                                                  Register cluster
                                                                </Link>
                                                              </div>
                                                            </DropdownItem>,
                                                            <DropdownItem
                                                              component="button"
                                                            >
                                                              <div>
                                                                <Link
                                                                  className="pf-c-dropdown__menu-item"
                                                                  replace={false}
                                                                  to="archived"
                                                                >
                                                                  Show archived clusters
                                                                </Link>
                                                              </div>
                                                            </DropdownItem>,
                                                          ]
                                                        }
                                                        isOpen={false}
                                                        isPlain={true}
                                                        onSelect={[Function]}
                                                        toggle={
                                                          <KebabToggle
                                                            onToggle={[Function]}
                                                          />
                                                        }
                                                      >
                                                        <DropdownWithContext
                                                          autoFocus={true}
                                                          className=""
                                                          direction="down"
                                                          dropdownItems={
                                                            Array [
                                                              <DropdownItem
                                                                component="button"
                                                              >
                                                                <div>
                                                                  <Link
                                                                    className="pf-c-dropdown__menu-item"
                                                                    replace={false}
                                                                    to="/register"
                                                                  >
                                                                    Register cluster
                                                                  </Link>
                                                                </div>
                                                              </DropdownItem>,
                                                              <DropdownItem
                                                                component="button"
                                                              >
                                                                <div>
                                                                  <Link
                                                                    className="pf-c-dropdown__menu-item"
                                                                    replace={false}
                                                                    to="archived"
                                                                  >
                                                                    Show archived clusters
                                                                  </Link>
                                                                </div>
                                                              </DropdownItem>,
                                                            ]
                                                          }
                                                          isGrouped={false}
                                                          isOpen={false}
                                                          isPlain={true}
                                                          menuAppendTo="inline"
                                                          onSelect={[Function]}
                                                          position="left"
                                                          toggle={
                                                            <KebabToggle
                                                              onToggle={[Function]}
                                                            />
                                                          }
                                                        >
                                                          <div
                                                            className="pf-c-dropdown"
                                                            data-ouia-component-id={8}
                                                            data-ouia-component-type="PF4/Dropdown"
                                                            data-ouia-safe={true}
                                                          >
                                                            <KebabToggle
                                                              aria-haspopup={true}
                                                              getMenuRef={[Function]}
                                                              id="pf-toggle-id-1"
                                                              isOpen={false}
                                                              isPlain={true}
                                                              key=".0"
                                                              onEnter={[Function]}
                                                              onToggle={[Function]}
                                                              parentRef={
                                                                Object {
                                                                  "current": <div
                                                                    class="pf-c-dropdown"
                                                                    data-ouia-component-id="8"
                                                                    data-ouia-component-type="PF4/Dropdown"
                                                                    data-ouia-safe="true"
                                                                  >
                                                                    <button
                                                                      aria-expanded="false"
                                                                      aria-haspopup="true"
                                                                      aria-label="Actions"
                                                                      class="pf-c-dropdown__toggle pf-m-plain"
                                                                      id="pf-toggle-id-1"
                                                                      type="button"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 192 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </button>
                                                                  </div>,
                                                                }
                                                              }
                                                            >
                                                              <Toggle
                                                                aria-haspopup={true}
                                                                aria-label="Actions"
                                                                bubbleEvent={false}
                                                                className=""
                                                                getMenuRef={[Function]}
                                                                id="pf-toggle-id-1"
                                                                isActive={false}
                                                                isDisabled={false}
                                                                isOpen={false}
                                                                isPlain={true}
                                                                isPrimary={false}
                                                                isSplitButton={false}
                                                                onEnter={[Function]}
                                                                onToggle={[Function]}
                                                                parentRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="pf-c-dropdown"
                                                                      data-ouia-component-id="8"
                                                                      data-ouia-component-type="PF4/Dropdown"
                                                                      data-ouia-safe="true"
                                                                    >
                                                                      <button
                                                                        aria-expanded="false"
                                                                        aria-haspopup="true"
                                                                        aria-label="Actions"
                                                                        class="pf-c-dropdown__toggle pf-m-plain"
                                                                        id="pf-toggle-id-1"
                                                                        type="button"
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style="vertical-align: -0.125em;"
                                                                          viewBox="0 0 192 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </button>
                                                                    </div>,
                                                                  }
                                                                }
                                                              >
                                                                <button
                                                                  aria-expanded={false}
                                                                  aria-haspopup={true}
                                                                  aria-label="Actions"
                                                                  className="pf-c-dropdown__toggle pf-m-plain"
                                                                  disabled={false}
                                                                  id="pf-toggle-id-1"
                                                                  onClick={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  type="button"
                                                                >
                                                                  <EllipsisVIcon
                                                                    color="currentColor"
                                                                    noVerticalAlign={false}
                                                                    size="sm"
                                                                  >
                                                                    <svg
                                                                      aria-hidden={true}
                                                                      aria-labelledby={null}
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style={
                                                                        Object {
                                                                          "verticalAlign": "-0.125em",
                                                                        }
                                                                      }
                                                                      viewBox="0 0 192 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z"
                                                                        transform=""
                                                                      />
                                                                    </svg>
                                                                  </EllipsisVIcon>
                                                                </button>
                                                              </Toggle>
                                                            </KebabToggle>
                                                          </div>
                                                        </DropdownWithContext>
                                                      </Dropdown>
                                                    </ClusterListExtraActions>
                                                  </Connect(ClusterListExtraActions)>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                />
                                              </ToolbarItem>
                                              <ToolbarItem
                                                alignment={
                                                  Object {
                                                    "default": "alignRight",
                                                  }
                                                }
                                                variant="pagination"
                                              >
                                                <div
                                                  className="pf-c-toolbar__item pf-m-pagination pf-m-align-right"
                                                >
                                                  <Connect(ViewPaginationRow)
                                                    currentPage={1}
                                                    isDisabled={true}
                                                    pageSize={50}
                                                    totalCount={0}
                                                    totalPages={0}
                                                    variant="top"
                                                    viewType="CLUSTERS_VIEW"
                                                  >
                                                    <ViewPaginationRow
                                                      currentPage={1}
                                                      isDisabled={true}
                                                      onFirstPage={[Function]}
                                                      onLastPage={[Function]}
                                                      onNextPage={[Function]}
                                                      onPageInput={[Function]}
                                                      onPerPageSelect={[Function]}
                                                      onPreviousPage={[Function]}
                                                      pageSize={50}
                                                      totalCount={0}
                                                      totalPages={0}
                                                      variant="top"
                                                      viewType="CLUSTERS_VIEW"
                                                    >
                                                      <Pagination
                                                        className=""
                                                        defaultToFullPage={false}
                                                        dropDirection="down"
                                                        firstPage={1}
                                                        isCompact={true}
                                                        isDisabled={true}
                                                        itemCount={0}
                                                        itemsEnd={0}
                                                        itemsStart={1}
                                                        offset={0}
                                                        onFirstClick={[Function]}
                                                        onLastClick={[Function]}
                                                        onNextClick={[Function]}
                                                        onPageInput={[Function]}
                                                        onPerPageSelect={[Function]}
                                                        onPreviousClick={[Function]}
                                                        onSetPage={[Function]}
                                                        ouiaSafe={true}
                                                        page={1}
                                                        perPage={50}
                                                        perPageOptions={
                                                          Array [
                                                            Object {
                                                              "title": "10",
                                                              "value": 10,
                                                            },
                                                            Object {
                                                              "title": "20",
                                                              "value": 20,
                                                            },
                                                            Object {
                                                              "title": "50",
                                                              "value": 50,
                                                            },
                                                            Object {
                                                              "title": "100",
                                                              "value": 100,
                                                            },
                                                          ]
                                                        }
                                                        titles={
                                                          Object {
                                                            "currPage": "Current page",
                                                            "items": "",
                                                            "itemsPerPage": "Items per page",
                                                            "optionsToggle": "Items per page",
                                                            "page": "",
                                                            "paginationTitle": "Pagination",
                                                            "perPageSuffix": "per page",
                                                            "toFirstPage": "Go to first page",
                                                            "toLastPage": "Go to last page",
                                                            "toNextPage": "Go to next page",
                                                            "toPreviousPage": "Go to previous page",
                                                          }
                                                        }
                                                        toggleTemplate={[Function]}
                                                        variant="top"
                                                        widgetId="pagination-options-menu"
                                                      >
                                                        <div
                                                          className="pf-c-pagination pf-m-compact"
                                                          data-ouia-component-id={9}
                                                          data-ouia-component-type="PF4/Pagination"
                                                          data-ouia-safe={true}
                                                          id="pagination-options-menu-0"
                                                        >
                                                          <div
                                                            className="pf-c-pagination__total-items"
                                                          >
                                                            <ToggleTemplate
                                                              firstIndex={0}
                                                              itemCount={0}
                                                              itemsTitle=""
                                                              lastIndex={0}
                                                            >
                                                              <b>
                                                                0
                                                                 - 
                                                                0
                                                              </b>
                                                               
                                                              of 
                                                              <b>
                                                                0
                                                              </b>
                                                               
                                                            </ToggleTemplate>
                                                          </div>
                                                          <PaginationOptionsMenu
                                                            className=""
                                                            defaultToFullPage={false}
                                                            dropDirection="down"
                                                            firstIndex={1}
                                                            isDisabled={true}
                                                            itemCount={0}
                                                            itemsPerPageTitle="Items per page"
                                                            itemsTitle=""
                                                            lastIndex={0}
                                                            lastPage={0}
                                                            onPerPageSelect={[Function]}
                                                            optionsToggle="Items per page"
                                                            page={0}
                                                            perPage={50}
                                                            perPageOptions={
                                                              Array [
                                                                Object {
                                                                  "title": "10",
                                                                  "value": 10,
                                                                },
                                                                Object {
                                                                  "title": "20",
                                                                  "value": 20,
                                                                },
                                                                Object {
                                                                  "title": "50",
                                                                  "value": 50,
                                                                },
                                                                Object {
                                                                  "title": "100",
                                                                  "value": 100,
                                                                },
                                                              ]
                                                            }
                                                            perPageSuffix="per page"
                                                            toggleTemplate={[Function]}
                                                            widgetId="pagination-options-menu"
                                                          >
                                                            <DropdownWithContext
                                                              autoFocus={true}
                                                              className=""
                                                              direction="down"
                                                              dropdownItems={
                                                                Array [
                                                                  <DropdownItem
                                                                    className=""
                                                                    component="button"
                                                                    data-action="per-page-10"
                                                                    onClick={[Function]}
                                                                  >
                                                                    10
                                                                     per page
                                                                  </DropdownItem>,
                                                                  <DropdownItem
                                                                    className=""
                                                                    component="button"
                                                                    data-action="per-page-20"
                                                                    onClick={[Function]}
                                                                  >
                                                                    20
                                                                     per page
                                                                  </DropdownItem>,
                                                                  <DropdownItem
                                                                    className="pf-m-selected"
                                                                    component="button"
                                                                    data-action="per-page-50"
                                                                    onClick={[Function]}
                                                                  >
                                                                    50
                                                                     per page
                                                                    <div
                                                                      className="pf-c-options-menu__menu-item-icon"
                                                                    >
                                                                      <CheckIcon
                                                                        color="currentColor"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      />
                                                                    </div>
                                                                  </DropdownItem>,
                                                                  <DropdownItem
                                                                    className=""
                                                                    component="button"
                                                                    data-action="per-page-100"
                                                                    onClick={[Function]}
                                                                  >
                                                                    100
                                                                     per page
                                                                  </DropdownItem>,
                                                                ]
                                                              }
                                                              isGrouped={false}
                                                              isOpen={false}
                                                              isPlain={true}
                                                              menuAppendTo="inline"
                                                              onSelect={[Function]}
                                                              position="left"
                                                              toggle={
                                                                <OptionsToggle
                                                                  firstIndex={1}
                                                                  isDisabled={true}
                                                                  isOpen={false}
                                                                  itemCount={0}
                                                                  itemsPerPageTitle="Items per page"
                                                                  itemsTitle=""
                                                                  lastIndex={0}
                                                                  onToggle={[Function]}
                                                                  optionsToggle="Items per page"
                                                                  parentRef={null}
                                                                  showToggle={true}
                                                                  toggleTemplate={[Function]}
                                                                  widgetId="pagination-options-menu"
                                                                />
                                                              }
                                                            >
                                                              <div
                                                                className="pf-c-options-menu"
                                                                data-ouia-component-id={10}
                                                                data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                                data-ouia-safe={true}
                                                              >
                                                                <OptionsToggle
                                                                  aria-haspopup={true}
                                                                  firstIndex={1}
                                                                  getMenuRef={[Function]}
                                                                  id="pf-toggle-id-2"
                                                                  isDisabled={true}
                                                                  isOpen={false}
                                                                  isPlain={true}
                                                                  itemCount={0}
                                                                  itemsPerPageTitle="Items per page"
                                                                  itemsTitle=""
                                                                  key=".0"
                                                                  lastIndex={0}
                                                                  onEnter={[Function]}
                                                                  onToggle={[Function]}
                                                                  optionsToggle="Items per page"
                                                                  parentRef={
                                                                    Object {
                                                                      "current": <div
                                                                        class="pf-c-options-menu"
                                                                        data-ouia-component-id="10"
                                                                        data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                                        data-ouia-safe="true"
                                                                      >
                                                                        <div
                                                                          class="pf-c-options-menu__toggle pf-m-disabled pf-m-plain pf-m-text"
                                                                        >
                                                                          <span
                                                                            class="pf-c-options-menu__toggle-text"
                                                                          >
                                                                            <b>
                                                                              1
                                                                               - 
                                                                              0
                                                                            </b>
                                                                             
                                                                            of 
                                                                            <b>
                                                                              0
                                                                            </b>
                                                                             
                                                                            
                                                                          </span>
                                                                          <button
                                                                            aria-expanded="false"
                                                                            aria-label="Items per page"
                                                                            class="  pf-c-options-menu__toggle-button"
                                                                            disabled=""
                                                                            id="pagination-options-menu-toggle-0"
                                                                            type="button"
                                                                          >
                                                                            <span
                                                                              class="pf-c-options-menu__toggle-button-icon"
                                                                            >
                                                                              <svg
                                                                                aria-hidden="true"
                                                                                fill="currentColor"
                                                                                height="1em"
                                                                                role="img"
                                                                                style="vertical-align: -0.125em;"
                                                                                viewBox="0 0 320 512"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                                  transform=""
                                                                                />
                                                                              </svg>
                                                                            </span>
                                                                          </button>
                                                                        </div>
                                                                      </div>,
                                                                    }
                                                                  }
                                                                  showToggle={true}
                                                                  toggleTemplate={[Function]}
                                                                  widgetId="pagination-options-menu"
                                                                >
                                                                  <div
                                                                    className="pf-c-options-menu__toggle pf-m-disabled pf-m-plain pf-m-text"
                                                                  >
                                                                    <span
                                                                      className="pf-c-options-menu__toggle-text"
                                                                    >
                                                                      <ToggleTemplate
                                                                        firstIndex={1}
                                                                        itemCount={0}
                                                                        itemsTitle=""
                                                                        lastIndex={0}
                                                                      >
                                                                        <b>
                                                                          1
                                                                           - 
                                                                          0
                                                                        </b>
                                                                         
                                                                        of 
                                                                        <b>
                                                                          0
                                                                        </b>
                                                                         
                                                                      </ToggleTemplate>
                                                                    </span>
                                                                    <DropdownToggle
                                                                      aria-label="Items per page"
                                                                      className="pf-c-options-menu__toggle-button"
                                                                      id="pagination-options-menu-toggle-0"
                                                                      isDisabled={true}
                                                                      isOpen={false}
                                                                      onEnter={[Function]}
                                                                      onToggle={[Function]}
                                                                      parentRef={
                                                                        Object {
                                                                          "current": <div
                                                                            class="pf-c-options-menu"
                                                                            data-ouia-component-id="10"
                                                                            data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                                            data-ouia-safe="true"
                                                                          >
                                                                            <div
                                                                              class="pf-c-options-menu__toggle pf-m-disabled pf-m-plain pf-m-text"
                                                                            >
                                                                              <span
                                                                                class="pf-c-options-menu__toggle-text"
                                                                              >
                                                                                <b>
                                                                                  1
                                                                                   - 
                                                                                  0
                                                                                </b>
                                                                                 
                                                                                of 
                                                                                <b>
                                                                                  0
                                                                                </b>
                                                                                 
                                                                                
                                                                              </span>
                                                                              <button
                                                                                aria-expanded="false"
                                                                                aria-label="Items per page"
                                                                                class="  pf-c-options-menu__toggle-button"
                                                                                disabled=""
                                                                                id="pagination-options-menu-toggle-0"
                                                                                type="button"
                                                                              >
                                                                                <span
                                                                                  class="pf-c-options-menu__toggle-button-icon"
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden="true"
                                                                                    fill="currentColor"
                                                                                    height="1em"
                                                                                    role="img"
                                                                                    style="vertical-align: -0.125em;"
                                                                                    viewBox="0 0 320 512"
                                                                                    width="1em"
                                                                                  >
                                                                                    <path
                                                                                      d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                                      transform=""
                                                                                    />
                                                                                  </svg>
                                                                                </span>
                                                                              </button>
                                                                            </div>
                                                                          </div>,
                                                                        }
                                                                      }
                                                                    >
                                                                      <Toggle
                                                                        aria-label="Items per page"
                                                                        bubbleEvent={false}
                                                                        className="pf-c-options-menu__toggle-button"
                                                                        getMenuRef={null}
                                                                        id="pagination-options-menu-toggle-0"
                                                                        isActive={false}
                                                                        isDisabled={true}
                                                                        isOpen={false}
                                                                        isPlain={false}
                                                                        isPrimary={false}
                                                                        isSplitButton={false}
                                                                        onEnter={[Function]}
                                                                        onToggle={[Function]}
                                                                        parentRef={
                                                                          Object {
                                                                            "current": <div
                                                                              class="pf-c-options-menu"
                                                                              data-ouia-component-id="10"
                                                                              data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                                              data-ouia-safe="true"
                                                                            >
                                                                              <div
                                                                                class="pf-c-options-menu__toggle pf-m-disabled pf-m-plain pf-m-text"
                                                                              >
                                                                                <span
                                                                                  class="pf-c-options-menu__toggle-text"
                                                                                >
                                                                                  <b>
                                                                                    1
                                                                                     - 
                                                                                    0
                                                                                  </b>
                                                                                   
                                                                                  of 
                                                                                  <b>
                                                                                    0
                                                                                  </b>
                                                                                   
                                                                                  
                                                                                </span>
                                                                                <button
                                                                                  aria-expanded="false"
                                                                                  aria-label="Items per page"
                                                                                  class="  pf-c-options-menu__toggle-button"
                                                                                  disabled=""
                                                                                  id="pagination-options-menu-toggle-0"
                                                                                  type="button"
                                                                                >
                                                                                  <span
                                                                                    class="pf-c-options-menu__toggle-button-icon"
                                                                                  >
                                                                                    <svg
                                                                                      aria-hidden="true"
                                                                                      fill="currentColor"
                                                                                      height="1em"
                                                                                      role="img"
                                                                                      style="vertical-align: -0.125em;"
                                                                                      viewBox="0 0 320 512"
                                                                                      width="1em"
                                                                                    >
                                                                                      <path
                                                                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                                        transform=""
                                                                                      />
                                                                                    </svg>
                                                                                  </span>
                                                                                </button>
                                                                              </div>
                                                                            </div>,
                                                                          }
                                                                        }
                                                                      >
                                                                        <button
                                                                          aria-expanded={false}
                                                                          aria-label="Items per page"
                                                                          className="  pf-c-options-menu__toggle-button"
                                                                          disabled={true}
                                                                          id="pagination-options-menu-toggle-0"
                                                                          onClick={[Function]}
                                                                          onKeyDown={[Function]}
                                                                          type="button"
                                                                        >
                                                                          <span
                                                                            className="pf-c-options-menu__toggle-button-icon"
                                                                          >
                                                                            <CaretDownIcon
                                                                              color="currentColor"
                                                                              noVerticalAlign={false}
                                                                              size="sm"
                                                                            >
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                aria-labelledby={null}
                                                                                fill="currentColor"
                                                                                height="1em"
                                                                                role="img"
                                                                                style={
                                                                                  Object {
                                                                                    "verticalAlign": "-0.125em",
                                                                                  }
                                                                                }
                                                                                viewBox="0 0 320 512"
                                                                                width="1em"
                                                                              >
                                                                                <path
                                                                                  d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                                  transform=""
                                                                                />
                                                                              </svg>
                                                                            </CaretDownIcon>
                                                                          </span>
                                                                        </button>
                                                                      </Toggle>
                                                                    </DropdownToggle>
                                                                  </div>
                                                                </OptionsToggle>
                                                              </div>
                                                            </DropdownWithContext>
                                                          </PaginationOptionsMenu>
                                                          <Navigation
                                                            className=""
                                                            currPage="Current page"
                                                            firstPage={1}
                                                            isCompact={true}
                                                            isDisabled={true}
                                                            lastPage={0}
                                                            onFirstClick={[Function]}
                                                            onLastClick={[Function]}
                                                            onNextClick={[Function]}
                                                            onPageInput={[Function]}
                                                            onPreviousClick={[Function]}
                                                            onSetPage={[Function]}
                                                            page={0}
                                                            pagesTitle=""
                                                            paginationTitle="Pagination"
                                                            perPage={50}
                                                            toFirstPage="Go to first page"
                                                            toLastPage="Go to last page"
                                                            toNextPage="Go to next page"
                                                            toPreviousPage="Go to previous page"
                                                          >
                                                            <nav
                                                              aria-label="Pagination"
                                                              className="pf-c-pagination__nav"
                                                            >
                                                              <div
                                                                className="pf-c-pagination__nav-control"
                                                              >
                                                                <Button
                                                                  aria-label="Go to previous page"
                                                                  data-action="previous"
                                                                  isDisabled={true}
                                                                  onClick={[Function]}
                                                                  variant="plain"
                                                                >
                                                                  <button
                                                                    aria-disabled={true}
                                                                    aria-label="Go to previous page"
                                                                    className="pf-c-button pf-m-plain pf-m-disabled"
                                                                    data-action="previous"
                                                                    data-ouia-component-id={11}
                                                                    data-ouia-component-type="PF4/Button"
                                                                    data-ouia-safe={true}
                                                                    disabled={true}
                                                                    onClick={[Function]}
                                                                    tabIndex={null}
                                                                    type="button"
                                                                  >
                                                                    <AngleLeftIcon
                                                                      color="currentColor"
                                                                      noVerticalAlign={false}
                                                                      size="sm"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        aria-labelledby={null}
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style={
                                                                          Object {
                                                                            "verticalAlign": "-0.125em",
                                                                          }
                                                                        }
                                                                        viewBox="0 0 256 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </AngleLeftIcon>
                                                                  </button>
                                                                </Button>
                                                              </div>
                                                              <div
                                                                className="pf-c-pagination__nav-control"
                                                              >
                                                                <Button
                                                                  aria-label="Go to next page"
                                                                  data-action="next"
                                                                  isDisabled={true}
                                                                  onClick={[Function]}
                                                                  variant="plain"
                                                                >
                                                                  <button
                                                                    aria-disabled={true}
                                                                    aria-label="Go to next page"
                                                                    className="pf-c-button pf-m-plain pf-m-disabled"
                                                                    data-action="next"
                                                                    data-ouia-component-id={12}
                                                                    data-ouia-component-type="PF4/Button"
                                                                    data-ouia-safe={true}
                                                                    disabled={true}
                                                                    onClick={[Function]}
                                                                    tabIndex={null}
                                                                    type="button"
                                                                  >
                                                                    <AngleRightIcon
                                                                      color="currentColor"
                                                                      noVerticalAlign={false}
                                                                      size="sm"
                                                                    >
                                                                      <svg
                                                                        aria-hidden={true}
                                                                        aria-labelledby={null}
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style={
                                                                          Object {
                                                                            "verticalAlign": "-0.125em",
                                                                          }
                                                                        }
                                                                        viewBox="0 0 256 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </AngleRightIcon>
                                                                  </button>
                                                                </Button>
                                                              </div>
                                                            </nav>
                                                          </Navigation>
                                                        </div>
                                                      </Pagination>
                                                    </ViewPaginationRow>
                                                  </Connect(ViewPaginationRow)>
                                                </div>
                                              </ToolbarItem>
                                              <ToolbarItem>
                                                <div
                                                  className="pf-c-toolbar__item"
                                                >
                                                  <RefreshBtn
                                                    autoRefresh={true}
                                                    classOptions="cluster-list-top"
                                                    isDisabled={true}
                                                    refreshFunc={[Function]}
                                                  >
                                                    <Tooltip
                                                      appendTo={[Function]}
                                                      aria="describedby"
                                                      boundary="window"
                                                      className=""
                                                      content="Refresh"
                                                      distance={15}
                                                      enableFlip={true}
                                                      entryDelay={500}
                                                      exitDelay={500}
                                                      flipBehavior={
                                                        Array [
                                                          "top",
                                                          "right",
                                                          "bottom",
                                                          "left",
                                                          "top",
                                                          "right",
                                                          "bottom",
                                                        ]
                                                      }
                                                      id=""
                                                      isAppLauncher={false}
                                                      isContentLeftAligned={false}
                                                      isVisible={false}
                                                      maxWidth="18.75rem"
                                                      position="bottom"
                                                      tippyProps={Object {}}
                                                      trigger="mouseenter focus"
                                                      zIndex={9999}
                                                    >
                                                      <PopoverBase
                                                        appendTo={[Function]}
                                                        aria="describedby"
                                                        arrow={true}
                                                        boundary="window"
                                                        content={
                                                          <div
                                                            className=""
                                                            id=""
                                                            role="tooltip"
                                                          >
                                                            <TooltipContent
                                                              isLeftAligned={false}
                                                            >
                                                              Refresh
                                                            </TooltipContent>
                                                          </div>
                                                        }
                                                        delay={
                                                          Array [
                                                            500,
                                                            500,
                                                          ]
                                                        }
                                                        distance={15}
                                                        flip={true}
                                                        flipBehavior={
                                                          Array [
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                            "left",
                                                            "top",
                                                            "right",
                                                            "bottom",
                                                          ]
                                                        }
                                                        isVisible={false}
                                                        lazy={true}
                                                        maxWidth="18.75rem"
                                                        onCreate={[Function]}
                                                        placement="bottom"
                                                        popperOptions={
                                                          Object {
                                                            "modifiers": Object {
                                                              "hide": Object {
                                                                "enabled": true,
                                                              },
                                                              "preventOverflow": Object {
                                                                "enabled": true,
                                                              },
                                                            },
                                                          }
                                                        }
                                                        theme="pf-tooltip"
                                                        trigger="mouseenter focus"
                                                        zIndex={9999}
                                                      >
                                                        <Button
                                                          aria-label="Refresh"
                                                          className="cluster-list-top"
                                                          isDisabled={true}
                                                          onClick={[Function]}
                                                          variant="plain"
                                                        >
                                                          <button
                                                            aria-disabled={true}
                                                            aria-label="Refresh"
                                                            className="pf-c-button pf-m-plain pf-m-disabled cluster-list-top"
                                                            data-ouia-component-id={33}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={true}
                                                            onClick={[Function]}
                                                            tabIndex={null}
                                                            type="button"
                                                          >
                                                            <RedoIcon
                                                              color="currentColor"
                                                              noVerticalAlign={false}
                                                              size="sm"
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                aria-labelledby={null}
                                                                fill="currentColor"
                                                                height="1em"
                                                                role="img"
                                                                style={
                                                                  Object {
                                                                    "verticalAlign": "-0.125em",
                                                                  }
                                                                }
                                                                viewBox="0 0 512 512"
                                                                width="1em"
                                                              >
                                                                <path
                                                                  d="M500.33 0h-47.41a12 12 0 0 0-12 12.57l4 82.76A247.42 247.42 0 0 0 256 8C119.34 8 7.9 119.53 8 256.19 8.1 393.07 119.1 504 256 504a247.1 247.1 0 0 0 166.18-63.91 12 12 0 0 0 .48-17.43l-34-34a12 12 0 0 0-16.38-.55A176 176 0 1 1 402.1 157.8l-101.53-4.87a12 12 0 0 0-12.57 12v47.41a12 12 0 0 0 12 12h200.33a12 12 0 0 0 12-12V12a12 12 0 0 0-12-12z"
                                                                  transform=""
                                                                />
                                                              </svg>
                                                            </RedoIcon>
                                                          </button>
                                                        </Button>
                                                        <Portal
                                                          containerInfo={
                                                            <div>
                                                              <div
                                                                class=""
                                                                id=""
                                                                role="tooltip"
                                                              >
                                                                <div
                                                                  class="pf-c-tooltip__content"
                                                                >
                                                                  Refresh
                                                                </div>
                                                              </div>
                                                            </div>
                                                          }
                                                        >
                                                          <div
                                                            className=""
                                                            id=""
                                                            role="tooltip"
                                                          >
                                                            <TooltipContent
                                                              isLeftAligned={false}
                                                            >
                                                              <div
                                                                className="pf-c-tooltip__content"
                                                              >
                                                                Refresh
                                                              </div>
                                                            </TooltipContent>
                                                          </div>
                                                        </Portal>
                                                      </PopoverBase>
                                                    </Tooltip>
                                                  </RefreshBtn>
                                                </div>
                                              </ToolbarItem>
                                            </div>
                                            <ToolbarExpandableContent
                                              chipContainerRef={
                                                Object {
                                                  "current": null,
                                                }
                                              }
                                              clearFiltersButtonText="Clear all filters"
                                              expandableContentRef={
                                                Object {
                                                  "current": <div
                                                    class="pf-c-toolbar__expandable-content"
                                                    id="cluster-list-toolbar-expandable-content-1"
                                                  >
                                                    <div
                                                      class="pf-c-toolbar__group"
                                                    />
                                                  </div>,
                                                }
                                              }
                                              id="cluster-list-toolbar-expandable-content-1"
                                              isExpanded={false}
                                              showClearFiltersButton={false}
                                            >
                                              <div
                                                className="pf-c-toolbar__expandable-content"
                                                id="cluster-list-toolbar-expandable-content-1"
                                              >
                                                <ForwardRef>
                                                  <ToolbarGroupWithRef
                                                    innerRef={null}
                                                  >
                                                    <div
                                                      className="pf-c-toolbar__group"
                                                    />
                                                  </ToolbarGroupWithRef>
                                                </ForwardRef>
                                              </div>
                                            </ToolbarExpandableContent>
                                          </div>
                                        </ToolbarContent>
                                        <ToolbarChipGroupContent
                                          chipGroupContentRef={
                                            Object {
                                              "current": <div
                                                class="pf-c-toolbar__content pf-m-hidden"
                                                hidden=""
                                              >
                                                <div
                                                  class="pf-c-toolbar__group"
                                                />
                                              </div>,
                                            }
                                          }
                                          clearFiltersButtonText="Clear all filters"
                                          collapseListedFiltersBreakpoint="lg"
                                          isExpanded={false}
                                          numberOfFilters={0}
                                          showClearFiltersButton={false}
                                        >
                                          <div
                                            className="pf-c-toolbar__content pf-m-hidden"
                                            hidden={true}
                                          >
                                            <ForwardRef
                                              className=""
                                            >
                                              <ToolbarGroupWithRef
                                                className=""
                                                innerRef={null}
                                              >
                                                <div
                                                  className="pf-c-toolbar__group"
                                                />
                                              </ToolbarGroupWithRef>
                                            </ForwardRef>
                                          </div>
                                        </ToolbarChipGroupContent>
                                      </div>
                                    </Toolbar>
                                    <Connect(ClusterListFilterChipGroup)
                                      history={
                                        Object {
                                          "action": "POP",
                                          "block": [Function],
                                          "canGo": [Function],
                                          "createHref": [Function],
                                          "entries": Array [
                                            Object {
                                              "hash": "",
                                              "key": "testKey",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                          ],
                                          "go": [Function],
                                          "goBack": [Function],
                                          "goForward": [Function],
                                          "index": 0,
                                          "length": 1,
                                          "listen": [Function],
                                          "location": Object {
                                            "hash": "",
                                            "key": "testKey",
                                            "pathname": "/",
                                            "search": "",
                                          },
                                          "push": [Function],
                                          "replace": [Function],
                                        }
                                      }
                                    >
                                      <ClusterListFilterChipGroup
                                        currentFilters={Object {}}
                                        history={
                                          Object {
                                            "action": "POP",
                                            "block": [Function],
                                            "canGo": [Function],
                                            "createHref": [Function],
                                            "entries": Array [
                                              Object {
                                                "hash": "",
                                                "key": "testKey",
                                                "pathname": "/",
                                                "search": "",
                                              },
                                            ],
                                            "go": [Function],
                                            "goBack": [Function],
                                            "goForward": [Function],
                                            "index": 0,
                                            "length": 1,
                                            "listen": [Function],
                                            "location": Object {
                                              "hash": "",
                                              "key": "testKey",
                                              "pathname": "/",
                                              "search": "",
                                            },
                                            "push": [Function],
                                            "replace": [Function],
                                          }
                                        }
                                        setFilter={[Function]}
                                      />
                                    </Connect(ClusterListFilterChipGroup)>
                                    <ClusterListTable
                                      canSubscribeOCPList={Object {}}
                                      clusters={Array []}
                                      isPending={true}
                                      openModal={[Function]}
                                      setClusterDetails={[Function]}
                                      setSorting={[Function]}
                                      viewOptions={
                                        Object {
                                          "currentPage": 1,
                                          "filter": "",
                                          "flags": Object {
                                            "showArchived": false,
                                          },
                                          "pageSize": 50,
                                          "sorting": Object {
                                            "isAscending": true,
                                            "sortField": "name",
                                          },
                                          "totalCount": 0,
                                          "totalPages": 0,
                                        }
                                      }
                                    >
                                      <Table
                                        aria-label="Cluster List"
                                        borders={true}
                                        canSelectAll={true}
                                        cells={
                                          Array [
                                            Object {
                                              "title": "Name",
                                              "transforms": Array [
                                                [Function],
                                                [Function],
                                              ],
                                            },
                                            Object {
                                              "title": "Status",
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            Object {
                                              "title": "Type",
                                              "transforms": Array [
                                                [Function],
                                              ],
                                            },
                                            Object {
                                              "columnTransforms": Array [
                                                [Function],
                                              ],
                                              "title": "Created",
                                            },
                                            Object {
                                              "columnTransforms": Array [
                                                [Function],
                                              ],
                                              "title": "Version",
                                            },
                                            Object {
                                              "columnTransforms": Array [
                                                [Function],
                                              ],
                                              "title": "Provider (Location)",
                                            },
                                            "",
                                          ]
                                        }
                                        className=""
                                        contentId="expanded-content"
                                        dropdownDirection="down"
                                        dropdownPosition="right"
                                        expandId="expandable-toggle"
                                        gridBreakPoint="grid-md"
                                        onSort={[Function]}
                                        ouiaSafe={true}
                                        role="grid"
                                        rowLabeledBy="simple-node"
                                        rows={
                                          Array [
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                            Object {
                                              "cells": Array [
                                                Object {
                                                  "props": Object {
                                                    "colSpan": 6,
                                                  },
                                                  "title": <Skeleton
                                                    isDark={false}
                                                    size="lg"
                                                  />,
                                                },
                                              ],
                                            },
                                          ]
                                        }
                                        sortBy={
                                          Object {
                                            "direction": "asc",
                                            "index": 0,
                                          }
                                        }
                                        variant={null}
                                      >
                                        <Provider
                                          aria-label="Cluster List"
                                          className="pf-c-table pf-m-grid-md"
                                          columns={
                                            Array [
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 0,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": undefined,
                                                  "onSort": [Function],
                                                  "rowLabeledBy": "simple-node",
                                                  "sortBy": Object {
                                                    "direction": "asc",
                                                    "index": 0,
                                                  },
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "Name",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "name",
                                                "props": Object {
                                                  "data-key": 0,
                                                  "data-label": "Name",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 0,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": undefined,
                                                  "onSort": [Function],
                                                  "rowLabeledBy": "simple-node",
                                                  "sortBy": Object {
                                                    "direction": "asc",
                                                    "index": 0,
                                                  },
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "Status",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "status",
                                                "props": Object {
                                                  "data-key": 1,
                                                  "data-label": "Status",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 0,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": undefined,
                                                  "onSort": [Function],
                                                  "rowLabeledBy": "simple-node",
                                                  "sortBy": Object {
                                                    "direction": "asc",
                                                    "index": 0,
                                                  },
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "Type",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "type",
                                                "props": Object {
                                                  "data-key": 2,
                                                  "data-label": "Type",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 0,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": undefined,
                                                  "onSort": [Function],
                                                  "rowLabeledBy": "simple-node",
                                                  "sortBy": Object {
                                                    "direction": "asc",
                                                    "index": 0,
                                                  },
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "Created",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "created",
                                                "props": Object {
                                                  "data-key": 3,
                                                  "data-label": "Created",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 0,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": undefined,
                                                  "onSort": [Function],
                                                  "rowLabeledBy": "simple-node",
                                                  "sortBy": Object {
                                                    "direction": "asc",
                                                    "index": 0,
                                                  },
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "Version",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "version",
                                                "props": Object {
                                                  "data-key": 4,
                                                  "data-label": "Version",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 0,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": undefined,
                                                  "onSort": [Function],
                                                  "rowLabeledBy": "simple-node",
                                                  "sortBy": Object {
                                                    "direction": "asc",
                                                    "index": 0,
                                                  },
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "Provider (Location)",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "provider-(location)",
                                                "props": Object {
                                                  "data-key": 5,
                                                  "data-label": "Provider (Location)",
                                                },
                                              },
                                              Object {
                                                "cell": Object {
                                                  "formatters": Array [
                                                    [Function],
                                                  ],
                                                  "transforms": Array [
                                                    [Function],
                                                  ],
                                                },
                                                "data": undefined,
                                                "extraParams": Object {
                                                  "actionResolver": undefined,
                                                  "actions": undefined,
                                                  "allRowsSelected": false,
                                                  "areActionsDisabled": undefined,
                                                  "canSelectAll": true,
                                                  "contentId": "expanded-content",
                                                  "dropdownDirection": "down",
                                                  "dropdownPosition": "right",
                                                  "expandId": "expandable-toggle",
                                                  "firstUserColumnIndex": 0,
                                                  "onCollapse": undefined,
                                                  "onExpand": undefined,
                                                  "onRowEdit": undefined,
                                                  "onSelect": undefined,
                                                  "onSort": [Function],
                                                  "rowLabeledBy": "simple-node",
                                                  "sortBy": Object {
                                                    "direction": "asc",
                                                    "index": 0,
                                                  },
                                                },
                                                "header": Object {
                                                  "formatters": Array [],
                                                  "label": "",
                                                  "transforms": Array [
                                                    [Function],
                                                    [Function],
                                                  ],
                                                },
                                                "property": "column-6",
                                                "props": Object {
                                                  "data-key": 6,
                                                  "data-label": "",
                                                },
                                              },
                                            ]
                                          }
                                          data-ouia-component-id={34}
                                          data-ouia-component-type="PF4/Table"
                                          data-ouia-safe={true}
                                          renderers={
                                            Object {
                                              "body": Object {
                                                "cell": [Function],
                                                "row": [Function],
                                                "wrapper": [Function],
                                              },
                                              "header": Object {
                                                "cell": [Function],
                                              },
                                            }
                                          }
                                          role="grid"
                                        >
                                          <table
                                            aria-label="Cluster List"
                                            className="pf-c-table pf-m-grid-md"
                                            data-ouia-component-id={34}
                                            data-ouia-component-type="PF4/Table"
                                            data-ouia-safe={true}
                                            role="grid"
                                          >
                                            <TableHeader>
                                              <ContextHeader
                                                headerRows={null}
                                              >
                                                <Component
                                                  className=""
                                                  headerRows={null}
                                                >
                                                  <BaseHeader
                                                    className=""
                                                    columns={
                                                      Array [
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Name",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "name",
                                                          "props": Object {
                                                            "data-key": 0,
                                                            "data-label": "Name",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Status",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "status",
                                                          "props": Object {
                                                            "data-key": 1,
                                                            "data-label": "Status",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Type",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "type",
                                                          "props": Object {
                                                            "data-key": 2,
                                                            "data-label": "Type",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Created",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "created",
                                                          "props": Object {
                                                            "data-key": 3,
                                                            "data-label": "Created",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Version",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "version",
                                                          "props": Object {
                                                            "data-key": 4,
                                                            "data-label": "Version",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Provider (Location)",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "provider-(location)",
                                                          "props": Object {
                                                            "data-key": 5,
                                                            "data-label": "Provider (Location)",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "column-6",
                                                          "props": Object {
                                                            "data-key": 6,
                                                            "data-label": "",
                                                          },
                                                        },
                                                      ]
                                                    }
                                                    headerRows={null}
                                                    renderers={
                                                      Object {
                                                        "body": Object {
                                                          "cell": [Function],
                                                          "row": [Function],
                                                          "wrapper": [Function],
                                                        },
                                                        "header": Object {
                                                          "cell": [Function],
                                                          "row": "tr",
                                                          "wrapper": "thead",
                                                        },
                                                        "table": "table",
                                                      }
                                                    }
                                                  >
                                                    <thead
                                                      className=""
                                                    >
                                                      <HeaderRow
                                                        key="0-header-row"
                                                        renderers={
                                                          Object {
                                                            "cell": [Function],
                                                            "row": "tr",
                                                            "wrapper": "thead",
                                                          }
                                                        }
                                                        rowData={
                                                          Array [
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": [Function],
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": Object {
                                                                  "direction": "asc",
                                                                  "index": 0,
                                                                },
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Name",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "name",
                                                              "props": Object {
                                                                "data-key": 0,
                                                                "data-label": "Name",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": [Function],
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": Object {
                                                                  "direction": "asc",
                                                                  "index": 0,
                                                                },
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Status",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "status",
                                                              "props": Object {
                                                                "data-key": 1,
                                                                "data-label": "Status",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": [Function],
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": Object {
                                                                  "direction": "asc",
                                                                  "index": 0,
                                                                },
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Type",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "type",
                                                              "props": Object {
                                                                "data-key": 2,
                                                                "data-label": "Type",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": [Function],
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": Object {
                                                                  "direction": "asc",
                                                                  "index": 0,
                                                                },
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Created",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "created",
                                                              "props": Object {
                                                                "data-key": 3,
                                                                "data-label": "Created",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": [Function],
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": Object {
                                                                  "direction": "asc",
                                                                  "index": 0,
                                                                },
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Version",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "version",
                                                              "props": Object {
                                                                "data-key": 4,
                                                                "data-label": "Version",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": [Function],
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": Object {
                                                                  "direction": "asc",
                                                                  "index": 0,
                                                                },
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "Provider (Location)",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "provider-(location)",
                                                              "props": Object {
                                                                "data-key": 5,
                                                                "data-label": "Provider (Location)",
                                                              },
                                                            },
                                                            Object {
                                                              "cell": Object {
                                                                "formatters": Array [
                                                                  [Function],
                                                                ],
                                                                "transforms": Array [
                                                                  [Function],
                                                                ],
                                                              },
                                                              "data": undefined,
                                                              "extraParams": Object {
                                                                "actionResolver": undefined,
                                                                "actions": undefined,
                                                                "allRowsSelected": false,
                                                                "areActionsDisabled": undefined,
                                                                "canSelectAll": true,
                                                                "contentId": "expanded-content",
                                                                "dropdownDirection": "down",
                                                                "dropdownPosition": "right",
                                                                "expandId": "expandable-toggle",
                                                                "firstUserColumnIndex": 0,
                                                                "onCollapse": undefined,
                                                                "onExpand": undefined,
                                                                "onRowEdit": undefined,
                                                                "onSelect": undefined,
                                                                "onSort": [Function],
                                                                "rowLabeledBy": "simple-node",
                                                                "sortBy": Object {
                                                                  "direction": "asc",
                                                                  "index": 0,
                                                                },
                                                              },
                                                              "header": Object {
                                                                "formatters": Array [],
                                                                "label": "",
                                                                "transforms": Array [
                                                                  [Function],
                                                                  [Function],
                                                                ],
                                                              },
                                                              "property": "column-6",
                                                              "props": Object {
                                                                "data-key": 6,
                                                                "data-label": "",
                                                              },
                                                            },
                                                          ]
                                                        }
                                                        rowIndex={0}
                                                      >
                                                        <tr>
                                                          <HeaderCell
                                                            aria-sort="ascending"
                                                            className="pf-c-table__sort pf-m-selected pf-m-width-30"
                                                            data-key={0}
                                                            data-label="Name"
                                                            key="0-header"
                                                            scope="col"
                                                          >
                                                            <th
                                                              aria-sort="ascending"
                                                              className="pf-c-table__sort pf-m-selected pf-m-width-30"
                                                              data-key={0}
                                                              data-label="Name"
                                                              onMouseEnter={[Function]}
                                                              scope="col"
                                                            >
                                                              <SortColumn
                                                                isSortedBy={true}
                                                                onSort={[Function]}
                                                                sortDirection="asc"
                                                              >
                                                                <button
                                                                  className="pf-c-table__button"
                                                                  onClick={[Function]}
                                                                  type="button"
                                                                >
                                                                  <div
                                                                    className="pf-c-table__button-content"
                                                                  >
                                                                    <TableText>
                                                                      <span
                                                                        className="pf-c-table__text"
                                                                        onMouseEnter={[Function]}
                                                                      >
                                                                        Name
                                                                      </span>
                                                                    </TableText>
                                                                    <span
                                                                      className="pf-c-table__sort-indicator"
                                                                    >
                                                                      <LongArrowAltUpIcon
                                                                        color="currentColor"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="currentColor"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 256 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </LongArrowAltUpIcon>
                                                                    </span>
                                                                  </div>
                                                                </button>
                                                              </SortColumn>
                                                            </th>
                                                          </HeaderCell>
                                                          <HeaderCell
                                                            className="pf-m-width-15"
                                                            data-key={1}
                                                            data-label="Status"
                                                            key="1-header"
                                                            scope="col"
                                                          >
                                                            <th
                                                              className="pf-m-width-15"
                                                              data-key={1}
                                                              data-label="Status"
                                                              onMouseEnter={[Function]}
                                                              scope="col"
                                                            >
                                                              Status
                                                            </th>
                                                          </HeaderCell>
                                                          <HeaderCell
                                                            className="pf-m-width-10"
                                                            data-key={2}
                                                            data-label="Type"
                                                            key="2-header"
                                                            scope="col"
                                                          >
                                                            <th
                                                              className="pf-m-width-10"
                                                              data-key={2}
                                                              data-label="Type"
                                                              onMouseEnter={[Function]}
                                                              scope="col"
                                                            >
                                                              Type
                                                            </th>
                                                          </HeaderCell>
                                                          <HeaderCell
                                                            className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                            data-key={3}
                                                            data-label="Created"
                                                            key="3-header"
                                                            scope="col"
                                                          >
                                                            <th
                                                              className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                              data-key={3}
                                                              data-label="Created"
                                                              onMouseEnter={[Function]}
                                                              scope="col"
                                                            >
                                                              Created
                                                            </th>
                                                          </HeaderCell>
                                                          <HeaderCell
                                                            className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                            data-key={4}
                                                            data-label="Version"
                                                            key="4-header"
                                                            scope="col"
                                                          >
                                                            <th
                                                              className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                              data-key={4}
                                                              data-label="Version"
                                                              onMouseEnter={[Function]}
                                                              scope="col"
                                                            >
                                                              Version
                                                            </th>
                                                          </HeaderCell>
                                                          <HeaderCell
                                                            className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                            data-key={5}
                                                            data-label="Provider (Location)"
                                                            key="5-header"
                                                            scope="col"
                                                          >
                                                            <th
                                                              className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                              data-key={5}
                                                              data-label="Provider (Location)"
                                                              onMouseEnter={[Function]}
                                                              scope="col"
                                                            >
                                                              Provider (Location)
                                                            </th>
                                                          </HeaderCell>
                                                          <HeaderCell
                                                            data-key={6}
                                                            data-label=""
                                                            key="6-header"
                                                            scope=""
                                                          >
                                                            <th
                                                              className=""
                                                              data-key={6}
                                                              data-label=""
                                                              onMouseEnter={[Function]}
                                                            />
                                                          </HeaderCell>
                                                        </tr>
                                                      </HeaderRow>
                                                    </thead>
                                                  </BaseHeader>
                                                </Component>
                                              </ContextHeader>
                                            </TableHeader>
                                            <Component>
                                              <ContextBody
                                                className=""
                                                headerData={
                                                  Array [
                                                    Object {
                                                      "cell": Object {
                                                        "formatters": Array [
                                                          [Function],
                                                        ],
                                                        "transforms": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "data": undefined,
                                                      "extraParams": Object {
                                                        "actionResolver": undefined,
                                                        "actions": undefined,
                                                        "allRowsSelected": false,
                                                        "areActionsDisabled": undefined,
                                                        "canSelectAll": true,
                                                        "contentId": "expanded-content",
                                                        "dropdownDirection": "down",
                                                        "dropdownPosition": "right",
                                                        "expandId": "expandable-toggle",
                                                        "firstUserColumnIndex": 0,
                                                        "onCollapse": undefined,
                                                        "onExpand": undefined,
                                                        "onRowEdit": undefined,
                                                        "onSelect": undefined,
                                                        "onSort": [Function],
                                                        "rowLabeledBy": "simple-node",
                                                        "sortBy": Object {
                                                          "direction": "asc",
                                                          "index": 0,
                                                        },
                                                      },
                                                      "header": Object {
                                                        "formatters": Array [],
                                                        "label": "Name",
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "property": "name",
                                                      "props": Object {
                                                        "data-key": 0,
                                                        "data-label": "Name",
                                                      },
                                                    },
                                                    Object {
                                                      "cell": Object {
                                                        "formatters": Array [
                                                          [Function],
                                                        ],
                                                        "transforms": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "data": undefined,
                                                      "extraParams": Object {
                                                        "actionResolver": undefined,
                                                        "actions": undefined,
                                                        "allRowsSelected": false,
                                                        "areActionsDisabled": undefined,
                                                        "canSelectAll": true,
                                                        "contentId": "expanded-content",
                                                        "dropdownDirection": "down",
                                                        "dropdownPosition": "right",
                                                        "expandId": "expandable-toggle",
                                                        "firstUserColumnIndex": 0,
                                                        "onCollapse": undefined,
                                                        "onExpand": undefined,
                                                        "onRowEdit": undefined,
                                                        "onSelect": undefined,
                                                        "onSort": [Function],
                                                        "rowLabeledBy": "simple-node",
                                                        "sortBy": Object {
                                                          "direction": "asc",
                                                          "index": 0,
                                                        },
                                                      },
                                                      "header": Object {
                                                        "formatters": Array [],
                                                        "label": "Status",
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "property": "status",
                                                      "props": Object {
                                                        "data-key": 1,
                                                        "data-label": "Status",
                                                      },
                                                    },
                                                    Object {
                                                      "cell": Object {
                                                        "formatters": Array [
                                                          [Function],
                                                        ],
                                                        "transforms": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "data": undefined,
                                                      "extraParams": Object {
                                                        "actionResolver": undefined,
                                                        "actions": undefined,
                                                        "allRowsSelected": false,
                                                        "areActionsDisabled": undefined,
                                                        "canSelectAll": true,
                                                        "contentId": "expanded-content",
                                                        "dropdownDirection": "down",
                                                        "dropdownPosition": "right",
                                                        "expandId": "expandable-toggle",
                                                        "firstUserColumnIndex": 0,
                                                        "onCollapse": undefined,
                                                        "onExpand": undefined,
                                                        "onRowEdit": undefined,
                                                        "onSelect": undefined,
                                                        "onSort": [Function],
                                                        "rowLabeledBy": "simple-node",
                                                        "sortBy": Object {
                                                          "direction": "asc",
                                                          "index": 0,
                                                        },
                                                      },
                                                      "header": Object {
                                                        "formatters": Array [],
                                                        "label": "Type",
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "property": "type",
                                                      "props": Object {
                                                        "data-key": 2,
                                                        "data-label": "Type",
                                                      },
                                                    },
                                                    Object {
                                                      "cell": Object {
                                                        "formatters": Array [
                                                          [Function],
                                                        ],
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "data": undefined,
                                                      "extraParams": Object {
                                                        "actionResolver": undefined,
                                                        "actions": undefined,
                                                        "allRowsSelected": false,
                                                        "areActionsDisabled": undefined,
                                                        "canSelectAll": true,
                                                        "contentId": "expanded-content",
                                                        "dropdownDirection": "down",
                                                        "dropdownPosition": "right",
                                                        "expandId": "expandable-toggle",
                                                        "firstUserColumnIndex": 0,
                                                        "onCollapse": undefined,
                                                        "onExpand": undefined,
                                                        "onRowEdit": undefined,
                                                        "onSelect": undefined,
                                                        "onSort": [Function],
                                                        "rowLabeledBy": "simple-node",
                                                        "sortBy": Object {
                                                          "direction": "asc",
                                                          "index": 0,
                                                        },
                                                      },
                                                      "header": Object {
                                                        "formatters": Array [],
                                                        "label": "Created",
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "property": "created",
                                                      "props": Object {
                                                        "data-key": 3,
                                                        "data-label": "Created",
                                                      },
                                                    },
                                                    Object {
                                                      "cell": Object {
                                                        "formatters": Array [
                                                          [Function],
                                                        ],
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "data": undefined,
                                                      "extraParams": Object {
                                                        "actionResolver": undefined,
                                                        "actions": undefined,
                                                        "allRowsSelected": false,
                                                        "areActionsDisabled": undefined,
                                                        "canSelectAll": true,
                                                        "contentId": "expanded-content",
                                                        "dropdownDirection": "down",
                                                        "dropdownPosition": "right",
                                                        "expandId": "expandable-toggle",
                                                        "firstUserColumnIndex": 0,
                                                        "onCollapse": undefined,
                                                        "onExpand": undefined,
                                                        "onRowEdit": undefined,
                                                        "onSelect": undefined,
                                                        "onSort": [Function],
                                                        "rowLabeledBy": "simple-node",
                                                        "sortBy": Object {
                                                          "direction": "asc",
                                                          "index": 0,
                                                        },
                                                      },
                                                      "header": Object {
                                                        "formatters": Array [],
                                                        "label": "Version",
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "property": "version",
                                                      "props": Object {
                                                        "data-key": 4,
                                                        "data-label": "Version",
                                                      },
                                                    },
                                                    Object {
                                                      "cell": Object {
                                                        "formatters": Array [
                                                          [Function],
                                                        ],
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "data": undefined,
                                                      "extraParams": Object {
                                                        "actionResolver": undefined,
                                                        "actions": undefined,
                                                        "allRowsSelected": false,
                                                        "areActionsDisabled": undefined,
                                                        "canSelectAll": true,
                                                        "contentId": "expanded-content",
                                                        "dropdownDirection": "down",
                                                        "dropdownPosition": "right",
                                                        "expandId": "expandable-toggle",
                                                        "firstUserColumnIndex": 0,
                                                        "onCollapse": undefined,
                                                        "onExpand": undefined,
                                                        "onRowEdit": undefined,
                                                        "onSelect": undefined,
                                                        "onSort": [Function],
                                                        "rowLabeledBy": "simple-node",
                                                        "sortBy": Object {
                                                          "direction": "asc",
                                                          "index": 0,
                                                        },
                                                      },
                                                      "header": Object {
                                                        "formatters": Array [],
                                                        "label": "Provider (Location)",
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "property": "provider-(location)",
                                                      "props": Object {
                                                        "data-key": 5,
                                                        "data-label": "Provider (Location)",
                                                      },
                                                    },
                                                    Object {
                                                      "cell": Object {
                                                        "formatters": Array [
                                                          [Function],
                                                        ],
                                                        "transforms": Array [
                                                          [Function],
                                                        ],
                                                      },
                                                      "data": undefined,
                                                      "extraParams": Object {
                                                        "actionResolver": undefined,
                                                        "actions": undefined,
                                                        "allRowsSelected": false,
                                                        "areActionsDisabled": undefined,
                                                        "canSelectAll": true,
                                                        "contentId": "expanded-content",
                                                        "dropdownDirection": "down",
                                                        "dropdownPosition": "right",
                                                        "expandId": "expandable-toggle",
                                                        "firstUserColumnIndex": 0,
                                                        "onCollapse": undefined,
                                                        "onExpand": undefined,
                                                        "onRowEdit": undefined,
                                                        "onSelect": undefined,
                                                        "onSort": [Function],
                                                        "rowLabeledBy": "simple-node",
                                                        "sortBy": Object {
                                                          "direction": "asc",
                                                          "index": 0,
                                                        },
                                                      },
                                                      "header": Object {
                                                        "formatters": Array [],
                                                        "label": "",
                                                        "transforms": Array [
                                                          [Function],
                                                          [Function],
                                                        ],
                                                      },
                                                      "property": "column-6",
                                                      "props": Object {
                                                        "data-key": 6,
                                                        "data-label": "",
                                                      },
                                                    },
                                                  ]
                                                }
                                                headerRows={null}
                                                onRow={[Function]}
                                                onRowClick={[Function]}
                                                rowKey="id"
                                                rows={
                                                  Array [
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                    Object {
                                                      "cells": Array [
                                                        Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      ],
                                                    },
                                                  ]
                                                }
                                              >
                                                <Component
                                                  className=""
                                                  headerRows={null}
                                                  mappedRows={
                                                    Array [
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 0,
                                                        "isExpanded": undefined,
                                                        "isFirst": true,
                                                        "isFirstVisible": true,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 1,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 2,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 3,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 4,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 5,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 6,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 7,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 8,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 9,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": true,
                                                        "isLastVisible": true,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                    ]
                                                  }
                                                  onRow={[Function]}
                                                  rowKey="id"
                                                  rows={
                                                    Array [
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 0,
                                                        "isExpanded": undefined,
                                                        "isFirst": true,
                                                        "isFirstVisible": true,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 1,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 2,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 3,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 4,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 5,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 6,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 7,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 8,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": false,
                                                        "isLastVisible": false,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                      Object {
                                                        "cells": Array [
                                                          Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        ],
                                                        "id": 9,
                                                        "isExpanded": undefined,
                                                        "isFirst": false,
                                                        "isFirstVisible": false,
                                                        "isHeightAuto": false,
                                                        "isLast": true,
                                                        "isLastVisible": true,
                                                        "name": Object {
                                                          "props": Object {
                                                            "colSpan": 6,
                                                            "isVisible": true,
                                                          },
                                                          "title": <Skeleton
                                                            isDark={false}
                                                            size="lg"
                                                          />,
                                                        },
                                                      },
                                                    ]
                                                  }
                                                >
                                                  <BaseBody
                                                    className=""
                                                    columns={
                                                      Array [
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Name",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "name",
                                                          "props": Object {
                                                            "data-key": 0,
                                                            "data-label": "Name",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Status",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "status",
                                                          "props": Object {
                                                            "data-key": 1,
                                                            "data-label": "Status",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Type",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "type",
                                                          "props": Object {
                                                            "data-key": 2,
                                                            "data-label": "Type",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Created",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "created",
                                                          "props": Object {
                                                            "data-key": 3,
                                                            "data-label": "Created",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Version",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "version",
                                                          "props": Object {
                                                            "data-key": 4,
                                                            "data-label": "Version",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "Provider (Location)",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "provider-(location)",
                                                          "props": Object {
                                                            "data-key": 5,
                                                            "data-label": "Provider (Location)",
                                                          },
                                                        },
                                                        Object {
                                                          "cell": Object {
                                                            "formatters": Array [
                                                              [Function],
                                                            ],
                                                            "transforms": Array [
                                                              [Function],
                                                            ],
                                                          },
                                                          "data": undefined,
                                                          "extraParams": Object {
                                                            "actionResolver": undefined,
                                                            "actions": undefined,
                                                            "allRowsSelected": false,
                                                            "areActionsDisabled": undefined,
                                                            "canSelectAll": true,
                                                            "contentId": "expanded-content",
                                                            "dropdownDirection": "down",
                                                            "dropdownPosition": "right",
                                                            "expandId": "expandable-toggle",
                                                            "firstUserColumnIndex": 0,
                                                            "onCollapse": undefined,
                                                            "onExpand": undefined,
                                                            "onRowEdit": undefined,
                                                            "onSelect": undefined,
                                                            "onSort": [Function],
                                                            "rowLabeledBy": "simple-node",
                                                            "sortBy": Object {
                                                              "direction": "asc",
                                                              "index": 0,
                                                            },
                                                          },
                                                          "header": Object {
                                                            "formatters": Array [],
                                                            "label": "",
                                                            "transforms": Array [
                                                              [Function],
                                                              [Function],
                                                            ],
                                                          },
                                                          "property": "column-6",
                                                          "props": Object {
                                                            "data-key": 6,
                                                            "data-label": "",
                                                          },
                                                        },
                                                      ]
                                                    }
                                                    headerRows={null}
                                                    mappedRows={
                                                      Array [
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 0,
                                                          "isExpanded": undefined,
                                                          "isFirst": true,
                                                          "isFirstVisible": true,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 1,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 2,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 3,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 4,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 5,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 6,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 7,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 8,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 9,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": true,
                                                          "isLastVisible": true,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                      ]
                                                    }
                                                    onRow={[Function]}
                                                    renderers={
                                                      Object {
                                                        "body": Object {
                                                          "cell": [Function],
                                                          "row": [Function],
                                                          "wrapper": [Function],
                                                        },
                                                        "header": Object {
                                                          "cell": [Function],
                                                          "row": "tr",
                                                          "wrapper": "thead",
                                                        },
                                                        "table": "table",
                                                      }
                                                    }
                                                    rowKey="id"
                                                    rows={
                                                      Array [
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 0,
                                                          "isExpanded": undefined,
                                                          "isFirst": true,
                                                          "isFirstVisible": true,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 1,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 2,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 3,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 4,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 5,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 6,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 7,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 8,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": false,
                                                          "isLastVisible": false,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                        Object {
                                                          "cells": Array [
                                                            Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          ],
                                                          "id": 9,
                                                          "isExpanded": undefined,
                                                          "isFirst": false,
                                                          "isFirstVisible": false,
                                                          "isHeightAuto": false,
                                                          "isLast": true,
                                                          "isLastVisible": true,
                                                          "name": Object {
                                                            "props": Object {
                                                              "colSpan": 6,
                                                              "isVisible": true,
                                                            },
                                                            "title": <Skeleton
                                                              isDark={false}
                                                              size="lg"
                                                            />,
                                                          },
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <BodyWrapper
                                                      className=""
                                                      headerRows={null}
                                                      mappedRows={
                                                        Array [
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 0,
                                                            "isExpanded": undefined,
                                                            "isFirst": true,
                                                            "isFirstVisible": true,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 1,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 2,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 3,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 4,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 5,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 6,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 7,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 8,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": false,
                                                            "isLastVisible": false,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                          Object {
                                                            "cells": Array [
                                                              Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            ],
                                                            "id": 9,
                                                            "isExpanded": undefined,
                                                            "isFirst": false,
                                                            "isFirstVisible": false,
                                                            "isHeightAuto": false,
                                                            "isLast": true,
                                                            "isLastVisible": true,
                                                            "name": Object {
                                                              "props": Object {
                                                                "colSpan": 6,
                                                                "isVisible": true,
                                                              },
                                                              "title": <Skeleton
                                                                isDark={false}
                                                                size="lg"
                                                              />,
                                                            },
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <tbody
                                                        className=""
                                                      >
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="0-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 0,
                                                              "isExpanded": undefined,
                                                              "isFirst": true,
                                                              "isFirstVisible": true,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={0}
                                                          rowKey="0-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 0,
                                                                "isExpanded": undefined,
                                                                "isFirst": true,
                                                                "isFirstVisible": true,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 0,
                                                                "rowKey": "0-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={35}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-0"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-0"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-0"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-0"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-0"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-0"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-0"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="1-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 1,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={1}
                                                          rowKey="1-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 1,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 1,
                                                                "rowKey": "1-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={36}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-1"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-1"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-1"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-1"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-1"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-1"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-1"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="2-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 2,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={2}
                                                          rowKey="2-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 2,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 2,
                                                                "rowKey": "2-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={37}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-2"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-2"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-2"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-2"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-2"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-2"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-2"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="3-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 3,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={3}
                                                          rowKey="3-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 3,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 3,
                                                                "rowKey": "3-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={38}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-3"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-3"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-3"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-3"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-3"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-3"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-3"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="4-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 4,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={4}
                                                          rowKey="4-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 4,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 4,
                                                                "rowKey": "4-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={39}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-4"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-4"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-4"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-4"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-4"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-4"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-4"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="5-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 5,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={5}
                                                          rowKey="5-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 5,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 5,
                                                                "rowKey": "5-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={40}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-5"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-5"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-5"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-5"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-5"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-5"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-5"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="6-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 6,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={6}
                                                          rowKey="6-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 6,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 6,
                                                                "rowKey": "6-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={41}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-6"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-6"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-6"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-6"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-6"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-6"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-6"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="7-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 7,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={7}
                                                          rowKey="7-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 7,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 7,
                                                                "rowKey": "7-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={42}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-7"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-7"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-7"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-7"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-7"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-7"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-7"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="8-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 8,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": false,
                                                              "isLastVisible": false,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={8}
                                                          rowKey="8-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 8,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": false,
                                                                "isLastVisible": false,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 8,
                                                                "rowKey": "8-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={43}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-8"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-8"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-8"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-8"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-8"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-8"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-8"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                        <BodyRow
                                                          columns={
                                                            Array [
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Name",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "name",
                                                                "props": Object {
                                                                  "data-key": 0,
                                                                  "data-label": "Name",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Status",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "status",
                                                                "props": Object {
                                                                  "data-key": 1,
                                                                  "data-label": "Status",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Type",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "type",
                                                                "props": Object {
                                                                  "data-key": 2,
                                                                  "data-label": "Type",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Created",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "created",
                                                                "props": Object {
                                                                  "data-key": 3,
                                                                  "data-label": "Created",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Version",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "version",
                                                                "props": Object {
                                                                  "data-key": 4,
                                                                  "data-label": "Version",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "Provider (Location)",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "provider-(location)",
                                                                "props": Object {
                                                                  "data-key": 5,
                                                                  "data-label": "Provider (Location)",
                                                                },
                                                              },
                                                              Object {
                                                                "cell": Object {
                                                                  "formatters": Array [
                                                                    [Function],
                                                                  ],
                                                                  "transforms": Array [
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "data": undefined,
                                                                "extraParams": Object {
                                                                  "actionResolver": undefined,
                                                                  "actions": undefined,
                                                                  "allRowsSelected": false,
                                                                  "areActionsDisabled": undefined,
                                                                  "canSelectAll": true,
                                                                  "contentId": "expanded-content",
                                                                  "dropdownDirection": "down",
                                                                  "dropdownPosition": "right",
                                                                  "expandId": "expandable-toggle",
                                                                  "firstUserColumnIndex": 0,
                                                                  "onCollapse": undefined,
                                                                  "onExpand": undefined,
                                                                  "onRowEdit": undefined,
                                                                  "onSelect": undefined,
                                                                  "onSort": [Function],
                                                                  "rowLabeledBy": "simple-node",
                                                                  "sortBy": Object {
                                                                    "direction": "asc",
                                                                    "index": 0,
                                                                  },
                                                                },
                                                                "header": Object {
                                                                  "formatters": Array [],
                                                                  "label": "",
                                                                  "transforms": Array [
                                                                    [Function],
                                                                    [Function],
                                                                  ],
                                                                },
                                                                "property": "column-6",
                                                                "props": Object {
                                                                  "data-key": 6,
                                                                  "data-label": "",
                                                                },
                                                              },
                                                            ]
                                                          }
                                                          key="9-row"
                                                          onRow={[Function]}
                                                          renderers={
                                                            Object {
                                                              "cell": [Function],
                                                              "row": [Function],
                                                              "wrapper": [Function],
                                                            }
                                                          }
                                                          rowData={
                                                            Object {
                                                              "cells": Array [
                                                                Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              ],
                                                              "id": 9,
                                                              "isExpanded": undefined,
                                                              "isFirst": false,
                                                              "isFirstVisible": false,
                                                              "isHeightAuto": false,
                                                              "isLast": true,
                                                              "isLastVisible": true,
                                                              "name": Object {
                                                                "props": Object {
                                                                  "colSpan": 6,
                                                                  "isVisible": true,
                                                                },
                                                                "title": <Skeleton
                                                                  isDark={false}
                                                                  size="lg"
                                                                />,
                                                              },
                                                            }
                                                          }
                                                          rowIndex={9}
                                                          rowKey="9-row"
                                                        >
                                                          <RowWrapper
                                                            className=""
                                                            onMouseDown={[Function]}
                                                            row={
                                                              Object {
                                                                "cells": Array [
                                                                  Object {
                                                                    "props": Object {
                                                                      "colSpan": 6,
                                                                    },
                                                                    "title": <Skeleton
                                                                      isDark={false}
                                                                      size="lg"
                                                                    />,
                                                                  },
                                                                ],
                                                                "id": 9,
                                                                "isExpanded": undefined,
                                                                "isFirst": false,
                                                                "isFirstVisible": false,
                                                                "isHeightAuto": false,
                                                                "isLast": true,
                                                                "isLastVisible": true,
                                                                "name": Object {
                                                                  "props": Object {
                                                                    "colSpan": 6,
                                                                    "isVisible": true,
                                                                  },
                                                                  "title": <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  />,
                                                                },
                                                              }
                                                            }
                                                            rowProps={
                                                              Object {
                                                                "rowIndex": 9,
                                                                "rowKey": "9-row",
                                                              }
                                                            }
                                                          >
                                                            <tr
                                                              className=""
                                                              data-ouia-component-id={44}
                                                              data-ouia-component-type="PF4/TableRow"
                                                              data-ouia-safe={true}
                                                              hidden={false}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <BodyCell
                                                                colSpan={6}
                                                                data-key={0}
                                                                data-label="Name"
                                                                isVisible={true}
                                                                key="col-0-row-9"
                                                              >
                                                                <td
                                                                  className=""
                                                                  colSpan={6}
                                                                  data-key={0}
                                                                  data-label="Name"
                                                                  onMouseEnter={[Function]}
                                                                >
                                                                  <Skeleton
                                                                    isDark={false}
                                                                    size="lg"
                                                                  >
                                                                    <div
                                                                      className="ins-c-skeleton ins-c-skeleton__lg"
                                                                    >
                                                                       
                                                                    </div>
                                                                  </Skeleton>
                                                                </td>
                                                              </BodyCell>
                                                              <BodyCell
                                                                data-key={1}
                                                                data-label="Status"
                                                                key="col-1-row-9"
                                                              />
                                                              <BodyCell
                                                                data-key={2}
                                                                data-label="Type"
                                                                key="col-2-row-9"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={3}
                                                                data-label="Created"
                                                                key="col-3-row-9"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={4}
                                                                data-label="Version"
                                                                key="col-4-row-9"
                                                              />
                                                              <BodyCell
                                                                className="pf-m-visible-on-lg pf-m-hidden-on-md pf-m-hidden-on-sm"
                                                                data-key={5}
                                                                data-label="Provider (Location)"
                                                                key="col-5-row-9"
                                                              />
                                                              <BodyCell
                                                                data-key={6}
                                                                data-label=""
                                                                key="col-6-row-9"
                                                              />
                                                            </tr>
                                                          </RowWrapper>
                                                        </BodyRow>
                                                      </tbody>
                                                    </BodyWrapper>
                                                  </BaseBody>
                                                </Component>
                                              </ContextBody>
                                            </Component>
                                          </table>
                                        </Provider>
                                      </Table>
                                    </ClusterListTable>
                                    <Connect(ViewPaginationRow)
                                      currentPage={1}
                                      isDisabled={true}
                                      pageSize={50}
                                      totalCount={0}
                                      totalPages={0}
                                      variant="bottom"
                                      viewType="CLUSTERS_VIEW"
                                    >
                                      <ViewPaginationRow
                                        currentPage={1}
                                        isDisabled={true}
                                        onFirstPage={[Function]}
                                        onLastPage={[Function]}
                                        onNextPage={[Function]}
                                        onPageInput={[Function]}
                                        onPerPageSelect={[Function]}
                                        onPreviousPage={[Function]}
                                        pageSize={50}
                                        totalCount={0}
                                        totalPages={0}
                                        variant="bottom"
                                        viewType="CLUSTERS_VIEW"
                                      >
                                        <Pagination
                                          className=""
                                          defaultToFullPage={false}
                                          dropDirection="up"
                                          firstPage={1}
                                          isCompact={false}
                                          isDisabled={true}
                                          itemCount={0}
                                          itemsEnd={0}
                                          itemsStart={1}
                                          offset={0}
                                          onFirstClick={[Function]}
                                          onLastClick={[Function]}
                                          onNextClick={[Function]}
                                          onPageInput={[Function]}
                                          onPerPageSelect={[Function]}
                                          onPreviousClick={[Function]}
                                          onSetPage={[Function]}
                                          ouiaSafe={true}
                                          page={1}
                                          perPage={50}
                                          perPageOptions={
                                            Array [
                                              Object {
                                                "title": "10",
                                                "value": 10,
                                              },
                                              Object {
                                                "title": "20",
                                                "value": 20,
                                              },
                                              Object {
                                                "title": "50",
                                                "value": 50,
                                              },
                                              Object {
                                                "title": "100",
                                                "value": 100,
                                              },
                                            ]
                                          }
                                          titles={
                                            Object {
                                              "currPage": "Current page",
                                              "items": "",
                                              "itemsPerPage": "Items per page",
                                              "optionsToggle": "Items per page",
                                              "page": "",
                                              "paginationTitle": "Pagination",
                                              "perPageSuffix": "per page",
                                              "toFirstPage": "Go to first page",
                                              "toLastPage": "Go to last page",
                                              "toNextPage": "Go to next page",
                                              "toPreviousPage": "Go to previous page",
                                            }
                                          }
                                          toggleTemplate={[Function]}
                                          variant="bottom"
                                          widgetId="pagination-options-menu"
                                        >
                                          <div
                                            className="pf-c-pagination pf-m-bottom"
                                            data-ouia-component-id={25}
                                            data-ouia-component-type="PF4/Pagination"
                                            data-ouia-safe={true}
                                            id="pagination-options-menu-1"
                                          >
                                            <PaginationOptionsMenu
                                              className=""
                                              defaultToFullPage={false}
                                              dropDirection="up"
                                              firstIndex={1}
                                              isDisabled={true}
                                              itemCount={0}
                                              itemsPerPageTitle="Items per page"
                                              itemsTitle=""
                                              lastIndex={0}
                                              lastPage={0}
                                              onPerPageSelect={[Function]}
                                              optionsToggle="Items per page"
                                              page={0}
                                              perPage={50}
                                              perPageOptions={
                                                Array [
                                                  Object {
                                                    "title": "10",
                                                    "value": 10,
                                                  },
                                                  Object {
                                                    "title": "20",
                                                    "value": 20,
                                                  },
                                                  Object {
                                                    "title": "50",
                                                    "value": 50,
                                                  },
                                                  Object {
                                                    "title": "100",
                                                    "value": 100,
                                                  },
                                                ]
                                              }
                                              perPageSuffix="per page"
                                              toggleTemplate={[Function]}
                                              widgetId="pagination-options-menu"
                                            >
                                              <DropdownWithContext
                                                autoFocus={true}
                                                className=""
                                                direction="up"
                                                dropdownItems={
                                                  Array [
                                                    <DropdownItem
                                                      className=""
                                                      component="button"
                                                      data-action="per-page-10"
                                                      onClick={[Function]}
                                                    >
                                                      10
                                                       per page
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      className=""
                                                      component="button"
                                                      data-action="per-page-20"
                                                      onClick={[Function]}
                                                    >
                                                      20
                                                       per page
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      className="pf-m-selected"
                                                      component="button"
                                                      data-action="per-page-50"
                                                      onClick={[Function]}
                                                    >
                                                      50
                                                       per page
                                                      <div
                                                        className="pf-c-options-menu__menu-item-icon"
                                                      >
                                                        <CheckIcon
                                                          color="currentColor"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        />
                                                      </div>
                                                    </DropdownItem>,
                                                    <DropdownItem
                                                      className=""
                                                      component="button"
                                                      data-action="per-page-100"
                                                      onClick={[Function]}
                                                    >
                                                      100
                                                       per page
                                                    </DropdownItem>,
                                                  ]
                                                }
                                                isGrouped={false}
                                                isOpen={false}
                                                isPlain={true}
                                                menuAppendTo="inline"
                                                onSelect={[Function]}
                                                position="left"
                                                toggle={
                                                  <OptionsToggle
                                                    firstIndex={1}
                                                    isDisabled={true}
                                                    isOpen={false}
                                                    itemCount={0}
                                                    itemsPerPageTitle="Items per page"
                                                    itemsTitle=""
                                                    lastIndex={0}
                                                    onToggle={[Function]}
                                                    optionsToggle="Items per page"
                                                    parentRef={null}
                                                    showToggle={true}
                                                    toggleTemplate={[Function]}
                                                    widgetId="pagination-options-menu"
                                                  />
                                                }
                                              >
                                                <div
                                                  className="pf-c-options-menu pf-m-top"
                                                  data-ouia-component-id={26}
                                                  data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                  data-ouia-safe={true}
                                                >
                                                  <OptionsToggle
                                                    aria-haspopup={true}
                                                    firstIndex={1}
                                                    getMenuRef={[Function]}
                                                    id="pf-toggle-id-3"
                                                    isDisabled={true}
                                                    isOpen={false}
                                                    isPlain={true}
                                                    itemCount={0}
                                                    itemsPerPageTitle="Items per page"
                                                    itemsTitle=""
                                                    key=".0"
                                                    lastIndex={0}
                                                    onEnter={[Function]}
                                                    onToggle={[Function]}
                                                    optionsToggle="Items per page"
                                                    parentRef={
                                                      Object {
                                                        "current": <div
                                                          class="pf-c-options-menu pf-m-top"
                                                          data-ouia-component-id="26"
                                                          data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                          data-ouia-safe="true"
                                                        >
                                                          <div
                                                            class="pf-c-options-menu__toggle pf-m-disabled pf-m-plain pf-m-text"
                                                          >
                                                            <span
                                                              class="pf-c-options-menu__toggle-text"
                                                            >
                                                              <b>
                                                                1
                                                                 - 
                                                                0
                                                              </b>
                                                               
                                                              of 
                                                              <b>
                                                                0
                                                              </b>
                                                               
                                                              
                                                            </span>
                                                            <button
                                                              aria-expanded="false"
                                                              aria-label="Items per page"
                                                              class="  pf-c-options-menu__toggle-button"
                                                              disabled=""
                                                              id="pagination-options-menu-toggle-1"
                                                              type="button"
                                                            >
                                                              <span
                                                                class="pf-c-options-menu__toggle-button-icon"
                                                              >
                                                                <svg
                                                                  aria-hidden="true"
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style="vertical-align: -0.125em;"
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </span>
                                                            </button>
                                                          </div>
                                                        </div>,
                                                      }
                                                    }
                                                    showToggle={true}
                                                    toggleTemplate={[Function]}
                                                    widgetId="pagination-options-menu"
                                                  >
                                                    <div
                                                      className="pf-c-options-menu__toggle pf-m-disabled pf-m-plain pf-m-text"
                                                    >
                                                      <span
                                                        className="pf-c-options-menu__toggle-text"
                                                      >
                                                        <ToggleTemplate
                                                          firstIndex={1}
                                                          itemCount={0}
                                                          itemsTitle=""
                                                          lastIndex={0}
                                                        >
                                                          <b>
                                                            1
                                                             - 
                                                            0
                                                          </b>
                                                           
                                                          of 
                                                          <b>
                                                            0
                                                          </b>
                                                           
                                                        </ToggleTemplate>
                                                      </span>
                                                      <DropdownToggle
                                                        aria-label="Items per page"
                                                        className="pf-c-options-menu__toggle-button"
                                                        id="pagination-options-menu-toggle-1"
                                                        isDisabled={true}
                                                        isOpen={false}
                                                        onEnter={[Function]}
                                                        onToggle={[Function]}
                                                        parentRef={
                                                          Object {
                                                            "current": <div
                                                              class="pf-c-options-menu pf-m-top"
                                                              data-ouia-component-id="26"
                                                              data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                              data-ouia-safe="true"
                                                            >
                                                              <div
                                                                class="pf-c-options-menu__toggle pf-m-disabled pf-m-plain pf-m-text"
                                                              >
                                                                <span
                                                                  class="pf-c-options-menu__toggle-text"
                                                                >
                                                                  <b>
                                                                    1
                                                                     - 
                                                                    0
                                                                  </b>
                                                                   
                                                                  of 
                                                                  <b>
                                                                    0
                                                                  </b>
                                                                   
                                                                  
                                                                </span>
                                                                <button
                                                                  aria-expanded="false"
                                                                  aria-label="Items per page"
                                                                  class="  pf-c-options-menu__toggle-button"
                                                                  disabled=""
                                                                  id="pagination-options-menu-toggle-1"
                                                                  type="button"
                                                                >
                                                                  <span
                                                                    class="pf-c-options-menu__toggle-button-icon"
                                                                  >
                                                                    <svg
                                                                      aria-hidden="true"
                                                                      fill="currentColor"
                                                                      height="1em"
                                                                      role="img"
                                                                      style="vertical-align: -0.125em;"
                                                                      viewBox="0 0 320 512"
                                                                      width="1em"
                                                                    >
                                                                      <path
                                                                        d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                        transform=""
                                                                      />
                                                                    </svg>
                                                                  </span>
                                                                </button>
                                                              </div>
                                                            </div>,
                                                          }
                                                        }
                                                      >
                                                        <Toggle
                                                          aria-label="Items per page"
                                                          bubbleEvent={false}
                                                          className="pf-c-options-menu__toggle-button"
                                                          getMenuRef={null}
                                                          id="pagination-options-menu-toggle-1"
                                                          isActive={false}
                                                          isDisabled={true}
                                                          isOpen={false}
                                                          isPlain={false}
                                                          isPrimary={false}
                                                          isSplitButton={false}
                                                          onEnter={[Function]}
                                                          onToggle={[Function]}
                                                          parentRef={
                                                            Object {
                                                              "current": <div
                                                                class="pf-c-options-menu pf-m-top"
                                                                data-ouia-component-id="26"
                                                                data-ouia-component-type="PF4/PaginationOptionsMenu"
                                                                data-ouia-safe="true"
                                                              >
                                                                <div
                                                                  class="pf-c-options-menu__toggle pf-m-disabled pf-m-plain pf-m-text"
                                                                >
                                                                  <span
                                                                    class="pf-c-options-menu__toggle-text"
                                                                  >
                                                                    <b>
                                                                      1
                                                                       - 
                                                                      0
                                                                    </b>
                                                                     
                                                                    of 
                                                                    <b>
                                                                      0
                                                                    </b>
                                                                     
                                                                    
                                                                  </span>
                                                                  <button
                                                                    aria-expanded="false"
                                                                    aria-label="Items per page"
                                                                    class="  pf-c-options-menu__toggle-button"
                                                                    disabled=""
                                                                    id="pagination-options-menu-toggle-1"
                                                                    type="button"
                                                                  >
                                                                    <span
                                                                      class="pf-c-options-menu__toggle-button-icon"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        fill="currentColor"
                                                                        height="1em"
                                                                        role="img"
                                                                        style="vertical-align: -0.125em;"
                                                                        viewBox="0 0 320 512"
                                                                        width="1em"
                                                                      >
                                                                        <path
                                                                          d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                          transform=""
                                                                        />
                                                                      </svg>
                                                                    </span>
                                                                  </button>
                                                                </div>
                                                              </div>,
                                                            }
                                                          }
                                                        >
                                                          <button
                                                            aria-expanded={false}
                                                            aria-label="Items per page"
                                                            className="  pf-c-options-menu__toggle-button"
                                                            disabled={true}
                                                            id="pagination-options-menu-toggle-1"
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            type="button"
                                                          >
                                                            <span
                                                              className="pf-c-options-menu__toggle-button-icon"
                                                            >
                                                              <CaretDownIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 320 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </CaretDownIcon>
                                                            </span>
                                                          </button>
                                                        </Toggle>
                                                      </DropdownToggle>
                                                    </div>
                                                  </OptionsToggle>
                                                </div>
                                              </DropdownWithContext>
                                            </PaginationOptionsMenu>
                                            <Navigation
                                              className=""
                                              currPage="Current page"
                                              firstPage={1}
                                              isCompact={false}
                                              isDisabled={true}
                                              lastPage={0}
                                              onFirstClick={[Function]}
                                              onLastClick={[Function]}
                                              onNextClick={[Function]}
                                              onPageInput={[Function]}
                                              onPreviousClick={[Function]}
                                              onSetPage={[Function]}
                                              page={0}
                                              pagesTitle=""
                                              paginationTitle="Pagination"
                                              perPage={50}
                                              toFirstPage="Go to first page"
                                              toLastPage="Go to last page"
                                              toNextPage="Go to next page"
                                              toPreviousPage="Go to previous page"
                                            >
                                              <nav
                                                aria-label="Pagination"
                                                className="pf-c-pagination__nav"
                                              >
                                                <div
                                                  className="pf-c-pagination__nav-control pf-m-first"
                                                >
                                                  <Button
                                                    aria-label="Go to first page"
                                                    data-action="first"
                                                    isDisabled={true}
                                                    onClick={[Function]}
                                                    variant="plain"
                                                  >
                                                    <button
                                                      aria-disabled={true}
                                                      aria-label="Go to first page"
                                                      className="pf-c-button pf-m-plain pf-m-disabled"
                                                      data-action="first"
                                                      data-ouia-component-id={27}
                                                      data-ouia-component-type="PF4/Button"
                                                      data-ouia-safe={true}
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      tabIndex={null}
                                                      type="button"
                                                    >
                                                      <AngleDoubleLeftIcon
                                                        color="currentColor"
                                                        noVerticalAlign={false}
                                                        size="sm"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          aria-labelledby={null}
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style={
                                                            Object {
                                                              "verticalAlign": "-0.125em",
                                                            }
                                                          }
                                                          viewBox="0 0 448 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z"
                                                            transform=""
                                                          />
                                                        </svg>
                                                      </AngleDoubleLeftIcon>
                                                    </button>
                                                  </Button>
                                                </div>
                                                <div
                                                  className="pf-c-pagination__nav-control"
                                                >
                                                  <Button
                                                    aria-label="Go to previous page"
                                                    data-action="previous"
                                                    isDisabled={true}
                                                    onClick={[Function]}
                                                    variant="plain"
                                                  >
                                                    <button
                                                      aria-disabled={true}
                                                      aria-label="Go to previous page"
                                                      className="pf-c-button pf-m-plain pf-m-disabled"
                                                      data-action="previous"
                                                      data-ouia-component-id={28}
                                                      data-ouia-component-type="PF4/Button"
                                                      data-ouia-safe={true}
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      tabIndex={null}
                                                      type="button"
                                                    >
                                                      <AngleLeftIcon
                                                        color="currentColor"
                                                        noVerticalAlign={false}
                                                        size="sm"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          aria-labelledby={null}
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style={
                                                            Object {
                                                              "verticalAlign": "-0.125em",
                                                            }
                                                          }
                                                          viewBox="0 0 256 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z"
                                                            transform=""
                                                          />
                                                        </svg>
                                                      </AngleLeftIcon>
                                                    </button>
                                                  </Button>
                                                </div>
                                                <div
                                                  className="pf-c-pagination__nav-page-select"
                                                >
                                                  <input
                                                    aria-label="Current page"
                                                    className="pf-c-form-control"
                                                    disabled={true}
                                                    max={0}
                                                    min={1}
                                                    onChange={[Function]}
                                                    onKeyDown={[Function]}
                                                    type="number"
                                                    value={0}
                                                  />
                                                  <span
                                                    aria-hidden="true"
                                                  >
                                                    of 
                                                    0
                                                  </span>
                                                </div>
                                                <div
                                                  className="pf-c-pagination__nav-control"
                                                >
                                                  <Button
                                                    aria-label="Go to next page"
                                                    data-action="next"
                                                    isDisabled={true}
                                                    onClick={[Function]}
                                                    variant="plain"
                                                  >
                                                    <button
                                                      aria-disabled={true}
                                                      aria-label="Go to next page"
                                                      className="pf-c-button pf-m-plain pf-m-disabled"
                                                      data-action="next"
                                                      data-ouia-component-id={29}
                                                      data-ouia-component-type="PF4/Button"
                                                      data-ouia-safe={true}
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      tabIndex={null}
                                                      type="button"
                                                    >
                                                      <AngleRightIcon
                                                        color="currentColor"
                                                        noVerticalAlign={false}
                                                        size="sm"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          aria-labelledby={null}
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style={
                                                            Object {
                                                              "verticalAlign": "-0.125em",
                                                            }
                                                          }
                                                          viewBox="0 0 256 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                            transform=""
                                                          />
                                                        </svg>
                                                      </AngleRightIcon>
                                                    </button>
                                                  </Button>
                                                </div>
                                                <div
                                                  className="pf-c-pagination__nav-control pf-m-last"
                                                >
                                                  <Button
                                                    aria-label="Go to last page"
                                                    data-action="last"
                                                    isDisabled={true}
                                                    onClick={[Function]}
                                                    variant="plain"
                                                  >
                                                    <button
                                                      aria-disabled={true}
                                                      aria-label="Go to last page"
                                                      className="pf-c-button pf-m-plain pf-m-disabled"
                                                      data-action="last"
                                                      data-ouia-component-id={30}
                                                      data-ouia-component-type="PF4/Button"
                                                      data-ouia-safe={true}
                                                      disabled={true}
                                                      onClick={[Function]}
                                                      tabIndex={null}
                                                      type="button"
                                                    >
                                                      <AngleDoubleRightIcon
                                                        color="currentColor"
                                                        noVerticalAlign={false}
                                                        size="sm"
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          aria-labelledby={null}
                                                          fill="currentColor"
                                                          height="1em"
                                                          role="img"
                                                          style={
                                                            Object {
                                                              "verticalAlign": "-0.125em",
                                                            }
                                                          }
                                                          viewBox="0 0 448 512"
                                                          width="1em"
                                                        >
                                                          <path
                                                            d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z"
                                                            transform=""
                                                          />
                                                        </svg>
                                                      </AngleDoubleRightIcon>
                                                    </button>
                                                  </Button>
                                                </div>
                                              </nav>
                                            </Navigation>
                                          </div>
                                        </Pagination>
                                      </ViewPaginationRow>
                                    </Connect(ViewPaginationRow)>
                                    <Connect(EditDisplayNameDialog)
                                      onClose={[Function]}
                                    >
                                      <EditDisplayNameDialog
                                        closeModal={[Function]}
                                        displayName="Unnamed Cluster"
                                        editClusterResponse={
                                          Object {
                                            "cluster": null,
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                            "valid": true,
                                          }
                                        }
                                        isOpen={false}
                                        onClose={[Function]}
                                        resetResponse={[Function]}
                                        submit={[Function]}
                                      />
                                    </Connect(EditDisplayNameDialog)>
                                    <Connect(EditConsoleURLDialog)
                                      onClose={[Function]}
                                    >
                                      <EditConsoleURLDialog
                                        closeModal={[Function]}
                                        consoleURL=""
                                        editClusterResponse={
                                          Object {
                                            "cluster": null,
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                            "valid": true,
                                          }
                                        }
                                        isOpen={false}
                                        onClose={[Function]}
                                        resetResponse={[Function]}
                                        submit={[Function]}
                                      />
                                    </Connect(EditConsoleURLDialog)>
                                    <Connect(EditSubscriptionSettingsDialog)
                                      onClose={[Function]}
                                    >
                                      <EditSubscriptionSettingsDialog
                                        closeModal={[Function]}
                                        isOpen={false}
                                        onClose={[Function]}
                                        requestState={
                                          Object {
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                          }
                                        }
                                        submit={[Function]}
                                        subscription={Object {}}
                                      />
                                    </Connect(EditSubscriptionSettingsDialog)>
                                    <Connect(ReduxForm)
                                      onClose={[Function]}
                                    >
                                      <ReduxForm
                                        closeModal={[Function]}
                                        cloudProviderID=""
                                        consoleURL={null}
                                        editClusterResponse={
                                          Object {
                                            "cluster": null,
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                            "valid": true,
                                          }
                                        }
                                        getLoadBalancers={[Function]}
                                        getOrganizationAndQuota={[Function]}
                                        getPersistentStorage={[Function]}
                                        initialValues={
                                          Object {
                                            "id": undefined,
                                            "load_balancers": 0,
                                            "nodes_compute": null,
                                            "persistent_storage": 107374182400,
                                          }
                                        }
                                        isOpen={false}
                                        loadBalancerValues={
                                          Object {
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                            "values": Array [],
                                          }
                                        }
                                        machineType=""
                                        masterResizeAlertThreshold={0}
                                        min={
                                          Object {
                                            "validationMsg": "At least 4 nodes are required",
                                            "value": 4,
                                          }
                                        }
                                        onClose={[Function]}
                                        onSubmit={[Function]}
                                        organization={
                                          Object {
                                            "details": null,
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": true,
                                            "quotaList": Object {},
                                          }
                                        }
                                        persistentStorageValues={
                                          Object {
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                            "values": Array [],
                                          }
                                        }
                                        resetResponse={[Function]}
                                        showLoadBalancerAlert={false}
                                        showPersistentStorageAlert={false}
                                      >
                                        <Connect(Form(ScaleClusterDialog))
                                          closeModal={[Function]}
                                          cloudProviderID=""
                                          consoleURL={null}
                                          destroyOnUnmount={true}
                                          editClusterResponse={
                                            Object {
                                              "cluster": null,
                                              "error": false,
                                              "errorDetails": null,
                                              "errorMessage": "",
                                              "fulfilled": false,
                                              "pending": false,
                                              "valid": true,
                                            }
                                          }
                                          enableReinitialize={true}
                                          forceUnregisterOnUnmount={false}
                                          form="ScaleCluster"
                                          getFormState={[Function]}
                                          getLoadBalancers={[Function]}
                                          getOrganizationAndQuota={[Function]}
                                          getPersistentStorage={[Function]}
                                          initialValues={
                                            Object {
                                              "id": undefined,
                                              "load_balancers": 0,
                                              "nodes_compute": null,
                                              "persistent_storage": 107374182400,
                                            }
                                          }
                                          isOpen={false}
                                          keepDirtyOnReinitialize={false}
                                          loadBalancerValues={
                                            Object {
                                              "error": false,
                                              "errorDetails": null,
                                              "errorMessage": "",
                                              "fulfilled": false,
                                              "pending": false,
                                              "values": Array [],
                                            }
                                          }
                                          machineType=""
                                          masterResizeAlertThreshold={0}
                                          min={
                                            Object {
                                              "validationMsg": "At least 4 nodes are required",
                                              "value": 4,
                                            }
                                          }
                                          onClose={[Function]}
                                          onSubmit={[Function]}
                                          organization={
                                            Object {
                                              "details": null,
                                              "error": false,
                                              "errorDetails": null,
                                              "errorMessage": "",
                                              "fulfilled": false,
                                              "pending": true,
                                              "quotaList": Object {},
                                            }
                                          }
                                          persistentStorageValues={
                                            Object {
                                              "error": false,
                                              "errorDetails": null,
                                              "errorMessage": "",
                                              "fulfilled": false,
                                              "pending": false,
                                              "values": Array [],
                                            }
                                          }
                                          persistentSubmitErrors={false}
                                          pure={true}
                                          resetResponse={[Function]}
                                          shouldAsyncValidate={[Function]}
                                          shouldError={[Function]}
                                          shouldValidate={[Function]}
                                          shouldWarn={[Function]}
                                          showLoadBalancerAlert={false}
                                          showPersistentStorageAlert={false}
                                          touchOnBlur={true}
                                          touchOnChange={false}
                                          updateUnregisteredFields={false}
                                        >
                                          <Form(ScaleClusterDialog)
                                            anyTouched={false}
                                            array={
                                              Object {
                                                "insert": [Function],
                                                "move": [Function],
                                                "pop": [Function],
                                                "push": [Function],
                                                "remove": [Function],
                                                "removeAll": [Function],
                                                "shift": [Function],
                                                "splice": [Function],
                                                "swap": [Function],
                                                "unshift": [Function],
                                              }
                                            }
                                            arrayInsert={[Function]}
                                            arrayMove={[Function]}
                                            arrayPop={[Function]}
                                            arrayPush={[Function]}
                                            arrayRemove={[Function]}
                                            arrayRemoveAll={[Function]}
                                            arrayShift={[Function]}
                                            arraySplice={[Function]}
                                            arraySwap={[Function]}
                                            arrayUnshift={[Function]}
                                            asyncValidating={false}
                                            autofill={[Function]}
                                            blur={[Function]}
                                            change={[Function]}
                                            clearAsyncError={[Function]}
                                            clearFields={[Function]}
                                            clearSubmit={[Function]}
                                            clearSubmitErrors={[Function]}
                                            closeModal={[Function]}
                                            cloudProviderID=""
                                            consoleURL={null}
                                            destroy={[Function]}
                                            destroyOnUnmount={true}
                                            dirty={false}
                                            dispatch={[Function]}
                                            editClusterResponse={
                                              Object {
                                                "cluster": null,
                                                "error": false,
                                                "errorDetails": null,
                                                "errorMessage": "",
                                                "fulfilled": false,
                                                "pending": false,
                                                "valid": true,
                                              }
                                            }
                                            enableReinitialize={true}
                                            focus={[Function]}
                                            forceUnregisterOnUnmount={false}
                                            form="ScaleCluster"
                                            getFormState={[Function]}
                                            getLoadBalancers={[Function]}
                                            getOrganizationAndQuota={[Function]}
                                            getPersistentStorage={[Function]}
                                            initialValues={
                                              Object {
                                                "id": undefined,
                                                "load_balancers": 0,
                                                "nodes_compute": null,
                                                "persistent_storage": 107374182400,
                                              }
                                            }
                                            initialize={[Function]}
                                            initialized={true}
                                            invalid={false}
                                            isOpen={false}
                                            keepDirtyOnReinitialize={false}
                                            loadBalancerValues={
                                              Object {
                                                "error": false,
                                                "errorDetails": null,
                                                "errorMessage": "",
                                                "fulfilled": false,
                                                "pending": false,
                                                "values": Array [],
                                              }
                                            }
                                            machineType=""
                                            masterResizeAlertThreshold={0}
                                            min={
                                              Object {
                                                "validationMsg": "At least 4 nodes are required",
                                                "value": 4,
                                              }
                                            }
                                            onClose={[Function]}
                                            onSubmit={[Function]}
                                            organization={
                                              Object {
                                                "details": null,
                                                "error": false,
                                                "errorDetails": null,
                                                "errorMessage": "",
                                                "fulfilled": false,
                                                "pending": true,
                                                "quotaList": Object {},
                                              }
                                            }
                                            persistentStorageValues={
                                              Object {
                                                "error": false,
                                                "errorDetails": null,
                                                "errorMessage": "",
                                                "fulfilled": false,
                                                "pending": false,
                                                "values": Array [],
                                              }
                                            }
                                            persistentSubmitErrors={false}
                                            pristine={true}
                                            pure={true}
                                            registerField={[Function]}
                                            reset={[Function]}
                                            resetResponse={[Function]}
                                            resetSection={[Function]}
                                            setSubmitFailed={[Function]}
                                            setSubmitSucceeded={[Function]}
                                            shouldAsyncValidate={[Function]}
                                            shouldError={[Function]}
                                            shouldValidate={[Function]}
                                            shouldWarn={[Function]}
                                            showLoadBalancerAlert={false}
                                            showPersistentStorageAlert={false}
                                            startAsyncValidation={[Function]}
                                            startSubmit={[Function]}
                                            stopAsyncValidation={[Function]}
                                            stopSubmit={[Function]}
                                            submit={[Function]}
                                            submitFailed={false}
                                            submitSucceeded={false}
                                            submitting={false}
                                            syncErrors={Object {}}
                                            syncWarnings={Object {}}
                                            touch={[Function]}
                                            touchOnBlur={true}
                                            touchOnChange={false}
                                            unregisterField={[Function]}
                                            untouch={[Function]}
                                            updateSyncErrors={[Function]}
                                            updateSyncWarnings={[Function]}
                                            updateUnregisteredFields={false}
                                            valid={true}
                                            validExceptSubmit={true}
                                            values={
                                              Object {
                                                "id": undefined,
                                                "load_balancers": 0,
                                                "nodes_compute": null,
                                                "persistent_storage": 107374182400,
                                              }
                                            }
                                          >
                                            <ScaleClusterDialog
                                              anyTouched={false}
                                              array={
                                                Object {
                                                  "insert": [Function],
                                                  "move": [Function],
                                                  "pop": [Function],
                                                  "push": [Function],
                                                  "remove": [Function],
                                                  "removeAll": [Function],
                                                  "shift": [Function],
                                                  "splice": [Function],
                                                  "swap": [Function],
                                                  "unshift": [Function],
                                                }
                                              }
                                              asyncValidate={[Function]}
                                              asyncValidating={false}
                                              autofill={[Function]}
                                              blur={[Function]}
                                              change={[Function]}
                                              clearAsyncError={[Function]}
                                              clearFields={[Function]}
                                              clearSubmit={[Function]}
                                              clearSubmitErrors={[Function]}
                                              closeModal={[Function]}
                                              cloudProviderID=""
                                              consoleURL={null}
                                              destroy={[Function]}
                                              dirty={false}
                                              dispatch={[Function]}
                                              editClusterResponse={
                                                Object {
                                                  "cluster": null,
                                                  "error": false,
                                                  "errorDetails": null,
                                                  "errorMessage": "",
                                                  "fulfilled": false,
                                                  "pending": false,
                                                  "valid": true,
                                                }
                                              }
                                              form="ScaleCluster"
                                              getLoadBalancers={[Function]}
                                              getOrganizationAndQuota={[Function]}
                                              getPersistentStorage={[Function]}
                                              handleSubmit={[Function]}
                                              initialValues={
                                                Object {
                                                  "id": undefined,
                                                  "load_balancers": 0,
                                                  "nodes_compute": null,
                                                  "persistent_storage": 107374182400,
                                                }
                                              }
                                              initialize={[Function]}
                                              initialized={true}
                                              invalid={false}
                                              isOpen={false}
                                              loadBalancerValues={
                                                Object {
                                                  "error": false,
                                                  "errorDetails": null,
                                                  "errorMessage": "",
                                                  "fulfilled": false,
                                                  "pending": false,
                                                  "values": Array [],
                                                }
                                              }
                                              machineType=""
                                              masterResizeAlertThreshold={0}
                                              min={
                                                Object {
                                                  "validationMsg": "At least 4 nodes are required",
                                                  "value": 4,
                                                }
                                              }
                                              onClose={[Function]}
                                              onSubmit={[Function]}
                                              organization={
                                                Object {
                                                  "details": null,
                                                  "error": false,
                                                  "errorDetails": null,
                                                  "errorMessage": "",
                                                  "fulfilled": false,
                                                  "pending": true,
                                                  "quotaList": Object {},
                                                }
                                              }
                                              persistentStorageValues={
                                                Object {
                                                  "error": false,
                                                  "errorDetails": null,
                                                  "errorMessage": "",
                                                  "fulfilled": false,
                                                  "pending": false,
                                                  "values": Array [],
                                                }
                                              }
                                              pristine={true}
                                              pure={true}
                                              reset={[Function]}
                                              resetResponse={[Function]}
                                              resetSection={[Function]}
                                              showLoadBalancerAlert={false}
                                              showPersistentStorageAlert={false}
                                              submit={[Function]}
                                              submitFailed={false}
                                              submitSucceeded={false}
                                              submitting={false}
                                              touch={[Function]}
                                              untouch={[Function]}
                                              valid={true}
                                            />
                                          </Form(ScaleClusterDialog)>
                                        </Connect(Form(ScaleClusterDialog))>
                                      </ReduxForm>
                                    </Connect(ReduxForm)>
                                    <Connect(ReduxForm)
                                      onClose={[Function]}
                                    >
                                      <ReduxForm
                                        closeModal={[Function]}
                                        editClusterResponse={
                                          Object {
                                            "cluster": null,
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                            "valid": true,
                                          }
                                        }
                                        initialFormValues={
                                          Object {
                                            "computeNodes": 0,
                                            "id": undefined,
                                            "memoryCapacity": NaN,
                                            "sockets": undefined,
                                          }
                                        }
                                        isOpen={false}
                                        onClose={[Function]}
                                        onSubmit={[Function]}
                                        resetResponse={[Function]}
                                        systemType="physical"
                                      >
                                        <Connect(Form(EditDisconnectedClusterDialog))
                                          closeModal={[Function]}
                                          destroyOnUnmount={true}
                                          editClusterResponse={
                                            Object {
                                              "cluster": null,
                                              "error": false,
                                              "errorDetails": null,
                                              "errorMessage": "",
                                              "fulfilled": false,
                                              "pending": false,
                                              "valid": true,
                                            }
                                          }
                                          enableReinitialize={false}
                                          forceUnregisterOnUnmount={false}
                                          form="EditDisconnectedCluster"
                                          getFormState={[Function]}
                                          initialFormValues={
                                            Object {
                                              "computeNodes": 0,
                                              "id": undefined,
                                              "memoryCapacity": NaN,
                                              "sockets": undefined,
                                            }
                                          }
                                          isOpen={false}
                                          keepDirtyOnReinitialize={false}
                                          onClose={[Function]}
                                          onSubmit={[Function]}
                                          persistentSubmitErrors={false}
                                          pure={true}
                                          resetResponse={[Function]}
                                          shouldAsyncValidate={[Function]}
                                          shouldError={[Function]}
                                          shouldValidate={[Function]}
                                          shouldWarn={[Function]}
                                          systemType="physical"
                                          touchOnBlur={true}
                                          touchOnChange={false}
                                          updateUnregisteredFields={false}
                                        >
                                          <Form(EditDisconnectedClusterDialog)
                                            anyTouched={false}
                                            array={
                                              Object {
                                                "insert": [Function],
                                                "move": [Function],
                                                "pop": [Function],
                                                "push": [Function],
                                                "remove": [Function],
                                                "removeAll": [Function],
                                                "shift": [Function],
                                                "splice": [Function],
                                                "swap": [Function],
                                                "unshift": [Function],
                                              }
                                            }
                                            arrayInsert={[Function]}
                                            arrayMove={[Function]}
                                            arrayPop={[Function]}
                                            arrayPush={[Function]}
                                            arrayRemove={[Function]}
                                            arrayRemoveAll={[Function]}
                                            arrayShift={[Function]}
                                            arraySplice={[Function]}
                                            arraySwap={[Function]}
                                            arrayUnshift={[Function]}
                                            asyncValidating={false}
                                            autofill={[Function]}
                                            blur={[Function]}
                                            change={[Function]}
                                            clearAsyncError={[Function]}
                                            clearFields={[Function]}
                                            clearSubmit={[Function]}
                                            clearSubmitErrors={[Function]}
                                            closeModal={[Function]}
                                            destroy={[Function]}
                                            destroyOnUnmount={true}
                                            dirty={false}
                                            dispatch={[Function]}
                                            editClusterResponse={
                                              Object {
                                                "cluster": null,
                                                "error": false,
                                                "errorDetails": null,
                                                "errorMessage": "",
                                                "fulfilled": false,
                                                "pending": false,
                                                "valid": true,
                                              }
                                            }
                                            enableReinitialize={false}
                                            focus={[Function]}
                                            forceUnregisterOnUnmount={false}
                                            form="EditDisconnectedCluster"
                                            getFormState={[Function]}
                                            initialFormValues={
                                              Object {
                                                "computeNodes": 0,
                                                "id": undefined,
                                                "memoryCapacity": NaN,
                                                "sockets": undefined,
                                              }
                                            }
                                            initialize={[Function]}
                                            initialized={false}
                                            invalid={false}
                                            isOpen={false}
                                            keepDirtyOnReinitialize={false}
                                            onClose={[Function]}
                                            onSubmit={[Function]}
                                            persistentSubmitErrors={false}
                                            pristine={true}
                                            pure={true}
                                            registerField={[Function]}
                                            reset={[Function]}
                                            resetResponse={[Function]}
                                            resetSection={[Function]}
                                            setSubmitFailed={[Function]}
                                            setSubmitSucceeded={[Function]}
                                            shouldAsyncValidate={[Function]}
                                            shouldError={[Function]}
                                            shouldValidate={[Function]}
                                            shouldWarn={[Function]}
                                            startAsyncValidation={[Function]}
                                            startSubmit={[Function]}
                                            stopAsyncValidation={[Function]}
                                            stopSubmit={[Function]}
                                            submit={[Function]}
                                            submitFailed={false}
                                            submitSucceeded={false}
                                            submitting={false}
                                            syncErrors={Object {}}
                                            syncWarnings={Object {}}
                                            systemType="physical"
                                            touch={[Function]}
                                            touchOnBlur={true}
                                            touchOnChange={false}
                                            unregisterField={[Function]}
                                            untouch={[Function]}
                                            updateSyncErrors={[Function]}
                                            updateSyncWarnings={[Function]}
                                            updateUnregisteredFields={false}
                                            valid={true}
                                            validExceptSubmit={true}
                                            values={Object {}}
                                          >
                                            <EditDisconnectedClusterDialog
                                              anyTouched={false}
                                              array={
                                                Object {
                                                  "insert": [Function],
                                                  "move": [Function],
                                                  "pop": [Function],
                                                  "push": [Function],
                                                  "remove": [Function],
                                                  "removeAll": [Function],
                                                  "shift": [Function],
                                                  "splice": [Function],
                                                  "swap": [Function],
                                                  "unshift": [Function],
                                                }
                                              }
                                              asyncValidate={[Function]}
                                              asyncValidating={false}
                                              autofill={[Function]}
                                              blur={[Function]}
                                              change={[Function]}
                                              clearAsyncError={[Function]}
                                              clearFields={[Function]}
                                              clearSubmit={[Function]}
                                              clearSubmitErrors={[Function]}
                                              closeModal={[Function]}
                                              destroy={[Function]}
                                              dirty={false}
                                              dispatch={[Function]}
                                              editClusterResponse={
                                                Object {
                                                  "cluster": null,
                                                  "error": false,
                                                  "errorDetails": null,
                                                  "errorMessage": "",
                                                  "fulfilled": false,
                                                  "pending": false,
                                                  "valid": true,
                                                }
                                              }
                                              form="EditDisconnectedCluster"
                                              handleSubmit={[Function]}
                                              initialFormValues={
                                                Object {
                                                  "computeNodes": 0,
                                                  "id": undefined,
                                                  "memoryCapacity": NaN,
                                                  "sockets": undefined,
                                                }
                                              }
                                              initialize={[Function]}
                                              initialized={false}
                                              invalid={false}
                                              isOpen={false}
                                              onClose={[Function]}
                                              onSubmit={[Function]}
                                              pristine={true}
                                              pure={true}
                                              reset={[Function]}
                                              resetResponse={[Function]}
                                              resetSection={[Function]}
                                              submit={[Function]}
                                              submitFailed={false}
                                              submitSucceeded={false}
                                              submitting={false}
                                              systemType="physical"
                                              touch={[Function]}
                                              untouch={[Function]}
                                              valid={true}
                                            />
                                          </Form(EditDisconnectedClusterDialog)>
                                        </Connect(Form(EditDisconnectedClusterDialog))>
                                      </ReduxForm>
                                    </Connect(ReduxForm)>
                                    <Connect(ArchiveClusterDialog)
                                      onClose={[Function]}
                                    >
                                      <ArchiveClusterDialog
                                        archiveClusterResponse={
                                          Object {
                                            "cluster": null,
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                            "valid": true,
                                          }
                                        }
                                        closeModal={[Function]}
                                        isOpen={false}
                                        name=""
                                        onClose={[Function]}
                                        resetResponse={[Function]}
                                        submit={[Function]}
                                        subscriptionID=""
                                      />
                                    </Connect(ArchiveClusterDialog)>
                                    <Connect(UnarchiveClusterDialog)
                                      onClose={[Function]}
                                    >
                                      <UnarchiveClusterDialog
                                        closeModal={[Function]}
                                        isOpen={false}
                                        name=""
                                        onClose={[Function]}
                                        resetResponse={[Function]}
                                        submit={[Function]}
                                        subscriptionID=""
                                        unarchiveClusterResponse={
                                          Object {
                                            "cluster": null,
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                            "valid": true,
                                          }
                                        }
                                      />
                                    </Connect(UnarchiveClusterDialog)>
                                    <Connect(DeleteClusterDialog)
                                      onClose={[Function]}
                                    >
                                      <DeleteClusterDialog
                                        clearDeleteClusterResponse={[Function]}
                                        close={[Function]}
                                        deleteCluster={[Function]}
                                        deleteClusterResponse={
                                          Object {
                                            "cluster": null,
                                            "error": false,
                                            "errorDetails": null,
                                            "errorMessage": "",
                                            "fulfilled": false,
                                            "pending": false,
                                          }
                                        }
                                        isOpen={false}
                                        modalData={Object {}}
                                        onClose={[Function]}
                                      />
                                    </Connect(DeleteClusterDialog)>
                                  </div>
                                </article>
                              </Card>
                            </section>
                          </PageSection>
                        </ClusterList>
                      </Connect(ClusterList)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /archived 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/archived",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/archived",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/archived",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/archived",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/archived",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/archived",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/archived",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/archived",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/archived",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/archived",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/archived",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/archived",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/archived",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/archived",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/archived",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/archived",
                          "url": "/archived",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/archived",
                          "search": "",
                        }
                      }
                      path="/archived"
                    >
                      <Connect(ArchivedClusterList)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/archived",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/archived",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/archived",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/archived",
                            "url": "/archived",
                          }
                        }
                      >
                        <ArchivedClusterList
                          closeModal={[Function]}
                          cloudProviders={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "providers": Object {},
                            }
                          }
                          clusters={Array []}
                          error={false}
                          errorDetails={null}
                          errorMessage=""
                          fetchClusters={[Function]}
                          fulfilled={false}
                          getCloudProviders={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/archived",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/archived",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          invalidateClusters={[Function]}
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/archived",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/archived",
                              "url": "/archived",
                            }
                          }
                          openModal={[Function]}
                          pending={true}
                          queryParams={Object {}}
                          setListFlag={[Function]}
                          setSorting={[Function]}
                          valid={true}
                          viewOptions={
                            Object {
                              "currentPage": 1,
                              "filter": "",
                              "flags": Object {
                                "showArchived": true,
                              },
                              "pageSize": 50,
                              "sorting": Object {
                                "isAscending": true,
                                "sortField": "name",
                              },
                              "totalCount": 0,
                              "totalPages": 0,
                            }
                          }
                        >
                          <PageHeader>
                            <section
                              className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                              widget-type="InsightsPageHeader"
                            >
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Archived clusters",
                                    },
                                  ]
                                }
                              >
                                <Breadcrumb>
                                  <nav
                                    aria-label="Breadcrumb"
                                    className="pf-c-breadcrumb"
                                    data-ouia-component-id={39223}
                                    data-ouia-component-type="PF4/Breadcrumb"
                                    data-ouia-safe={true}
                                  >
                                    <ol
                                      className="pf-c-breadcrumb__list"
                                    >
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Clusters"
                                        replace={false}
                                        showDivider={false}
                                        strict={false}
                                        to=""
                                      >
                                        <Route
                                          exact={false}
                                          path=""
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/"
                                            onClick={[Function]}
                                            showDivider={false}
                                            style={Object {}}
                                            to="/openshift"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift"
                                                target={null}
                                              >
                                                Clusters
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <BreadcrumbItem
                                        isActive={true}
                                        key=".$Archived clusters"
                                        showDivider={true}
                                      >
                                        <li
                                          className="pf-c-breadcrumb__item"
                                        >
                                          <span
                                            className="pf-c-breadcrumb__item-divider"
                                          >
                                            <AngleRightIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 256 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                  transform=""
                                                />
                                              </svg>
                                            </AngleRightIcon>
                                          </span>
                                          Archived clusters
                                        </li>
                                      </BreadcrumbItem>
                                    </ol>
                                  </nav>
                                </Breadcrumb>
                              </Breadcrumbs>
                              <PageHeaderTitle
                                title="Archived clusters"
                              >
                                <Title
                                  className=""
                                  headingLevel="h1"
                                  size="2xl"
                                  widget-type="InsightsPageHeaderTitle"
                                >
                                  <h1
                                    className="pf-c-title pf-m-2xl"
                                    widget-type="InsightsPageHeaderTitle"
                                  >
                                     
                                    Archived clusters
                                     
                                  </h1>
                                </Title>
                              </PageHeaderTitle>
                            </section>
                          </PageHeader>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="cluster-list"
                                  >
                                    <div
                                      className="cluster-loading-container"
                                    >
                                      <Spinner
                                        centered={true}
                                      >
                                        <div
                                          className="ins-c-spinner ins-m-center"
                                          role="status"
                                        >
                                          <span
                                            className="pf-u-screen-reader"
                                          >
                                            Loading...
                                          </span>
                                        </div>
                                      </Spinner>
                                    </div>
                                  </div>
                                </article>
                              </Card>
                            </section>
                          </PageSection>
                        </ArchivedClusterList>
                      </Connect(ArchivedClusterList)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /create 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/create",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/create",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/create",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/create",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/create",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/create",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/create",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/create",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/create",
                          "url": "/create",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/create",
                          "search": "",
                        }
                      }
                      path="/create"
                    >
                      <Connect(CreateCluster)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/create",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/create",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/create",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/create",
                            "url": "/create",
                          }
                        }
                      >
                        <CreateCluster
                          getOrganizationAndQuota={[Function]}
                          hasOSDQuota={false}
                          hasRHMIQuota={false}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/create",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/create",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/create",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/create",
                              "url": "/create",
                            }
                          }
                          openModal={[Function]}
                          organization={
                            Object {
                              "details": null,
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "quotaList": Object {},
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Create a cluster to get started"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={37916}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Create"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Create
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Create a cluster to get started"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Create a cluster to get started
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="pf-c-content ocm-page ocp-osd-selection"
                                  >
                                    <div
                                      className="flex-container"
                                    >
                                      <Link
                                        className="infra-card pf-c-card create-cluster-card"
                                        replace={false}
                                        to="/install"
                                      >
                                        <a
                                          className="infra-card pf-c-card create-cluster-card"
                                          href="/install"
                                          onClick={[Function]}
                                        >
                                          <CardTitle
                                            className="create-cluster-header"
                                          >
                                            <div
                                              className="pf-c-card__title create-cluster-header"
                                            >
                                              <img
                                                alt="OpenShift Container Platform"
                                                className="create-cluster-logo"
                                                src="test-file-stub"
                                              />
                                            </div>
                                          </CardTitle>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              Create an OCP cluster using the command-line installer. Your cluster will automatically register to the Cluster Manager after installation completes.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                      <Tooltip
                                        appendTo={[Function]}
                                        aria="describedby"
                                        boundary="window"
                                        className=""
                                        content="You do not have quota for this option. Contact sales to purchase additional quota."
                                        distance={15}
                                        enableFlip={true}
                                        entryDelay={500}
                                        exitDelay={500}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        id=""
                                        isAppLauncher={false}
                                        isContentLeftAligned={false}
                                        isVisible={false}
                                        maxWidth="18.75rem"
                                        position="top"
                                        tippyProps={Object {}}
                                        trigger="mouseenter focus"
                                        zIndex={9999}
                                      >
                                        <PopoverBase
                                          appendTo={[Function]}
                                          aria="describedby"
                                          arrow={true}
                                          boundary="window"
                                          content={
                                            <div
                                              className=""
                                              id=""
                                              role="tooltip"
                                            >
                                              <TooltipContent
                                                isLeftAligned={false}
                                              >
                                                You do not have quota for this option. Contact sales to purchase additional quota.
                                              </TooltipContent>
                                            </div>
                                          }
                                          delay={
                                            Array [
                                              500,
                                              500,
                                            ]
                                          }
                                          distance={15}
                                          flip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          lazy={true}
                                          maxWidth="18.75rem"
                                          onCreate={[Function]}
                                          placement="top"
                                          popperOptions={
                                            Object {
                                              "modifiers": Object {
                                                "hide": Object {
                                                  "enabled": true,
                                                },
                                                "preventOverflow": Object {
                                                  "enabled": true,
                                                },
                                              },
                                            }
                                          }
                                          theme="pf-tooltip"
                                          trigger="mouseenter focus"
                                          zIndex={9999}
                                        >
                                          <Card
                                            className="infra-card create-cluster-card card-disabled"
                                          >
                                            <article
                                              className="pf-c-card infra-card create-cluster-card card-disabled"
                                            >
                                              <CardTitle
                                                className="create-cluster-header"
                                              >
                                                <div
                                                  className="pf-c-card__title create-cluster-header"
                                                >
                                                  <img
                                                    alt="OpenShift Dedicated"
                                                    className="create-cluster-logo"
                                                    src="test-file-stub"
                                                  />
                                                </div>
                                              </CardTitle>
                                              <CardBody>
                                                <div
                                                  className="pf-c-card__body"
                                                >
                                                  Create a Red Hat-managed cluster (OSD), provisioned on Amazon Web Services or Google Cloud Platform.
                                                </div>
                                              </CardBody>
                                            </article>
                                          </Card>
                                          <Portal
                                            containerInfo={
                                              <div>
                                                <div
                                                  class=""
                                                  id=""
                                                  role="tooltip"
                                                >
                                                  <div
                                                    class="pf-c-tooltip__content"
                                                  >
                                                    You do not have quota for this option. Contact sales to purchase additional quota.
                                                  </div>
                                                </div>
                                              </div>
                                            }
                                          >
                                            <div
                                              className=""
                                              id=""
                                              role="tooltip"
                                            >
                                              <TooltipContent
                                                isLeftAligned={false}
                                              >
                                                <div
                                                  className="pf-c-tooltip__content"
                                                >
                                                  You do not have quota for this option. Contact sales to purchase additional quota.
                                                </div>
                                              </TooltipContent>
                                            </div>
                                          </Portal>
                                        </PopoverBase>
                                      </Tooltip>
                                    </div>
                                  </div>
                                </article>
                              </Card>
                            </section>
                          </PageSection>
                        </CreateCluster>
                      </Connect(CreateCluster)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /create/osd 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/create/osd",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "REPLACE",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "pathname": "/create",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/create",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "REPLACE",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "pathname": "/create",
                    "search": "",
                    "state": undefined,
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/create",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "pathname": "/create",
                "search": "",
                "state": undefined,
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "REPLACE",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/create",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/create",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "REPLACE",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "pathname": "/create",
                      "search": "",
                      "state": undefined,
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/create",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="REPLACE"
                history={
                  Object {
                    "action": "REPLACE",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "pathname": "/create",
                        "search": "",
                        "state": undefined,
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/create",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "pathname": "/create",
                    "search": "",
                    "state": undefined,
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "REPLACE",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "pathname": "/create",
                          "search": "",
                          "state": undefined,
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/create",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/create",
                          "url": "/create",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "pathname": "/create",
                          "search": "",
                          "state": undefined,
                        }
                      }
                      path="/create"
                    >
                      <Connect(CreateCluster)
                        history={
                          Object {
                            "action": "REPLACE",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "pathname": "/create",
                                "search": "",
                                "state": undefined,
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/create",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "pathname": "/create",
                            "search": "",
                            "state": undefined,
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/create",
                            "url": "/create",
                          }
                        }
                      >
                        <CreateCluster
                          getOrganizationAndQuota={[Function]}
                          hasOSDQuota={false}
                          hasRHMIQuota={false}
                          history={
                            Object {
                              "action": "REPLACE",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "pathname": "/create",
                                  "search": "",
                                  "state": undefined,
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/create",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "pathname": "/create",
                              "search": "",
                              "state": undefined,
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/create",
                              "url": "/create",
                            }
                          }
                          openModal={[Function]}
                          organization={
                            Object {
                              "details": null,
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "quotaList": Object {},
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Create a cluster to get started"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={37856}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Create"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Create
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Create a cluster to get started"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Create a cluster to get started
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="pf-c-content ocm-page ocp-osd-selection"
                                  >
                                    <div
                                      className="flex-container"
                                    >
                                      <Link
                                        className="infra-card pf-c-card create-cluster-card"
                                        replace={false}
                                        to="/install"
                                      >
                                        <a
                                          className="infra-card pf-c-card create-cluster-card"
                                          href="/install"
                                          onClick={[Function]}
                                        >
                                          <CardTitle
                                            className="create-cluster-header"
                                          >
                                            <div
                                              className="pf-c-card__title create-cluster-header"
                                            >
                                              <img
                                                alt="OpenShift Container Platform"
                                                className="create-cluster-logo"
                                                src="test-file-stub"
                                              />
                                            </div>
                                          </CardTitle>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              Create an OCP cluster using the command-line installer. Your cluster will automatically register to the Cluster Manager after installation completes.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                      <Tooltip
                                        appendTo={[Function]}
                                        aria="describedby"
                                        boundary="window"
                                        className=""
                                        content="You do not have quota for this option. Contact sales to purchase additional quota."
                                        distance={15}
                                        enableFlip={true}
                                        entryDelay={500}
                                        exitDelay={500}
                                        flipBehavior={
                                          Array [
                                            "top",
                                            "right",
                                            "bottom",
                                            "left",
                                            "top",
                                            "right",
                                            "bottom",
                                          ]
                                        }
                                        id=""
                                        isAppLauncher={false}
                                        isContentLeftAligned={false}
                                        isVisible={false}
                                        maxWidth="18.75rem"
                                        position="top"
                                        tippyProps={Object {}}
                                        trigger="mouseenter focus"
                                        zIndex={9999}
                                      >
                                        <PopoverBase
                                          appendTo={[Function]}
                                          aria="describedby"
                                          arrow={true}
                                          boundary="window"
                                          content={
                                            <div
                                              className=""
                                              id=""
                                              role="tooltip"
                                            >
                                              <TooltipContent
                                                isLeftAligned={false}
                                              >
                                                You do not have quota for this option. Contact sales to purchase additional quota.
                                              </TooltipContent>
                                            </div>
                                          }
                                          delay={
                                            Array [
                                              500,
                                              500,
                                            ]
                                          }
                                          distance={15}
                                          flip={true}
                                          flipBehavior={
                                            Array [
                                              "top",
                                              "right",
                                              "bottom",
                                              "left",
                                              "top",
                                              "right",
                                              "bottom",
                                            ]
                                          }
                                          isVisible={false}
                                          lazy={true}
                                          maxWidth="18.75rem"
                                          onCreate={[Function]}
                                          placement="top"
                                          popperOptions={
                                            Object {
                                              "modifiers": Object {
                                                "hide": Object {
                                                  "enabled": true,
                                                },
                                                "preventOverflow": Object {
                                                  "enabled": true,
                                                },
                                              },
                                            }
                                          }
                                          theme="pf-tooltip"
                                          trigger="mouseenter focus"
                                          zIndex={9999}
                                        >
                                          <Card
                                            className="infra-card create-cluster-card card-disabled"
                                          >
                                            <article
                                              className="pf-c-card infra-card create-cluster-card card-disabled"
                                            >
                                              <CardTitle
                                                className="create-cluster-header"
                                              >
                                                <div
                                                  className="pf-c-card__title create-cluster-header"
                                                >
                                                  <img
                                                    alt="OpenShift Dedicated"
                                                    className="create-cluster-logo"
                                                    src="test-file-stub"
                                                  />
                                                </div>
                                              </CardTitle>
                                              <CardBody>
                                                <div
                                                  className="pf-c-card__body"
                                                >
                                                  Create a Red Hat-managed cluster (OSD), provisioned on Amazon Web Services or Google Cloud Platform.
                                                </div>
                                              </CardBody>
                                            </article>
                                          </Card>
                                          <Portal
                                            containerInfo={
                                              <div>
                                                <div
                                                  class=""
                                                  id=""
                                                  role="tooltip"
                                                >
                                                  <div
                                                    class="pf-c-tooltip__content"
                                                  >
                                                    You do not have quota for this option. Contact sales to purchase additional quota.
                                                  </div>
                                                </div>
                                              </div>
                                            }
                                          >
                                            <div
                                              className=""
                                              id=""
                                              role="tooltip"
                                            >
                                              <TooltipContent
                                                isLeftAligned={false}
                                              >
                                                <div
                                                  className="pf-c-tooltip__content"
                                                >
                                                  You do not have quota for this option. Contact sales to purchase additional quota.
                                                </div>
                                              </TooltipContent>
                                            </div>
                                          </Portal>
                                        </PopoverBase>
                                      </Tooltip>
                                    </div>
                                  </div>
                                </article>
                              </Card>
                            </section>
                          </PageSection>
                        </CreateCluster>
                      </Connect(CreateCluster)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /create/osd/aws 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/create/osd/aws",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/create/osd/aws",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/create/osd/aws",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create/osd/aws",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/create/osd/aws",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/create/osd/aws",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create/osd/aws",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create/osd/aws",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create/osd/aws",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create/osd/aws",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/create/osd/aws",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create/osd/aws",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create/osd/aws",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/create/osd/aws",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/create/osd/aws",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/create/osd/aws",
                          "url": "/create/osd/aws",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/create/osd/aws",
                          "search": "",
                        }
                      }
                      path="/create/osd/aws"
                      render={[Function]}
                    >
                      <Connect(ReduxForm)
                        cloudProviderID="aws"
                      >
                        <ReduxForm
                          closeModal={[Function]}
                          cloudProviderID="aws"
                          cloudProviders={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "providers": Object {},
                            }
                          }
                          clustersQuota={
                            Object {
                              "aws": Object {
                                "byoc": Object {
                                  "multiAz": Object {},
                                  "singleAz": Object {},
                                  "totalAvailable": 0,
                                },
                                "rhInfra": Object {
                                  "multiAz": Object {},
                                  "singleAz": Object {},
                                  "totalAvailable": 0,
                                },
                              },
                              "gcp": Object {
                                "rhInfra": Object {
                                  "multiAz": Object {},
                                  "singleAz": Object {},
                                  "totalAvailable": 0,
                                },
                              },
                              "hasAwsQuota": false,
                              "hasGcpQuota": false,
                              "hasOsdQuota": false,
                              "hasRhmiQuota": false,
                            }
                          }
                          createClusterResponse={
                            Object {
                              "cluster": null,
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": false,
                              "valid": true,
                            }
                          }
                          getCloudProviders={[Function]}
                          getLoadBalancers={[Function]}
                          getMachineTypes={[Function]}
                          getOrganizationAndQuota={[Function]}
                          getPersistentStorage={[Function]}
                          initialValues={
                            Object {
                              "aws_access_key_id": "",
                              "aws_secret_access_key": "",
                              "byoc": "false",
                              "dns_base_domain": "",
                              "load_balancers": "0",
                              "multi_az": "false",
                              "name": "",
                              "network_configuration_toggle": "basic",
                              "nodes_compute": "4",
                              "persistent_storage": "107374182400",
                              "region": "us-east-1",
                            }
                          }
                          isBYOCModalOpen={false}
                          isErrorModalOpen={false}
                          loadBalancerValues={
                            Object {
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": true,
                              "values": Array [],
                            }
                          }
                          machineTypes={
                            Object {
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": true,
                              "types": Object {},
                            }
                          }
                          onSubmit={[Function]}
                          openModal={[Function]}
                          organization={
                            Object {
                              "details": null,
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "quotaList": Object {},
                            }
                          }
                          persistentStorageValues={
                            Object {
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": true,
                              "values": Array [],
                            }
                          }
                          privateClusterSelected={false}
                          resetForm={[Function]}
                          resetResponse={[Function]}
                        >
                          <Connect(Form(CreateOSDPage))
                            closeModal={[Function]}
                            cloudProviderID="aws"
                            cloudProviders={
                              Object {
                                "error": true,
                                "errorCode": undefined,
                                "errorDetails": undefined,
                                "errorMessage": "[object Object]",
                                "fulfilled": false,
                                "internalErrorCode": undefined,
                                "operationID": undefined,
                                "pending": true,
                                "providers": Object {},
                              }
                            }
                            clustersQuota={
                              Object {
                                "aws": Object {
                                  "byoc": Object {
                                    "multiAz": Object {},
                                    "singleAz": Object {},
                                    "totalAvailable": 0,
                                  },
                                  "rhInfra": Object {
                                    "multiAz": Object {},
                                    "singleAz": Object {},
                                    "totalAvailable": 0,
                                  },
                                },
                                "gcp": Object {
                                  "rhInfra": Object {
                                    "multiAz": Object {},
                                    "singleAz": Object {},
                                    "totalAvailable": 0,
                                  },
                                },
                                "hasAwsQuota": false,
                                "hasGcpQuota": false,
                                "hasOsdQuota": false,
                                "hasRhmiQuota": false,
                              }
                            }
                            createClusterResponse={
                              Object {
                                "cluster": null,
                                "error": false,
                                "errorDetails": null,
                                "errorMessage": "",
                                "fulfilled": false,
                                "pending": false,
                                "valid": true,
                              }
                            }
                            destroyOnUnmount={true}
                            enableReinitialize={false}
                            forceUnregisterOnUnmount={false}
                            form="CreateCluster"
                            getCloudProviders={[Function]}
                            getFormState={[Function]}
                            getLoadBalancers={[Function]}
                            getMachineTypes={[Function]}
                            getOrganizationAndQuota={[Function]}
                            getPersistentStorage={[Function]}
                            initialValues={
                              Object {
                                "aws_access_key_id": "",
                                "aws_secret_access_key": "",
                                "byoc": "false",
                                "dns_base_domain": "",
                                "load_balancers": "0",
                                "multi_az": "false",
                                "name": "",
                                "network_configuration_toggle": "basic",
                                "nodes_compute": "4",
                                "persistent_storage": "107374182400",
                                "region": "us-east-1",
                              }
                            }
                            isBYOCModalOpen={false}
                            isErrorModalOpen={false}
                            keepDirtyOnReinitialize={false}
                            loadBalancerValues={
                              Object {
                                "error": false,
                                "errorDetails": null,
                                "errorMessage": "",
                                "fulfilled": false,
                                "pending": true,
                                "values": Array [],
                              }
                            }
                            machineTypes={
                              Object {
                                "error": false,
                                "errorDetails": null,
                                "errorMessage": "",
                                "fulfilled": false,
                                "pending": true,
                                "types": Object {},
                              }
                            }
                            onSubmit={[Function]}
                            openModal={[Function]}
                            organization={
                              Object {
                                "details": null,
                                "error": true,
                                "errorCode": undefined,
                                "errorDetails": undefined,
                                "errorMessage": "[object Object]",
                                "fulfilled": false,
                                "internalErrorCode": undefined,
                                "operationID": undefined,
                                "pending": true,
                                "quotaList": Object {},
                              }
                            }
                            persistentStorageValues={
                              Object {
                                "error": false,
                                "errorDetails": null,
                                "errorMessage": "",
                                "fulfilled": false,
                                "pending": true,
                                "values": Array [],
                              }
                            }
                            persistentSubmitErrors={false}
                            privateClusterSelected={false}
                            pure={true}
                            resetForm={[Function]}
                            resetResponse={[Function]}
                            shouldAsyncValidate={[Function]}
                            shouldError={[Function]}
                            shouldValidate={[Function]}
                            shouldWarn={[Function]}
                            touchOnBlur={true}
                            touchOnChange={false}
                            updateUnregisteredFields={false}
                          >
                            <Form(CreateOSDPage)
                              anyTouched={false}
                              array={
                                Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                }
                              }
                              arrayInsert={[Function]}
                              arrayMove={[Function]}
                              arrayPop={[Function]}
                              arrayPush={[Function]}
                              arrayRemove={[Function]}
                              arrayRemoveAll={[Function]}
                              arrayShift={[Function]}
                              arraySplice={[Function]}
                              arraySwap={[Function]}
                              arrayUnshift={[Function]}
                              asyncValidating={false}
                              autofill={[Function]}
                              blur={[Function]}
                              change={[Function]}
                              clearAsyncError={[Function]}
                              clearFields={[Function]}
                              clearSubmit={[Function]}
                              clearSubmitErrors={[Function]}
                              closeModal={[Function]}
                              cloudProviderID="aws"
                              cloudProviders={
                                Object {
                                  "error": true,
                                  "errorCode": undefined,
                                  "errorDetails": undefined,
                                  "errorMessage": "[object Object]",
                                  "fulfilled": false,
                                  "internalErrorCode": undefined,
                                  "operationID": undefined,
                                  "pending": true,
                                  "providers": Object {},
                                }
                              }
                              clustersQuota={
                                Object {
                                  "aws": Object {
                                    "byoc": Object {
                                      "multiAz": Object {},
                                      "singleAz": Object {},
                                      "totalAvailable": 0,
                                    },
                                    "rhInfra": Object {
                                      "multiAz": Object {},
                                      "singleAz": Object {},
                                      "totalAvailable": 0,
                                    },
                                  },
                                  "gcp": Object {
                                    "rhInfra": Object {
                                      "multiAz": Object {},
                                      "singleAz": Object {},
                                      "totalAvailable": 0,
                                    },
                                  },
                                  "hasAwsQuota": false,
                                  "hasGcpQuota": false,
                                  "hasOsdQuota": false,
                                  "hasRhmiQuota": false,
                                }
                              }
                              createClusterResponse={
                                Object {
                                  "cluster": null,
                                  "error": false,
                                  "errorDetails": null,
                                  "errorMessage": "",
                                  "fulfilled": false,
                                  "pending": false,
                                  "valid": true,
                                }
                              }
                              destroy={[Function]}
                              destroyOnUnmount={true}
                              dirty={false}
                              dispatch={[Function]}
                              enableReinitialize={false}
                              focus={[Function]}
                              forceUnregisterOnUnmount={false}
                              form="CreateCluster"
                              getCloudProviders={[Function]}
                              getFormState={[Function]}
                              getLoadBalancers={[Function]}
                              getMachineTypes={[Function]}
                              getOrganizationAndQuota={[Function]}
                              getPersistentStorage={[Function]}
                              initialValues={
                                Object {
                                  "aws_access_key_id": "",
                                  "aws_secret_access_key": "",
                                  "byoc": "false",
                                  "dns_base_domain": "",
                                  "load_balancers": "0",
                                  "multi_az": "false",
                                  "name": "",
                                  "network_configuration_toggle": "basic",
                                  "nodes_compute": "4",
                                  "persistent_storage": "107374182400",
                                  "region": "us-east-1",
                                }
                              }
                              initialize={[Function]}
                              initialized={true}
                              invalid={false}
                              isBYOCModalOpen={false}
                              isErrorModalOpen={false}
                              keepDirtyOnReinitialize={false}
                              loadBalancerValues={
                                Object {
                                  "error": false,
                                  "errorDetails": null,
                                  "errorMessage": "",
                                  "fulfilled": false,
                                  "pending": true,
                                  "values": Array [],
                                }
                              }
                              machineTypes={
                                Object {
                                  "error": false,
                                  "errorDetails": null,
                                  "errorMessage": "",
                                  "fulfilled": false,
                                  "pending": true,
                                  "types": Object {},
                                }
                              }
                              onSubmit={[Function]}
                              openModal={[Function]}
                              organization={
                                Object {
                                  "details": null,
                                  "error": true,
                                  "errorCode": undefined,
                                  "errorDetails": undefined,
                                  "errorMessage": "[object Object]",
                                  "fulfilled": false,
                                  "internalErrorCode": undefined,
                                  "operationID": undefined,
                                  "pending": true,
                                  "quotaList": Object {},
                                }
                              }
                              persistentStorageValues={
                                Object {
                                  "error": false,
                                  "errorDetails": null,
                                  "errorMessage": "",
                                  "fulfilled": false,
                                  "pending": true,
                                  "values": Array [],
                                }
                              }
                              persistentSubmitErrors={false}
                              pristine={true}
                              privateClusterSelected={false}
                              pure={true}
                              registerField={[Function]}
                              reset={[Function]}
                              resetForm={[Function]}
                              resetResponse={[Function]}
                              resetSection={[Function]}
                              setSubmitFailed={[Function]}
                              setSubmitSucceeded={[Function]}
                              shouldAsyncValidate={[Function]}
                              shouldError={[Function]}
                              shouldValidate={[Function]}
                              shouldWarn={[Function]}
                              startAsyncValidation={[Function]}
                              startSubmit={[Function]}
                              stopAsyncValidation={[Function]}
                              stopSubmit={[Function]}
                              submit={[Function]}
                              submitFailed={false}
                              submitSucceeded={false}
                              submitting={false}
                              syncErrors={Object {}}
                              syncWarnings={Object {}}
                              touch={[Function]}
                              touchOnBlur={true}
                              touchOnChange={false}
                              unregisterField={[Function]}
                              untouch={[Function]}
                              updateSyncErrors={[Function]}
                              updateSyncWarnings={[Function]}
                              updateUnregisteredFields={false}
                              valid={true}
                              validExceptSubmit={true}
                              values={
                                Object {
                                  "aws_access_key_id": "",
                                  "aws_secret_access_key": "",
                                  "byoc": "false",
                                  "dns_base_domain": "",
                                  "load_balancers": "0",
                                  "multi_az": "false",
                                  "name": "",
                                  "network_configuration_toggle": "basic",
                                  "nodes_compute": "4",
                                  "persistent_storage": "107374182400",
                                  "region": "us-east-1",
                                }
                              }
                            >
                              <CreateOSDPage
                                anyTouched={false}
                                array={
                                  Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  }
                                }
                                asyncValidate={[Function]}
                                asyncValidating={false}
                                autofill={[Function]}
                                blur={[Function]}
                                change={[Function]}
                                clearAsyncError={[Function]}
                                clearFields={[Function]}
                                clearSubmit={[Function]}
                                clearSubmitErrors={[Function]}
                                closeModal={[Function]}
                                cloudProviderID="aws"
                                cloudProviders={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "fulfilled": false,
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": true,
                                    "providers": Object {},
                                  }
                                }
                                clustersQuota={
                                  Object {
                                    "aws": Object {
                                      "byoc": Object {
                                        "multiAz": Object {},
                                        "singleAz": Object {},
                                        "totalAvailable": 0,
                                      },
                                      "rhInfra": Object {
                                        "multiAz": Object {},
                                        "singleAz": Object {},
                                        "totalAvailable": 0,
                                      },
                                    },
                                    "gcp": Object {
                                      "rhInfra": Object {
                                        "multiAz": Object {},
                                        "singleAz": Object {},
                                        "totalAvailable": 0,
                                      },
                                    },
                                    "hasAwsQuota": false,
                                    "hasGcpQuota": false,
                                    "hasOsdQuota": false,
                                    "hasRhmiQuota": false,
                                  }
                                }
                                createClusterResponse={
                                  Object {
                                    "cluster": null,
                                    "error": false,
                                    "errorDetails": null,
                                    "errorMessage": "",
                                    "fulfilled": false,
                                    "pending": false,
                                    "valid": true,
                                  }
                                }
                                destroy={[Function]}
                                dirty={false}
                                dispatch={[Function]}
                                form="CreateCluster"
                                getCloudProviders={[Function]}
                                getLoadBalancers={[Function]}
                                getMachineTypes={[Function]}
                                getOrganizationAndQuota={[Function]}
                                getPersistentStorage={[Function]}
                                handleSubmit={[Function]}
                                initialValues={
                                  Object {
                                    "aws_access_key_id": "",
                                    "aws_secret_access_key": "",
                                    "byoc": "false",
                                    "dns_base_domain": "",
                                    "load_balancers": "0",
                                    "multi_az": "false",
                                    "name": "",
                                    "network_configuration_toggle": "basic",
                                    "nodes_compute": "4",
                                    "persistent_storage": "107374182400",
                                    "region": "us-east-1",
                                  }
                                }
                                initialize={[Function]}
                                initialized={true}
                                invalid={false}
                                isBYOCModalOpen={false}
                                isErrorModalOpen={false}
                                loadBalancerValues={
                                  Object {
                                    "error": false,
                                    "errorDetails": null,
                                    "errorMessage": "",
                                    "fulfilled": false,
                                    "pending": true,
                                    "values": Array [],
                                  }
                                }
                                machineTypes={
                                  Object {
                                    "error": false,
                                    "errorDetails": null,
                                    "errorMessage": "",
                                    "fulfilled": false,
                                    "pending": true,
                                    "types": Object {},
                                  }
                                }
                                onSubmit={[Function]}
                                openModal={[Function]}
                                organization={
                                  Object {
                                    "details": null,
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "fulfilled": false,
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": true,
                                    "quotaList": Object {},
                                  }
                                }
                                persistentStorageValues={
                                  Object {
                                    "error": false,
                                    "errorDetails": null,
                                    "errorMessage": "",
                                    "fulfilled": false,
                                    "pending": true,
                                    "values": Array [],
                                  }
                                }
                                pristine={true}
                                privateClusterSelected={false}
                                product="osd"
                                pure={true}
                                reset={[Function]}
                                resetForm={[Function]}
                                resetResponse={[Function]}
                                resetSection={[Function]}
                                submit={[Function]}
                                submitFailed={false}
                                submitSucceeded={false}
                                submitting={false}
                                touch={[Function]}
                                untouch={[Function]}
                                valid={true}
                              >
                                <PageTitle
                                  breadcrumbs={
                                    <Breadcrumbs
                                      path={
                                        Array [
                                          Object {
                                            "label": "Clusters",
                                          },
                                          Object {
                                            "label": "Create",
                                            "path": "/create",
                                          },
                                          Object {
                                            "label": "OpenShift Dedicated",
                                            "path": "/create/osd",
                                          },
                                          Object {
                                            "label": "Amazon Web Services",
                                          },
                                        ]
                                      }
                                    />
                                  }
                                  title="Create an OpenShift Dedicated Cluster"
                                >
                                  <PageHeader>
                                    <section
                                      className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                      widget-type="InsightsPageHeader"
                                    >
                                      <Breadcrumbs
                                        path={
                                          Array [
                                            Object {
                                              "label": "Clusters",
                                            },
                                            Object {
                                              "label": "Create",
                                              "path": "/create",
                                            },
                                            Object {
                                              "label": "OpenShift Dedicated",
                                              "path": "/create/osd",
                                            },
                                            Object {
                                              "label": "Amazon Web Services",
                                            },
                                          ]
                                        }
                                      >
                                        <Breadcrumb>
                                          <nav
                                            aria-label="Breadcrumb"
                                            className="pf-c-breadcrumb"
                                            data-ouia-component-id={37243}
                                            data-ouia-component-type="PF4/Breadcrumb"
                                            data-ouia-safe={true}
                                          >
                                            <ol
                                              className="pf-c-breadcrumb__list"
                                            >
                                              <LinkContainer
                                                activeClassName="active"
                                                exact={false}
                                                key=".$Clusters"
                                                replace={false}
                                                showDivider={false}
                                                strict={false}
                                                to=""
                                              >
                                                <Route
                                                  exact={false}
                                                  path=""
                                                  strict={false}
                                                >
                                                  <BreadcrumbItem
                                                    className="active"
                                                    href="/"
                                                    onClick={[Function]}
                                                    showDivider={false}
                                                    style={Object {}}
                                                    to="/openshift"
                                                  >
                                                    <li
                                                      className="pf-c-breadcrumb__item active"
                                                      href="/"
                                                      onClick={[Function]}
                                                      style={Object {}}
                                                    >
                                                      <a
                                                        className="pf-c-breadcrumb__link"
                                                        href="/openshift"
                                                        target={null}
                                                      >
                                                        Clusters
                                                      </a>
                                                    </li>
                                                  </BreadcrumbItem>
                                                </Route>
                                              </LinkContainer>
                                              <LinkContainer
                                                activeClassName="active"
                                                exact={false}
                                                key=".$Create"
                                                replace={false}
                                                showDivider={true}
                                                strict={false}
                                                to="/create"
                                              >
                                                <Route
                                                  exact={false}
                                                  path="/create"
                                                  strict={false}
                                                >
                                                  <BreadcrumbItem
                                                    className="active"
                                                    href="/create"
                                                    onClick={[Function]}
                                                    showDivider={true}
                                                    style={Object {}}
                                                    to="/openshift/create"
                                                  >
                                                    <li
                                                      className="pf-c-breadcrumb__item active"
                                                      href="/create"
                                                      onClick={[Function]}
                                                      style={Object {}}
                                                    >
                                                      <span
                                                        className="pf-c-breadcrumb__item-divider"
                                                      >
                                                        <AngleRightIcon
                                                          color="currentColor"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={null}
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style={
                                                              Object {
                                                                "verticalAlign": "-0.125em",
                                                              }
                                                            }
                                                            viewBox="0 0 256 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                              transform=""
                                                            />
                                                          </svg>
                                                        </AngleRightIcon>
                                                      </span>
                                                      <a
                                                        className="pf-c-breadcrumb__link"
                                                        href="/openshift/create"
                                                        target={null}
                                                      >
                                                        Create
                                                      </a>
                                                    </li>
                                                  </BreadcrumbItem>
                                                </Route>
                                              </LinkContainer>
                                              <LinkContainer
                                                activeClassName="active"
                                                exact={false}
                                                key=".$OpenShift Dedicated"
                                                replace={false}
                                                showDivider={true}
                                                strict={false}
                                                to="/create/osd"
                                              >
                                                <Route
                                                  exact={false}
                                                  path="/create/osd"
                                                  strict={false}
                                                >
                                                  <BreadcrumbItem
                                                    className="active"
                                                    href="/create/osd"
                                                    onClick={[Function]}
                                                    showDivider={true}
                                                    style={Object {}}
                                                    to="/openshift/create/osd"
                                                  >
                                                    <li
                                                      className="pf-c-breadcrumb__item active"
                                                      href="/create/osd"
                                                      onClick={[Function]}
                                                      style={Object {}}
                                                    >
                                                      <span
                                                        className="pf-c-breadcrumb__item-divider"
                                                      >
                                                        <AngleRightIcon
                                                          color="currentColor"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={null}
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style={
                                                              Object {
                                                                "verticalAlign": "-0.125em",
                                                              }
                                                            }
                                                            viewBox="0 0 256 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                              transform=""
                                                            />
                                                          </svg>
                                                        </AngleRightIcon>
                                                      </span>
                                                      <a
                                                        className="pf-c-breadcrumb__link"
                                                        href="/openshift/create/osd"
                                                        target={null}
                                                      >
                                                        OpenShift Dedicated
                                                      </a>
                                                    </li>
                                                  </BreadcrumbItem>
                                                </Route>
                                              </LinkContainer>
                                              <BreadcrumbItem
                                                isActive={true}
                                                key=".$Amazon Web Services"
                                                showDivider={true}
                                              >
                                                <li
                                                  className="pf-c-breadcrumb__item"
                                                >
                                                  <span
                                                    className="pf-c-breadcrumb__item-divider"
                                                  >
                                                    <AngleRightIcon
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 256 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                          transform=""
                                                        />
                                                      </svg>
                                                    </AngleRightIcon>
                                                  </span>
                                                  Amazon Web Services
                                                </li>
                                              </BreadcrumbItem>
                                            </ol>
                                          </nav>
                                        </Breadcrumb>
                                      </Breadcrumbs>
                                      <Split>
                                        <div
                                          className="pf-l-split"
                                        >
                                          <SplitItem
                                            isFilled={true}
                                          >
                                            <div
                                              className="pf-l-split__item pf-m-fill"
                                            >
                                              <PageHeaderTitle
                                                className="ocm-page-title"
                                                title="Create an OpenShift Dedicated Cluster"
                                              >
                                                <Title
                                                  className="ocm-page-title"
                                                  headingLevel="h1"
                                                  size="2xl"
                                                  widget-type="InsightsPageHeaderTitle"
                                                >
                                                  <h1
                                                    className="pf-c-title pf-m-2xl ocm-page-title"
                                                    widget-type="InsightsPageHeaderTitle"
                                                  >
                                                     
                                                    Create an OpenShift Dedicated Cluster
                                                     
                                                  </h1>
                                                </Title>
                                              </PageHeaderTitle>
                                            </div>
                                          </SplitItem>
                                        </div>
                                      </Split>
                                    </section>
                                  </PageHeader>
                                </PageTitle>
                                <PageSection>
                                  <section
                                    className="pf-c-page__main-section"
                                  >
                                    <Spinner
                                      centered={true}
                                    >
                                      <div
                                        className="ins-c-spinner ins-m-center"
                                        role="status"
                                      >
                                        <span
                                          className="pf-u-screen-reader"
                                        >
                                          Loading...
                                        </span>
                                      </div>
                                    </Spinner>
                                  </section>
                                </PageSection>
                              </CreateOSDPage>
                            </Form(CreateOSDPage)>
                          </Connect(Form(CreateOSDPage))>
                        </ReduxForm>
                      </Connect(ReduxForm)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /create/osd/gcp 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/create/osd/gcp",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/create/osd/gcp",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/create/osd/gcp",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create/osd/gcp",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/create/osd/gcp",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/create/osd/gcp",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create/osd/gcp",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create/osd/gcp",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create/osd/gcp",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create/osd/gcp",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/create/osd/gcp",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/create/osd/gcp",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/create/osd/gcp",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/create/osd/gcp",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/create/osd/gcp",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/create/osd/gcp",
                          "url": "/create/osd/gcp",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/create/osd/gcp",
                          "search": "",
                        }
                      }
                      path="/create/osd/gcp"
                      render={[Function]}
                    >
                      <Connect(ReduxForm)
                        cloudProviderID="gcp"
                      >
                        <ReduxForm
                          closeModal={[Function]}
                          cloudProviderID="gcp"
                          cloudProviders={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "providers": Object {},
                            }
                          }
                          clustersQuota={
                            Object {
                              "aws": Object {
                                "byoc": Object {
                                  "multiAz": Object {},
                                  "singleAz": Object {},
                                  "totalAvailable": 0,
                                },
                                "rhInfra": Object {
                                  "multiAz": Object {},
                                  "singleAz": Object {},
                                  "totalAvailable": 0,
                                },
                              },
                              "gcp": Object {
                                "rhInfra": Object {
                                  "multiAz": Object {},
                                  "singleAz": Object {},
                                  "totalAvailable": 0,
                                },
                              },
                              "hasAwsQuota": false,
                              "hasGcpQuota": false,
                              "hasOsdQuota": false,
                              "hasRhmiQuota": false,
                            }
                          }
                          createClusterResponse={
                            Object {
                              "cluster": null,
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": false,
                              "valid": true,
                            }
                          }
                          getCloudProviders={[Function]}
                          getLoadBalancers={[Function]}
                          getMachineTypes={[Function]}
                          getOrganizationAndQuota={[Function]}
                          getPersistentStorage={[Function]}
                          initialValues={
                            Object {
                              "aws_access_key_id": "",
                              "aws_secret_access_key": "",
                              "byoc": "false",
                              "dns_base_domain": "",
                              "load_balancers": "0",
                              "multi_az": "false",
                              "name": "",
                              "network_configuration_toggle": "basic",
                              "nodes_compute": "4",
                              "persistent_storage": "107374182400",
                              "region": "us-east1",
                            }
                          }
                          isBYOCModalOpen={false}
                          isErrorModalOpen={false}
                          loadBalancerValues={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "values": Array [],
                            }
                          }
                          machineTypes={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "types": Object {},
                            }
                          }
                          onSubmit={[Function]}
                          openModal={[Function]}
                          organization={
                            Object {
                              "details": null,
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "quotaList": Object {},
                            }
                          }
                          persistentStorageValues={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "values": Array [],
                            }
                          }
                          privateClusterSelected={false}
                          resetForm={[Function]}
                          resetResponse={[Function]}
                        >
                          <Connect(Form(CreateOSDPage))
                            closeModal={[Function]}
                            cloudProviderID="gcp"
                            cloudProviders={
                              Object {
                                "error": true,
                                "errorCode": undefined,
                                "errorDetails": undefined,
                                "errorMessage": "[object Object]",
                                "fulfilled": false,
                                "internalErrorCode": undefined,
                                "operationID": undefined,
                                "pending": true,
                                "providers": Object {},
                              }
                            }
                            clustersQuota={
                              Object {
                                "aws": Object {
                                  "byoc": Object {
                                    "multiAz": Object {},
                                    "singleAz": Object {},
                                    "totalAvailable": 0,
                                  },
                                  "rhInfra": Object {
                                    "multiAz": Object {},
                                    "singleAz": Object {},
                                    "totalAvailable": 0,
                                  },
                                },
                                "gcp": Object {
                                  "rhInfra": Object {
                                    "multiAz": Object {},
                                    "singleAz": Object {},
                                    "totalAvailable": 0,
                                  },
                                },
                                "hasAwsQuota": false,
                                "hasGcpQuota": false,
                                "hasOsdQuota": false,
                                "hasRhmiQuota": false,
                              }
                            }
                            createClusterResponse={
                              Object {
                                "cluster": null,
                                "error": false,
                                "errorDetails": null,
                                "errorMessage": "",
                                "fulfilled": false,
                                "pending": false,
                                "valid": true,
                              }
                            }
                            destroyOnUnmount={true}
                            enableReinitialize={false}
                            forceUnregisterOnUnmount={false}
                            form="CreateCluster"
                            getCloudProviders={[Function]}
                            getFormState={[Function]}
                            getLoadBalancers={[Function]}
                            getMachineTypes={[Function]}
                            getOrganizationAndQuota={[Function]}
                            getPersistentStorage={[Function]}
                            initialValues={
                              Object {
                                "aws_access_key_id": "",
                                "aws_secret_access_key": "",
                                "byoc": "false",
                                "dns_base_domain": "",
                                "load_balancers": "0",
                                "multi_az": "false",
                                "name": "",
                                "network_configuration_toggle": "basic",
                                "nodes_compute": "4",
                                "persistent_storage": "107374182400",
                                "region": "us-east1",
                              }
                            }
                            isBYOCModalOpen={false}
                            isErrorModalOpen={false}
                            keepDirtyOnReinitialize={false}
                            loadBalancerValues={
                              Object {
                                "error": true,
                                "errorCode": undefined,
                                "errorDetails": undefined,
                                "errorMessage": "[object Object]",
                                "fulfilled": false,
                                "internalErrorCode": undefined,
                                "operationID": undefined,
                                "pending": true,
                                "values": Array [],
                              }
                            }
                            machineTypes={
                              Object {
                                "error": true,
                                "errorCode": undefined,
                                "errorDetails": undefined,
                                "errorMessage": "[object Object]",
                                "fulfilled": false,
                                "internalErrorCode": undefined,
                                "operationID": undefined,
                                "pending": true,
                                "types": Object {},
                              }
                            }
                            onSubmit={[Function]}
                            openModal={[Function]}
                            organization={
                              Object {
                                "details": null,
                                "error": true,
                                "errorCode": undefined,
                                "errorDetails": undefined,
                                "errorMessage": "[object Object]",
                                "fulfilled": false,
                                "internalErrorCode": undefined,
                                "operationID": undefined,
                                "pending": true,
                                "quotaList": Object {},
                              }
                            }
                            persistentStorageValues={
                              Object {
                                "error": true,
                                "errorCode": undefined,
                                "errorDetails": undefined,
                                "errorMessage": "[object Object]",
                                "fulfilled": false,
                                "internalErrorCode": undefined,
                                "operationID": undefined,
                                "pending": true,
                                "values": Array [],
                              }
                            }
                            persistentSubmitErrors={false}
                            privateClusterSelected={false}
                            pure={true}
                            resetForm={[Function]}
                            resetResponse={[Function]}
                            shouldAsyncValidate={[Function]}
                            shouldError={[Function]}
                            shouldValidate={[Function]}
                            shouldWarn={[Function]}
                            touchOnBlur={true}
                            touchOnChange={false}
                            updateUnregisteredFields={false}
                          >
                            <Form(CreateOSDPage)
                              anyTouched={false}
                              array={
                                Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                }
                              }
                              arrayInsert={[Function]}
                              arrayMove={[Function]}
                              arrayPop={[Function]}
                              arrayPush={[Function]}
                              arrayRemove={[Function]}
                              arrayRemoveAll={[Function]}
                              arrayShift={[Function]}
                              arraySplice={[Function]}
                              arraySwap={[Function]}
                              arrayUnshift={[Function]}
                              asyncValidating={false}
                              autofill={[Function]}
                              blur={[Function]}
                              change={[Function]}
                              clearAsyncError={[Function]}
                              clearFields={[Function]}
                              clearSubmit={[Function]}
                              clearSubmitErrors={[Function]}
                              closeModal={[Function]}
                              cloudProviderID="gcp"
                              cloudProviders={
                                Object {
                                  "error": true,
                                  "errorCode": undefined,
                                  "errorDetails": undefined,
                                  "errorMessage": "[object Object]",
                                  "fulfilled": false,
                                  "internalErrorCode": undefined,
                                  "operationID": undefined,
                                  "pending": true,
                                  "providers": Object {},
                                }
                              }
                              clustersQuota={
                                Object {
                                  "aws": Object {
                                    "byoc": Object {
                                      "multiAz": Object {},
                                      "singleAz": Object {},
                                      "totalAvailable": 0,
                                    },
                                    "rhInfra": Object {
                                      "multiAz": Object {},
                                      "singleAz": Object {},
                                      "totalAvailable": 0,
                                    },
                                  },
                                  "gcp": Object {
                                    "rhInfra": Object {
                                      "multiAz": Object {},
                                      "singleAz": Object {},
                                      "totalAvailable": 0,
                                    },
                                  },
                                  "hasAwsQuota": false,
                                  "hasGcpQuota": false,
                                  "hasOsdQuota": false,
                                  "hasRhmiQuota": false,
                                }
                              }
                              createClusterResponse={
                                Object {
                                  "cluster": null,
                                  "error": false,
                                  "errorDetails": null,
                                  "errorMessage": "",
                                  "fulfilled": false,
                                  "pending": false,
                                  "valid": true,
                                }
                              }
                              destroy={[Function]}
                              destroyOnUnmount={true}
                              dirty={true}
                              dispatch={[Function]}
                              enableReinitialize={false}
                              focus={[Function]}
                              forceUnregisterOnUnmount={false}
                              form="CreateCluster"
                              getCloudProviders={[Function]}
                              getFormState={[Function]}
                              getLoadBalancers={[Function]}
                              getMachineTypes={[Function]}
                              getOrganizationAndQuota={[Function]}
                              getPersistentStorage={[Function]}
                              initialValues={
                                Object {
                                  "aws_access_key_id": "",
                                  "aws_secret_access_key": "",
                                  "byoc": "false",
                                  "dns_base_domain": "",
                                  "load_balancers": "0",
                                  "multi_az": "false",
                                  "name": "",
                                  "network_configuration_toggle": "basic",
                                  "nodes_compute": "4",
                                  "persistent_storage": "107374182400",
                                  "region": "us-east1",
                                }
                              }
                              initialize={[Function]}
                              initialized={true}
                              invalid={false}
                              isBYOCModalOpen={false}
                              isErrorModalOpen={false}
                              keepDirtyOnReinitialize={false}
                              loadBalancerValues={
                                Object {
                                  "error": true,
                                  "errorCode": undefined,
                                  "errorDetails": undefined,
                                  "errorMessage": "[object Object]",
                                  "fulfilled": false,
                                  "internalErrorCode": undefined,
                                  "operationID": undefined,
                                  "pending": true,
                                  "values": Array [],
                                }
                              }
                              machineTypes={
                                Object {
                                  "error": true,
                                  "errorCode": undefined,
                                  "errorDetails": undefined,
                                  "errorMessage": "[object Object]",
                                  "fulfilled": false,
                                  "internalErrorCode": undefined,
                                  "operationID": undefined,
                                  "pending": true,
                                  "types": Object {},
                                }
                              }
                              onSubmit={[Function]}
                              openModal={[Function]}
                              organization={
                                Object {
                                  "details": null,
                                  "error": true,
                                  "errorCode": undefined,
                                  "errorDetails": undefined,
                                  "errorMessage": "[object Object]",
                                  "fulfilled": false,
                                  "internalErrorCode": undefined,
                                  "operationID": undefined,
                                  "pending": true,
                                  "quotaList": Object {},
                                }
                              }
                              persistentStorageValues={
                                Object {
                                  "error": true,
                                  "errorCode": undefined,
                                  "errorDetails": undefined,
                                  "errorMessage": "[object Object]",
                                  "fulfilled": false,
                                  "internalErrorCode": undefined,
                                  "operationID": undefined,
                                  "pending": true,
                                  "values": Array [],
                                }
                              }
                              persistentSubmitErrors={false}
                              pristine={false}
                              privateClusterSelected={false}
                              pure={true}
                              registerField={[Function]}
                              reset={[Function]}
                              resetForm={[Function]}
                              resetResponse={[Function]}
                              resetSection={[Function]}
                              setSubmitFailed={[Function]}
                              setSubmitSucceeded={[Function]}
                              shouldAsyncValidate={[Function]}
                              shouldError={[Function]}
                              shouldValidate={[Function]}
                              shouldWarn={[Function]}
                              startAsyncValidation={[Function]}
                              startSubmit={[Function]}
                              stopAsyncValidation={[Function]}
                              stopSubmit={[Function]}
                              submit={[Function]}
                              submitFailed={false}
                              submitSucceeded={false}
                              submitting={false}
                              syncErrors={Object {}}
                              syncWarnings={Object {}}
                              touch={[Function]}
                              touchOnBlur={true}
                              touchOnChange={false}
                              unregisterField={[Function]}
                              untouch={[Function]}
                              updateSyncErrors={[Function]}
                              updateSyncWarnings={[Function]}
                              updateUnregisteredFields={false}
                              valid={true}
                              validExceptSubmit={true}
                              values={
                                Object {
                                  "aws_access_key_id": "",
                                  "aws_secret_access_key": "",
                                  "byoc": "false",
                                  "dns_base_domain": "",
                                  "load_balancers": "0",
                                  "multi_az": "false",
                                  "name": "",
                                  "network_configuration_toggle": "basic",
                                  "nodes_compute": "4",
                                  "persistent_storage": "107374182400",
                                  "region": "us-east-1",
                                }
                              }
                            >
                              <CreateOSDPage
                                anyTouched={false}
                                array={
                                  Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  }
                                }
                                asyncValidate={[Function]}
                                asyncValidating={false}
                                autofill={[Function]}
                                blur={[Function]}
                                change={[Function]}
                                clearAsyncError={[Function]}
                                clearFields={[Function]}
                                clearSubmit={[Function]}
                                clearSubmitErrors={[Function]}
                                closeModal={[Function]}
                                cloudProviderID="gcp"
                                cloudProviders={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "fulfilled": false,
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": true,
                                    "providers": Object {},
                                  }
                                }
                                clustersQuota={
                                  Object {
                                    "aws": Object {
                                      "byoc": Object {
                                        "multiAz": Object {},
                                        "singleAz": Object {},
                                        "totalAvailable": 0,
                                      },
                                      "rhInfra": Object {
                                        "multiAz": Object {},
                                        "singleAz": Object {},
                                        "totalAvailable": 0,
                                      },
                                    },
                                    "gcp": Object {
                                      "rhInfra": Object {
                                        "multiAz": Object {},
                                        "singleAz": Object {},
                                        "totalAvailable": 0,
                                      },
                                    },
                                    "hasAwsQuota": false,
                                    "hasGcpQuota": false,
                                    "hasOsdQuota": false,
                                    "hasRhmiQuota": false,
                                  }
                                }
                                createClusterResponse={
                                  Object {
                                    "cluster": null,
                                    "error": false,
                                    "errorDetails": null,
                                    "errorMessage": "",
                                    "fulfilled": false,
                                    "pending": false,
                                    "valid": true,
                                  }
                                }
                                destroy={[Function]}
                                dirty={true}
                                dispatch={[Function]}
                                form="CreateCluster"
                                getCloudProviders={[Function]}
                                getLoadBalancers={[Function]}
                                getMachineTypes={[Function]}
                                getOrganizationAndQuota={[Function]}
                                getPersistentStorage={[Function]}
                                handleSubmit={[Function]}
                                initialValues={
                                  Object {
                                    "aws_access_key_id": "",
                                    "aws_secret_access_key": "",
                                    "byoc": "false",
                                    "dns_base_domain": "",
                                    "load_balancers": "0",
                                    "multi_az": "false",
                                    "name": "",
                                    "network_configuration_toggle": "basic",
                                    "nodes_compute": "4",
                                    "persistent_storage": "107374182400",
                                    "region": "us-east1",
                                  }
                                }
                                initialize={[Function]}
                                initialized={true}
                                invalid={false}
                                isBYOCModalOpen={false}
                                isErrorModalOpen={false}
                                loadBalancerValues={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "fulfilled": false,
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": true,
                                    "values": Array [],
                                  }
                                }
                                machineTypes={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "fulfilled": false,
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": true,
                                    "types": Object {},
                                  }
                                }
                                onSubmit={[Function]}
                                openModal={[Function]}
                                organization={
                                  Object {
                                    "details": null,
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "fulfilled": false,
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": true,
                                    "quotaList": Object {},
                                  }
                                }
                                persistentStorageValues={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "fulfilled": false,
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": true,
                                    "values": Array [],
                                  }
                                }
                                pristine={false}
                                privateClusterSelected={false}
                                product="osd"
                                pure={true}
                                reset={[Function]}
                                resetForm={[Function]}
                                resetResponse={[Function]}
                                resetSection={[Function]}
                                submit={[Function]}
                                submitFailed={false}
                                submitSucceeded={false}
                                submitting={false}
                                touch={[Function]}
                                untouch={[Function]}
                                valid={true}
                              >
                                <PageTitle
                                  breadcrumbs={
                                    <Breadcrumbs
                                      path={
                                        Array [
                                          Object {
                                            "label": "Clusters",
                                          },
                                          Object {
                                            "label": "Create",
                                            "path": "/create",
                                          },
                                          Object {
                                            "label": "OpenShift Dedicated",
                                            "path": "/create/osd",
                                          },
                                          Object {
                                            "label": "Google Cloud Platform",
                                          },
                                        ]
                                      }
                                    />
                                  }
                                  title="Create an OpenShift Dedicated Cluster"
                                >
                                  <PageHeader>
                                    <section
                                      className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                      widget-type="InsightsPageHeader"
                                    >
                                      <Breadcrumbs
                                        path={
                                          Array [
                                            Object {
                                              "label": "Clusters",
                                            },
                                            Object {
                                              "label": "Create",
                                              "path": "/create",
                                            },
                                            Object {
                                              "label": "OpenShift Dedicated",
                                              "path": "/create/osd",
                                            },
                                            Object {
                                              "label": "Google Cloud Platform",
                                            },
                                          ]
                                        }
                                      >
                                        <Breadcrumb>
                                          <nav
                                            aria-label="Breadcrumb"
                                            className="pf-c-breadcrumb"
                                            data-ouia-component-id={37547}
                                            data-ouia-component-type="PF4/Breadcrumb"
                                            data-ouia-safe={true}
                                          >
                                            <ol
                                              className="pf-c-breadcrumb__list"
                                            >
                                              <LinkContainer
                                                activeClassName="active"
                                                exact={false}
                                                key=".$Clusters"
                                                replace={false}
                                                showDivider={false}
                                                strict={false}
                                                to=""
                                              >
                                                <Route
                                                  exact={false}
                                                  path=""
                                                  strict={false}
                                                >
                                                  <BreadcrumbItem
                                                    className="active"
                                                    href="/"
                                                    onClick={[Function]}
                                                    showDivider={false}
                                                    style={Object {}}
                                                    to="/openshift"
                                                  >
                                                    <li
                                                      className="pf-c-breadcrumb__item active"
                                                      href="/"
                                                      onClick={[Function]}
                                                      style={Object {}}
                                                    >
                                                      <a
                                                        className="pf-c-breadcrumb__link"
                                                        href="/openshift"
                                                        target={null}
                                                      >
                                                        Clusters
                                                      </a>
                                                    </li>
                                                  </BreadcrumbItem>
                                                </Route>
                                              </LinkContainer>
                                              <LinkContainer
                                                activeClassName="active"
                                                exact={false}
                                                key=".$Create"
                                                replace={false}
                                                showDivider={true}
                                                strict={false}
                                                to="/create"
                                              >
                                                <Route
                                                  exact={false}
                                                  path="/create"
                                                  strict={false}
                                                >
                                                  <BreadcrumbItem
                                                    className="active"
                                                    href="/create"
                                                    onClick={[Function]}
                                                    showDivider={true}
                                                    style={Object {}}
                                                    to="/openshift/create"
                                                  >
                                                    <li
                                                      className="pf-c-breadcrumb__item active"
                                                      href="/create"
                                                      onClick={[Function]}
                                                      style={Object {}}
                                                    >
                                                      <span
                                                        className="pf-c-breadcrumb__item-divider"
                                                      >
                                                        <AngleRightIcon
                                                          color="currentColor"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={null}
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style={
                                                              Object {
                                                                "verticalAlign": "-0.125em",
                                                              }
                                                            }
                                                            viewBox="0 0 256 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                              transform=""
                                                            />
                                                          </svg>
                                                        </AngleRightIcon>
                                                      </span>
                                                      <a
                                                        className="pf-c-breadcrumb__link"
                                                        href="/openshift/create"
                                                        target={null}
                                                      >
                                                        Create
                                                      </a>
                                                    </li>
                                                  </BreadcrumbItem>
                                                </Route>
                                              </LinkContainer>
                                              <LinkContainer
                                                activeClassName="active"
                                                exact={false}
                                                key=".$OpenShift Dedicated"
                                                replace={false}
                                                showDivider={true}
                                                strict={false}
                                                to="/create/osd"
                                              >
                                                <Route
                                                  exact={false}
                                                  path="/create/osd"
                                                  strict={false}
                                                >
                                                  <BreadcrumbItem
                                                    className="active"
                                                    href="/create/osd"
                                                    onClick={[Function]}
                                                    showDivider={true}
                                                    style={Object {}}
                                                    to="/openshift/create/osd"
                                                  >
                                                    <li
                                                      className="pf-c-breadcrumb__item active"
                                                      href="/create/osd"
                                                      onClick={[Function]}
                                                      style={Object {}}
                                                    >
                                                      <span
                                                        className="pf-c-breadcrumb__item-divider"
                                                      >
                                                        <AngleRightIcon
                                                          color="currentColor"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={null}
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style={
                                                              Object {
                                                                "verticalAlign": "-0.125em",
                                                              }
                                                            }
                                                            viewBox="0 0 256 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                              transform=""
                                                            />
                                                          </svg>
                                                        </AngleRightIcon>
                                                      </span>
                                                      <a
                                                        className="pf-c-breadcrumb__link"
                                                        href="/openshift/create/osd"
                                                        target={null}
                                                      >
                                                        OpenShift Dedicated
                                                      </a>
                                                    </li>
                                                  </BreadcrumbItem>
                                                </Route>
                                              </LinkContainer>
                                              <BreadcrumbItem
                                                isActive={true}
                                                key=".$Google Cloud Platform"
                                                showDivider={true}
                                              >
                                                <li
                                                  className="pf-c-breadcrumb__item"
                                                >
                                                  <span
                                                    className="pf-c-breadcrumb__item-divider"
                                                  >
                                                    <AngleRightIcon
                                                      color="currentColor"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        fill="currentColor"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 256 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                          transform=""
                                                        />
                                                      </svg>
                                                    </AngleRightIcon>
                                                  </span>
                                                  Google Cloud Platform
                                                </li>
                                              </BreadcrumbItem>
                                            </ol>
                                          </nav>
                                        </Breadcrumb>
                                      </Breadcrumbs>
                                      <Split>
                                        <div
                                          className="pf-l-split"
                                        >
                                          <SplitItem
                                            isFilled={true}
                                          >
                                            <div
                                              className="pf-l-split__item pf-m-fill"
                                            >
                                              <PageHeaderTitle
                                                className="ocm-page-title"
                                                title="Create an OpenShift Dedicated Cluster"
                                              >
                                                <Title
                                                  className="ocm-page-title"
                                                  headingLevel="h1"
                                                  size="2xl"
                                                  widget-type="InsightsPageHeaderTitle"
                                                >
                                                  <h1
                                                    className="pf-c-title pf-m-2xl ocm-page-title"
                                                    widget-type="InsightsPageHeaderTitle"
                                                  >
                                                     
                                                    Create an OpenShift Dedicated Cluster
                                                     
                                                  </h1>
                                                </Title>
                                              </PageHeaderTitle>
                                            </div>
                                          </SplitItem>
                                        </div>
                                      </Split>
                                    </section>
                                  </PageHeader>
                                </PageTitle>
                                <PageSection>
                                  <section
                                    className="pf-c-page__main-section"
                                  >
                                    <Spinner
                                      centered={true}
                                    >
                                      <div
                                        className="ins-c-spinner ins-m-center"
                                        role="status"
                                      >
                                        <span
                                          className="pf-u-screen-reader"
                                        >
                                          Loading...
                                        </span>
                                      </div>
                                    </Spinner>
                                  </section>
                                </PageSection>
                              </CreateOSDPage>
                            </Form(CreateOSDPage)>
                          </Connect(Form(CreateOSDPage))>
                        </ReduxForm>
                      </Connect(ReduxForm)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /details/:id 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/details/:id",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/details/:id",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/details/:id",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/details/:id",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/details/:id",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/details/:id",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/details/:id",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/details/:id",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/details/:id",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/details/:id",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/details/:id",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/details/:id",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/details/:id",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/details/:id",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/details/:id",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {
                            "id": ":id",
                          },
                          "path": "/details/:id",
                          "url": "/details/:id",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/details/:id",
                          "search": "",
                        }
                      }
                      path="/details/:id"
                    >
                      <Connect(ClusterDetails)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/details/:id",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/details/:id",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/details/:id",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {
                              "id": ":id",
                            },
                            "path": "/details/:id",
                            "url": "/details/:id",
                          }
                        }
                      >
                        <ClusterDetails
                          addOns={
                            Object {
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "freeAddOns": Array [],
                              "fulfilled": false,
                              "items": Array [],
                              "pending": true,
                              "resourceNames": Array [],
                            }
                          }
                          anyModalOpen={false}
                          canAllowClusterAdmin={false}
                          canSubscribeOCP={false}
                          clearGlobalError={[Function]}
                          closeModal={[Function]}
                          cloudProviders={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                              "providers": Object {},
                            }
                          }
                          clusterAddOns={
                            Object {
                              "clusterID": undefined,
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "items": Array [],
                              "pending": true,
                            }
                          }
                          clusterDetails={
                            Object {
                              "cluster": null,
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": true,
                              "valid": true,
                            }
                          }
                          clusterIdentityProviders={
                            Object {
                              "clusterIDPList": Array [],
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": true,
                            }
                          }
                          clusterLogsViewOptions={
                            Object {
                              "currentPage": 1,
                              "filter": Object {
                                "description": "",
                              },
                              "flags": Object {
                                "conditionalFilterFlags": Object {
                                  "severityTypes": Array [],
                                },
                              },
                              "pageSize": 20,
                              "sorting": Object {
                                "isAscending": false,
                                "sortField": "timestamp",
                              },
                              "totalCount": 0,
                              "totalPages": 0,
                            }
                          }
                          disableRule={[Function]}
                          displayClusterLogs={true}
                          enableRule={[Function]}
                          fetchDetails={[Function]}
                          fetchGroups={[Function]}
                          fetchInsightsData={[Function]}
                          getAddOns={[Function]}
                          getAlerts={[Function]}
                          getCloudProviders={[Function]}
                          getClusterAddOns={[Function]}
                          getClusterHistory={[Function]}
                          getClusterIdentityProviders={[Function]}
                          getClusterOperators={[Function]}
                          getClusterRouters={[Function]}
                          getGrants={[Function]}
                          getNodes={[Function]}
                          getOrganizationAndQuota={[Function]}
                          getUsers={[Function]}
                          groups={
                            Object {
                              "fulfilled": false,
                              "groups": Array [],
                              "pending": false,
                              "rejected": false,
                            }
                          }
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/details/:id",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/details/:id",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          insightsData={Object {}}
                          invalidateClusters={[Function]}
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/details/:id",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {
                                "id": ":id",
                              },
                              "path": "/details/:id",
                              "url": "/details/:id",
                            }
                          }
                          openModal={[Function]}
                          organization={
                            Object {
                              "details": null,
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "fulfilled": false,
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": true,
                              "quotaList": Object {},
                            }
                          }
                          resetClusterHistory={[Function]}
                          resetIdentityProvidersState={[Function]}
                          setGlobalError={[Function]}
                          voteOnRule={[Function]}
                        >
                          <div
                            id="clusterdetails-content"
                          >
                            <div
                              className="cluster-loading-container"
                            >
                              <Spinner
                                centered={true}
                              >
                                <div
                                  className="ins-c-spinner ins-m-center"
                                  role="status"
                                >
                                  <span
                                    className="pf-u-screen-reader"
                                  >
                                    Loading...
                                  </span>
                                </div>
                              </Spinner>
                            </div>
                          </div>
                        </ClusterDetails>
                      </Connect(ClusterDetails)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install",
                          "url": "/install",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install",
                          "search": "",
                        }
                      }
                      path="/install"
                    >
                      <InstallInfrastructure
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install",
                            "url": "/install",
                          }
                        }
                      >
                        <PageTitle
                          breadcrumbs={
                            <Breadcrumbs
                              path={
                                Array [
                                  Object {
                                    "label": "Clusters",
                                  },
                                  Object {
                                    "label": "Create",
                                    "path": "/create",
                                  },
                                  Object {
                                    "label": "OpenShift Container Platform",
                                  },
                                ]
                              }
                            />
                          }
                          title="Install OpenShift Container Platform 4"
                        >
                          <PageHeader>
                            <section
                              className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                              widget-type="InsightsPageHeader"
                            >
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                    },
                                  ]
                                }
                              >
                                <Breadcrumb>
                                  <nav
                                    aria-label="Breadcrumb"
                                    className="pf-c-breadcrumb"
                                    data-ouia-component-id={36459}
                                    data-ouia-component-type="PF4/Breadcrumb"
                                    data-ouia-safe={true}
                                  >
                                    <ol
                                      className="pf-c-breadcrumb__list"
                                    >
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Clusters"
                                        replace={false}
                                        showDivider={false}
                                        strict={false}
                                        to=""
                                      >
                                        <Route
                                          exact={false}
                                          path=""
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/"
                                            onClick={[Function]}
                                            showDivider={false}
                                            style={Object {}}
                                            to="/openshift"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift"
                                                target={null}
                                              >
                                                Clusters
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Create"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/create"
                                      >
                                        <Route
                                          exact={false}
                                          path="/create"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className=""
                                            href="/create"
                                            onClick={[Function]}
                                            showDivider={true}
                                            to="/openshift/create"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item"
                                              href="/create"
                                              onClick={[Function]}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/create"
                                                target={null}
                                              >
                                                Create
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <BreadcrumbItem
                                        isActive={true}
                                        key=".$OpenShift Container Platform"
                                        showDivider={true}
                                      >
                                        <li
                                          className="pf-c-breadcrumb__item"
                                        >
                                          <span
                                            className="pf-c-breadcrumb__item-divider"
                                          >
                                            <AngleRightIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 256 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                  transform=""
                                                />
                                              </svg>
                                            </AngleRightIcon>
                                          </span>
                                          OpenShift Container Platform
                                        </li>
                                      </BreadcrumbItem>
                                    </ol>
                                  </nav>
                                </Breadcrumb>
                              </Breadcrumbs>
                              <Split>
                                <div
                                  className="pf-l-split"
                                >
                                  <SplitItem
                                    isFilled={true}
                                  >
                                    <div
                                      className="pf-l-split__item pf-m-fill"
                                    >
                                      <PageHeaderTitle
                                        className="ocm-page-title"
                                        title="Install OpenShift Container Platform 4"
                                      >
                                        <Title
                                          className="ocm-page-title"
                                          headingLevel="h1"
                                          size="2xl"
                                          widget-type="InsightsPageHeaderTitle"
                                        >
                                          <h1
                                            className="pf-c-title pf-m-2xl ocm-page-title"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                             
                                            Install OpenShift Container Platform 4
                                             
                                          </h1>
                                        </Title>
                                      </PageHeaderTitle>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </section>
                          </PageHeader>
                        </PageTitle>
                        <PageSection>
                          <section
                            className="pf-c-page__main-section"
                          >
                            <InstructionsInfrastructure>
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="pf-c-content ocm-page"
                                  >
                                    <Title
                                      headingLevel="h3"
                                      size="2xl"
                                    >
                                      <h3
                                        className="pf-c-title pf-m-2xl"
                                      >
                                        Select an infrastructure provider
                                      </h3>
                                    </Title>
                                    <Gallery
                                      className="ocp-infra-gallery"
                                      hasGutter={true}
                                    >
                                      <div
                                        className="pf-l-gallery pf-m-gutter ocp-infra-gallery"
                                      >
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider"
                                              replace={false}
                                              to="/install/aws"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider"
                                                href="/install/aws"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="AWS"
                                                      className="infra-logo"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on Amazon Web Services
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider"
                                              replace={false}
                                              to="/install/azure"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider"
                                                href="/install/azure"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="Azure"
                                                      className="infra-logo"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on Microsoft Azure
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider"
                                              replace={false}
                                              to="/install/gcp"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider"
                                                href="/install/gcp"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="GCP"
                                                      className="infra-logo-google-cloud"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on Google Cloud Platform
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider"
                                              replace={false}
                                              to="/install/vsphere/user-provisioned"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider"
                                                href="/install/vsphere/user-provisioned"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="vSphere"
                                                      className="infra-logo-vsphere"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on VMware vSphere
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider"
                                              replace={false}
                                              to="/install/openstack"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider"
                                                href="/install/openstack"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="OpenStack"
                                                      className="infra-logo-osp"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on Red Hat OpenStack
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider"
                                              replace={false}
                                              to="/install/rhv/installer-provisioned"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider"
                                                href="/install/rhv/installer-provisioned"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="Red Hat Virtualization"
                                                      className="infra-logo-rhv"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on Red Hat Virtualization
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider"
                                              replace={false}
                                              to="/install/metal/user-provisioned"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider"
                                                href="/install/metal/user-provisioned"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="Bare Metal"
                                                      className="infra-logo"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on Bare Metal
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider ibm-or-power"
                                              replace={false}
                                              to="/install/ibmz/user-provisioned"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider ibm-or-power"
                                                href="/install/ibmz/user-provisioned"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="IBM"
                                                      className="infra-logo-ibm"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on IBM Z
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider ibm-or-power"
                                              replace={false}
                                              to="/install/power/user-provisioned"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider ibm-or-power"
                                                href="/install/power/user-provisioned"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="Power Systems"
                                                      className="infra-logo-power"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Run on Power
                                                      </h5>
                                                    </Title>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                        <GalleryItem>
                                          <div>
                                            <Link
                                              className="infra-card infra-card-cloud-provider"
                                              replace={false}
                                              to="/install/crc/installer-provisioned"
                                            >
                                              <a
                                                className="infra-card infra-card-cloud-provider"
                                                href="/install/crc/installer-provisioned"
                                                onClick={[Function]}
                                              >
                                                <CardBadge
                                                  isHidden={true}
                                                >
                                                  <div
                                                    className="card-badge-container"
                                                  >
                                                    <span
                                                      className="card-badge card-badge-hidden"
                                                    />
                                                  </div>
                                                </CardBadge>
                                                <CardBody>
                                                  <div
                                                    className="pf-c-card__body"
                                                  >
                                                    <img
                                                      alt="CRC"
                                                      className="infra-logo-crc"
                                                      src="test-file-stub"
                                                    />
                                                    <Title
                                                      className="infra-crc-title"
                                                      headingLevel="h5"
                                                      size="lg"
                                                    >
                                                      <h5
                                                        className="pf-c-title pf-m-lg infra-crc-title"
                                                      >
                                                        Run on Laptop
                                                      </h5>
                                                    </Title>
                                                    <span
                                                      className="infra-crc-icon-text"
                                                    >
                                                      Powered by Red Hat CodeReady Containers
                                                    </span>
                                                  </div>
                                                </CardBody>
                                              </a>
                                            </Link>
                                          </div>
                                        </GalleryItem>
                                      </div>
                                    </Gallery>
                                  </div>
                                </article>
                              </Card>
                            </InstructionsInfrastructure>
                          </section>
                        </PageSection>
                      </InstallInfrastructure>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/aws 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/aws",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/aws",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/aws",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/aws",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/aws",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/aws",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/aws",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/aws",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/aws",
                          "url": "/install/aws",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/aws",
                          "search": "",
                        }
                      }
                      path="/install/aws"
                    >
                      <InstallAWS
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/aws",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/aws",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/aws",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/aws",
                            "url": "/install/aws",
                          }
                        }
                      >
                        <PageTitle
                          breadcrumbs={
                            <Breadcrumbs
                              path={
                                Array [
                                  Object {
                                    "label": "Clusters",
                                  },
                                  Object {
                                    "label": "Create",
                                    "path": "/create",
                                  },
                                  Object {
                                    "label": "OpenShift Container Platform",
                                    "path": "/install",
                                  },
                                  Object {
                                    "label": "Amazon Web Services",
                                  },
                                ]
                              }
                            />
                          }
                          title="Install OpenShift Container Platform 4"
                        >
                          <PageHeader>
                            <section
                              className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                              widget-type="InsightsPageHeader"
                            >
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Amazon Web Services",
                                    },
                                  ]
                                }
                              >
                                <Breadcrumb>
                                  <nav
                                    aria-label="Breadcrumb"
                                    className="pf-c-breadcrumb"
                                    data-ouia-component-id={579}
                                    data-ouia-component-type="PF4/Breadcrumb"
                                    data-ouia-safe={true}
                                  >
                                    <ol
                                      className="pf-c-breadcrumb__list"
                                    >
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Clusters"
                                        replace={false}
                                        showDivider={false}
                                        strict={false}
                                        to=""
                                      >
                                        <Route
                                          exact={false}
                                          path=""
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/"
                                            onClick={[Function]}
                                            showDivider={false}
                                            style={Object {}}
                                            to="/openshift"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift"
                                                target={null}
                                              >
                                                Clusters
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Create"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/create"
                                      >
                                        <Route
                                          exact={false}
                                          path="/create"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className=""
                                            href="/create"
                                            onClick={[Function]}
                                            showDivider={true}
                                            to="/openshift/create"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item"
                                              href="/create"
                                              onClick={[Function]}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/create"
                                                target={null}
                                              >
                                                Create
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$OpenShift Container Platform"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/install"
                                      >
                                        <Route
                                          exact={false}
                                          path="/install"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/install"
                                            onClick={[Function]}
                                            showDivider={true}
                                            style={Object {}}
                                            to="/openshift/install"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/install"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/install"
                                                target={null}
                                              >
                                                OpenShift Container Platform
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <BreadcrumbItem
                                        isActive={true}
                                        key=".$Amazon Web Services"
                                        showDivider={true}
                                      >
                                        <li
                                          className="pf-c-breadcrumb__item"
                                        >
                                          <span
                                            className="pf-c-breadcrumb__item-divider"
                                          >
                                            <AngleRightIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 256 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                  transform=""
                                                />
                                              </svg>
                                            </AngleRightIcon>
                                          </span>
                                          Amazon Web Services
                                        </li>
                                      </BreadcrumbItem>
                                    </ol>
                                  </nav>
                                </Breadcrumb>
                              </Breadcrumbs>
                              <Split>
                                <div
                                  className="pf-l-split"
                                >
                                  <SplitItem
                                    isFilled={true}
                                  >
                                    <div
                                      className="pf-l-split__item pf-m-fill"
                                    >
                                      <PageHeaderTitle
                                        className="ocm-page-title"
                                        title="Install OpenShift Container Platform 4"
                                      >
                                        <Title
                                          className="ocm-page-title"
                                          headingLevel="h1"
                                          size="2xl"
                                          widget-type="InsightsPageHeaderTitle"
                                        >
                                          <h1
                                            className="pf-c-title pf-m-2xl ocm-page-title"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                             
                                            Install OpenShift Container Platform 4
                                             
                                          </h1>
                                        </Title>
                                      </PageHeaderTitle>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </section>
                          </PageHeader>
                        </PageTitle>
                        <PageSection>
                          <section
                            className="pf-c-page__main-section"
                          >
                            <InstructionsAWS>
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="pf-c-content ocm-page"
                                  >
                                    <Title
                                      headingLevel="h3"
                                      size="2xl"
                                    >
                                      <h3
                                        className="pf-c-title pf-m-2xl"
                                      >
                                        AWS: Select an installation type
                                      </h3>
                                    </Title>
                                    <div
                                      className="flex-container"
                                    >
                                      <Link
                                        className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                        replace={false}
                                        to="/install/aws/installer-provisioned"
                                      >
                                        <a
                                          className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                          href="/install/aws/installer-provisioned"
                                          onClick={[Function]}
                                        >
                                          <CardBadge
                                            isRecommened={true}
                                          >
                                            <div
                                              className="card-badge-container"
                                            >
                                              <span
                                                className="card-badge"
                                              >
                                                <StarIcon
                                                  color="#06c"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="#06c"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 576 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </StarIcon>
                                                Recommended
                                              </span>
                                            </div>
                                          </CardBadge>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              <SyncAltIcon
                                                alt="Installer-Provisioned Infrastructure"
                                                className="aws-ipi-upi-infra-logo"
                                                color="#73bcf7"
                                                noVerticalAlign={false}
                                                size="xl"
                                              >
                                                <svg
                                                  alt="Installer-Provisioned Infrastructure"
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="aws-ipi-upi-infra-logo"
                                                  fill="#73bcf7"
                                                  height="3em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.375em",
                                                    }
                                                  }
                                                  viewBox="0 0 512 512"
                                                  width="3em"
                                                >
                                                  <path
                                                    d="M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </SyncAltIcon>
                                              <Title
                                                headingLevel="h3"
                                                size="lg"
                                              >
                                                <h3
                                                  className="pf-c-title pf-m-lg"
                                                >
                                                  Installer-provisioned infrastructure
                                                </h3>
                                              </Title>
                                               
                                              Deploy an OpenShift cluster on infrastructure that the installation program provisions and the cluster maintains.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                      <Link
                                        className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                        replace={false}
                                        to="/install/aws/user-provisioned"
                                      >
                                        <a
                                          className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                          href="/install/aws/user-provisioned"
                                          onClick={[Function]}
                                        >
                                          <CardBadge
                                            isHidden={true}
                                          >
                                            <div
                                              className="card-badge-container"
                                            >
                                              <span
                                                className="card-badge card-badge-hidden"
                                              />
                                            </div>
                                          </CardBadge>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              <UserIcon
                                                alt="User-Provisioned Infrastructure"
                                                className="aws-ipi-upi-infra-logo"
                                                color="#73bcf7"
                                                noVerticalAlign={false}
                                                size="xl"
                                              >
                                                <svg
                                                  alt="User-Provisioned Infrastructure"
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="aws-ipi-upi-infra-logo"
                                                  fill="#73bcf7"
                                                  height="3em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.375em",
                                                    }
                                                  }
                                                  viewBox="0 0 448 512"
                                                  width="3em"
                                                >
                                                  <path
                                                    d="M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </UserIcon>
                                              <Title
                                                headingLevel="h3"
                                                size="lg"
                                              >
                                                <h3
                                                  className="pf-c-title pf-m-lg"
                                                >
                                                  User-provisioned infrastructure
                                                </h3>
                                              </Title>
                                              Deploy an OpenShift cluster on infrastructure that you prepare and maintain.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                    </div>
                                  </div>
                                </article>
                              </Card>
                            </InstructionsAWS>
                          </section>
                        </PageSection>
                      </InstallAWS>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/aws/installer-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/aws/installer-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/aws/installer-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/aws/installer-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws/installer-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/aws/installer-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/aws/installer-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/aws/installer-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws/installer-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws/installer-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/aws/installer-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/aws/installer-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/aws/installer-provisioned",
                          "url": "/install/aws/installer-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/aws/installer-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/aws/installer-provisioned"
                    >
                      <Connect(InstallAWSIPI)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/aws/installer-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/aws/installer-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/aws/installer-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/aws/installer-provisioned",
                            "url": "/install/aws/installer-provisioned",
                          }
                        }
                      >
                        <InstallAWSIPI
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/aws/installer-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/aws/installer-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/aws/installer-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/aws/installer-provisioned",
                              "url": "/install/aws/installer-provisioned",
                            }
                          }
                          token={Object {}}
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Amazon Web Services",
                                      "path": "/install/aws",
                                    },
                                    Object {
                                      "label": "Installer-provisioned infrastructure",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on AWS with installer-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Amazon Web Services",
                                        "path": "/install/aws",
                                      },
                                      Object {
                                        "label": "Installer-provisioned infrastructure",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={114}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Amazon Web Services"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install/aws"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install/aws"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install/aws"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install/aws"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install/aws"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install/aws"
                                                  target={null}
                                                >
                                                  Amazon Web Services
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Installer-provisioned infrastructure"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Installer-provisioned infrastructure
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on AWS with installer-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on AWS with installer-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="stable"
                                cloudProvider="AWS"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_aws/installing-aws-account.html"
                                title="Install OpenShift on AWS with installer-provisioned infrastructure"
                                token={Object {}}
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      token={Object {}}
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={Object {}}
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={115}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={Object {}}
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={116}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={Object {}}
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Download
                                                                content="{}
"
                                                                file="pull-secret"
                                                                style={
                                                                  Object {
                                                                    "display": "inline",
                                                                  }
                                                                }
                                                              >
                                                                <div
                                                                  className="react-download-container"
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "display": "inline",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    isDisabled={false}
                                                                    onClick={[Function]}
                                                                    variant="secondary"
                                                                  >
                                                                    <button
                                                                      aria-disabled={false}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-secondary"
                                                                      data-ouia-component-id={117}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={false}
                                                                      onClick={[Function]}
                                                                      type="button"
                                                                    >
                                                                      Download pull secret
                                                                    </button>
                                                                  </Button>
                                                                </div>
                                                              </Download>
                                                              <CopyToClipboard
                                                                onCopy={[Function]}
                                                                text="{}
"
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={false}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={false}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link install--copy-pull-secret"
                                                                      data-ouia-component-id={118}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={false}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={Object {}}
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={Object {}}
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={119}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={Object {}}
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={120}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the documentation to configure your AWS account and run the installer
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="AWS"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_aws/installing-aws-account.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                          The installer will ask you for the domain or subdomain you wish to use (this can be purchased through AWS but it will take some time for the DNS to propogate).
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_aws/installing-aws-account.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={121}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_aws/installing-aws-account.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallAWSIPI>
                      </Connect(InstallAWSIPI)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/aws/user-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/aws/user-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/aws/user-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/aws/user-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws/user-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/aws/user-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/aws/user-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/aws/user-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/aws/user-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/aws/user-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/aws/user-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/aws/user-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/aws/user-provisioned",
                          "url": "/install/aws/user-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/aws/user-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/aws/user-provisioned"
                    >
                      <Connect(InstallAWSUPI)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/aws/user-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/aws/user-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/aws/user-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/aws/user-provisioned",
                            "url": "/install/aws/user-provisioned",
                          }
                        }
                      >
                        <InstallAWSUPI
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/aws/user-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/aws/user-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/aws/user-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/aws/user-provisioned",
                              "url": "/install/aws/user-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Amazon Web Services",
                                      "path": "/install/aws",
                                    },
                                    Object {
                                      "label": "User-provisioned infrastructure",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on AWS with user-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Amazon Web Services",
                                        "path": "/install/aws",
                                      },
                                      Object {
                                        "label": "User-provisioned infrastructure",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={323}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Amazon Web Services"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install/aws"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install/aws"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install/aws"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install/aws"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install/aws"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install/aws"
                                                  target={null}
                                                >
                                                  Amazon Web Services
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$User-provisioned infrastructure"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            User-provisioned infrastructure
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on AWS with user-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on AWS with user-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="stable"
                                cloudProvider="AWS"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_aws/installing-aws-user-infra.html"
                                title="Install OpenShift on AWS with user-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={324}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={325}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={326}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={327}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={328}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={329}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={330}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the documentation to configure your AWS account and run the installer
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="AWS"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_aws/installing-aws-user-infra.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                          The installer will ask you for the domain or subdomain you wish to use (this can be purchased through AWS but it will take some time for the DNS to propogate).
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_aws/installing-aws-user-infra.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={331}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_aws/installing-aws-user-infra.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallAWSUPI>
                      </Connect(InstallAWSUPI)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/azure 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/azure",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/azure",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/azure",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/azure",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/azure",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/azure",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/azure",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/azure",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/azure",
                          "url": "/install/azure",
                        }
                      }
                      exact={true}
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/azure",
                          "search": "",
                        }
                      }
                      path="/install/azure"
                    >
                      <InstallAzure
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/azure",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/azure",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/azure",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/azure",
                            "url": "/install/azure",
                          }
                        }
                      >
                        <PageTitle
                          breadcrumbs={
                            <Breadcrumbs
                              path={
                                Array [
                                  Object {
                                    "label": "Clusters",
                                  },
                                  Object {
                                    "label": "Create",
                                    "path": "/create",
                                  },
                                  Object {
                                    "label": "OpenShift Container Platform",
                                    "path": "/install",
                                  },
                                  Object {
                                    "label": "Microsoft Azure",
                                  },
                                ]
                              }
                            />
                          }
                          title="Install OpenShift Container Platform 4"
                        >
                          <PageHeader>
                            <section
                              className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                              widget-type="InsightsPageHeader"
                            >
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Microsoft Azure",
                                    },
                                  ]
                                }
                              >
                                <Breadcrumb>
                                  <nav
                                    aria-label="Breadcrumb"
                                    className="pf-c-breadcrumb"
                                    data-ouia-component-id={10190}
                                    data-ouia-component-type="PF4/Breadcrumb"
                                    data-ouia-safe={true}
                                  >
                                    <ol
                                      className="pf-c-breadcrumb__list"
                                    >
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Clusters"
                                        replace={false}
                                        showDivider={false}
                                        strict={false}
                                        to=""
                                      >
                                        <Route
                                          exact={false}
                                          path=""
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/"
                                            onClick={[Function]}
                                            showDivider={false}
                                            style={Object {}}
                                            to="/openshift"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift"
                                                target={null}
                                              >
                                                Clusters
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Create"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/create"
                                      >
                                        <Route
                                          exact={false}
                                          path="/create"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className=""
                                            href="/create"
                                            onClick={[Function]}
                                            showDivider={true}
                                            to="/openshift/create"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item"
                                              href="/create"
                                              onClick={[Function]}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/create"
                                                target={null}
                                              >
                                                Create
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$OpenShift Container Platform"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/install"
                                      >
                                        <Route
                                          exact={false}
                                          path="/install"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/install"
                                            onClick={[Function]}
                                            showDivider={true}
                                            style={Object {}}
                                            to="/openshift/install"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/install"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/install"
                                                target={null}
                                              >
                                                OpenShift Container Platform
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <BreadcrumbItem
                                        isActive={true}
                                        key=".$Microsoft Azure"
                                        showDivider={true}
                                      >
                                        <li
                                          className="pf-c-breadcrumb__item"
                                        >
                                          <span
                                            className="pf-c-breadcrumb__item-divider"
                                          >
                                            <AngleRightIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 256 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                  transform=""
                                                />
                                              </svg>
                                            </AngleRightIcon>
                                          </span>
                                          Microsoft Azure
                                        </li>
                                      </BreadcrumbItem>
                                    </ol>
                                  </nav>
                                </Breadcrumb>
                              </Breadcrumbs>
                              <Split>
                                <div
                                  className="pf-l-split"
                                >
                                  <SplitItem
                                    isFilled={true}
                                  >
                                    <div
                                      className="pf-l-split__item pf-m-fill"
                                    >
                                      <PageHeaderTitle
                                        className="ocm-page-title"
                                        title="Install OpenShift Container Platform 4"
                                      >
                                        <Title
                                          className="ocm-page-title"
                                          headingLevel="h1"
                                          size="2xl"
                                          widget-type="InsightsPageHeaderTitle"
                                        >
                                          <h1
                                            className="pf-c-title pf-m-2xl ocm-page-title"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                             
                                            Install OpenShift Container Platform 4
                                             
                                          </h1>
                                        </Title>
                                      </PageHeaderTitle>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </section>
                          </PageHeader>
                        </PageTitle>
                        <PageSection>
                          <section
                            className="pf-c-page__main-section"
                          >
                            <InstructionsAzure>
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="pf-c-content ocm-page"
                                  >
                                    <Title
                                      headingLevel="h3"
                                      size="2xl"
                                    >
                                      <h3
                                        className="pf-c-title pf-m-2xl"
                                      >
                                        Azure: Select an installation type
                                      </h3>
                                    </Title>
                                    <div
                                      className="flex-container"
                                    >
                                      <Link
                                        className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                        replace={false}
                                        to="/install/azure/installer-provisioned"
                                      >
                                        <a
                                          className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                          href="/install/azure/installer-provisioned"
                                          onClick={[Function]}
                                        >
                                          <CardBadge
                                            isRecommened={true}
                                          >
                                            <div
                                              className="card-badge-container"
                                            >
                                              <span
                                                className="card-badge"
                                              >
                                                <StarIcon
                                                  color="#06c"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="#06c"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 576 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </StarIcon>
                                                Recommended
                                              </span>
                                            </div>
                                          </CardBadge>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              <SyncAltIcon
                                                alt="Installer-Provisioned Infrastructure"
                                                className="aws-ipi-upi-infra-logo"
                                                color="#73bcf7"
                                                noVerticalAlign={false}
                                                size="xl"
                                              >
                                                <svg
                                                  alt="Installer-Provisioned Infrastructure"
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="aws-ipi-upi-infra-logo"
                                                  fill="#73bcf7"
                                                  height="3em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.375em",
                                                    }
                                                  }
                                                  viewBox="0 0 512 512"
                                                  width="3em"
                                                >
                                                  <path
                                                    d="M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </SyncAltIcon>
                                              <Title
                                                headingLevel="h3"
                                                size="lg"
                                              >
                                                <h3
                                                  className="pf-c-title pf-m-lg"
                                                >
                                                  Installer-provisioned infrastructure
                                                </h3>
                                              </Title>
                                               
                                              Deploy an OpenShift cluster on infrastructure that the installation program provisions and the cluster maintains.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                      <Link
                                        className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                        replace={false}
                                        to="/install/azure/user-provisioned"
                                      >
                                        <a
                                          className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                          href="/install/azure/user-provisioned"
                                          onClick={[Function]}
                                        >
                                          <CardBadge
                                            isHidden={true}
                                          >
                                            <div
                                              className="card-badge-container"
                                            >
                                              <span
                                                className="card-badge card-badge-hidden"
                                              />
                                            </div>
                                          </CardBadge>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              <UserIcon
                                                alt="User-Provisioned Infrastructure"
                                                className="aws-ipi-upi-infra-logo"
                                                color="#73bcf7"
                                                noVerticalAlign={false}
                                                size="xl"
                                              >
                                                <svg
                                                  alt="User-Provisioned Infrastructure"
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="aws-ipi-upi-infra-logo"
                                                  fill="#73bcf7"
                                                  height="3em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.375em",
                                                    }
                                                  }
                                                  viewBox="0 0 448 512"
                                                  width="3em"
                                                >
                                                  <path
                                                    d="M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </UserIcon>
                                              <Title
                                                headingLevel="h3"
                                                size="lg"
                                              >
                                                <h3
                                                  className="pf-c-title pf-m-lg"
                                                >
                                                  User-provisioned infrastructure
                                                </h3>
                                              </Title>
                                              Deploy an OpenShift cluster on infrastructure that you prepare and maintain.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                    </div>
                                  </div>
                                </article>
                              </Card>
                            </InstructionsAzure>
                          </section>
                        </PageSection>
                      </InstallAzure>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/azure/aro-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/azure/aro-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/azure/aro-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/azure/aro-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/aro-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/azure/aro-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/azure/aro-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/aro-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/aro-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/aro-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/aro-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/azure/aro-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/aro-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/aro-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/azure/aro-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/azure/aro-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/azure/aro-provisioned",
                          "url": "/install/azure/aro-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/azure/aro-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/azure/aro-provisioned"
                    >
                      <Connect(InstallPullSecret)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/azure/aro-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/azure/aro-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/azure/aro-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/azure/aro-provisioned",
                            "url": "/install/azure/aro-provisioned",
                          }
                        }
                      >
                        <InstallPullSecret
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/azure/aro-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/azure/aro-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/azure/aro-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/azure/aro-provisioned",
                              "url": "/install/azure/aro-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            title="Azure Red Hat OpenShift"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Azure Red Hat OpenShift"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Azure Red Hat OpenShift
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection
                            className="ocp-instructions"
                          >
                            <section
                              className="pf-c-page__main-section ocp-instructions"
                            >
                              <Title
                                headingLevel="h3"
                                size="2xl"
                              >
                                <h3
                                  className="pf-c-title pf-m-2xl"
                                >
                                  Red Hat content access
                                </h3>
                              </Title>
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="pf-l-grid pf-m-gutter ocm-page"
                                  >
                                    <TokenErrorAlert
                                      token={
                                        Object {
                                          "error": true,
                                          "errorCode": undefined,
                                          "errorDetails": undefined,
                                          "errorMessage": "[object Object]",
                                          "internalErrorCode": undefined,
                                          "operationID": undefined,
                                          "pending": false,
                                        }
                                      }
                                    >
                                      <Alert
                                        className="token-error-alert"
                                        isInline={true}
                                        title="Failed to obtain pull secret"
                                        variant="danger"
                                      >
                                        <div
                                          aria-label="Danger Alert"
                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                          data-ouia-component-id={34126}
                                          data-ouia-component-type="PF4/Alert"
                                          data-ouia-safe={true}
                                        >
                                          <Component
                                            variant="danger"
                                          >
                                            <div
                                              className="pf-c-alert__icon"
                                            >
                                              <ExclamationCircleIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 512 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </ExclamationCircleIcon>
                                            </div>
                                          </Component>
                                          <h4
                                            className="pf-c-alert__title"
                                          >
                                            <span
                                              className="pf-u-screen-reader"
                                            >
                                              Danger alert:
                                            </span>
                                            Failed to obtain pull secret
                                          </h4>
                                          <div
                                            className="pf-c-alert__description"
                                          >
                                            [object Object]
                                            <br />
                                            <br />
                                            Try again by refreshing the page. If the problem persists, report the issue to
                                             
                                            <a
                                              href="mailto:ocm-feedback@redhat.com"
                                              rel="noreferrer noopener"
                                              target="_blank"
                                            >
                                              ocm-feedback@redhat.com
                                               
                                              <ExternalLinkAltIcon
                                                color="#0066cc"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="#0066cc"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 512 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </ExternalLinkAltIcon>
                                            </a>
                                            .
                                          </div>
                                        </div>
                                      </Alert>
                                    </TokenErrorAlert>
                                    <div
                                      className="pf-c-content"
                                    >
                                      <h3
                                        className="pf-c-title pf-m-md downloads-subtitle"
                                      >
                                        Pull secret
                                      </h3>
                                      <PullSecretSection
                                        text="Download or copy your pull secret. Your pull secret provides your Azure Red Hat OpenShift cluster with access to additional content provided by Red Hat."
                                        token={
                                          Object {
                                            "error": true,
                                            "errorCode": undefined,
                                            "errorDetails": undefined,
                                            "errorMessage": "[object Object]",
                                            "internalErrorCode": undefined,
                                            "operationID": undefined,
                                            "pending": false,
                                          }
                                        }
                                      >
                                        <p>
                                          Download or copy your pull secret. Your pull secret provides your Azure Red Hat OpenShift cluster with access to additional content provided by Red Hat.
                                        </p>
                                        <div>
                                          <Button
                                            isDisabled={true}
                                            onClick={[Function]}
                                            variant="secondary"
                                          >
                                            <button
                                              aria-disabled={true}
                                              aria-label={null}
                                              className="pf-c-button pf-m-secondary pf-m-disabled"
                                              data-ouia-component-id={34127}
                                              data-ouia-component-type="PF4/Button"
                                              data-ouia-safe={true}
                                              disabled={true}
                                              onClick={[Function]}
                                              tabIndex={null}
                                              type="button"
                                            >
                                              Download pull secret
                                            </button>
                                          </Button>
                                          <CopyToClipboard
                                            onCopy={null}
                                            text=""
                                          >
                                            <span
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "margin": "10px",
                                                }
                                              }
                                            >
                                              <Button
                                                className="install--copy-pull-secret"
                                                id="copyPullSecret"
                                                isDisabled={true}
                                                tabIndex={0}
                                                type="button"
                                                variant="link"
                                              >
                                                <button
                                                  aria-disabled={true}
                                                  aria-label={null}
                                                  className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                  data-ouia-component-id={34128}
                                                  data-ouia-component-type="PF4/Button"
                                                  data-ouia-safe={true}
                                                  disabled={true}
                                                  id="copyPullSecret"
                                                  tabIndex={0}
                                                  type="button"
                                                >
                                                  <PasteIcon
                                                    color="#0066cc"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="#0066cc"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 448 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </PasteIcon>
                                                    Copy pull secret
                                                </button>
                                              </Button>
                                            </span>
                                          </CopyToClipboard>
                                        </div>
                                      </PullSecretSection>
                                      <Alert
                                        className="bottom-alert"
                                        isInline={true}
                                        title="Azure Red Hat OpenShift clusters do not connect to OpenShift Cluster Manager at this time. OpenShift Cluster Manager integration may be offered in a future release."
                                        variant="info"
                                      >
                                        <div
                                          aria-label="Info Alert"
                                          className="pf-c-alert pf-m-inline pf-m-info bottom-alert"
                                          data-ouia-component-id={34129}
                                          data-ouia-component-type="PF4/Alert"
                                          data-ouia-safe={true}
                                        >
                                          <Component
                                            variant="info"
                                          >
                                            <div
                                              className="pf-c-alert__icon"
                                            >
                                              <InfoCircleIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 512 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </InfoCircleIcon>
                                            </div>
                                          </Component>
                                          <h4
                                            className="pf-c-alert__title"
                                          >
                                            <span
                                              className="pf-u-screen-reader"
                                            >
                                              Info alert:
                                            </span>
                                            Azure Red Hat OpenShift clusters do not connect to OpenShift Cluster Manager at this time. OpenShift Cluster Manager integration may be offered in a future release.
                                          </h4>
                                        </div>
                                      </Alert>
                                    </div>
                                  </div>
                                </article>
                              </Card>
                            </section>
                          </PageSection>
                        </InstallPullSecret>
                      </Connect(InstallPullSecret)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/azure/installer-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/azure/installer-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/azure/installer-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/azure/installer-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/installer-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/azure/installer-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/azure/installer-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/azure/installer-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/installer-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/installer-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/azure/installer-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/azure/installer-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/azure/installer-provisioned",
                          "url": "/install/azure/installer-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/azure/installer-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/azure/installer-provisioned"
                    >
                      <Connect(InstallAzureIPI)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/azure/installer-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/azure/installer-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/azure/installer-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/azure/installer-provisioned",
                            "url": "/install/azure/installer-provisioned",
                          }
                        }
                      >
                        <InstallAzureIPI
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/azure/installer-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/azure/installer-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/azure/installer-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/azure/installer-provisioned",
                              "url": "/install/azure/installer-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Microsoft Azure",
                                      "path": "/install/azure",
                                    },
                                    Object {
                                      "label": "Installer-provisioned infrastructure",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on Azure with installer-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Microsoft Azure",
                                        "path": "/install/azure",
                                      },
                                      Object {
                                        "label": "Installer-provisioned infrastructure",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={6124}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Microsoft Azure"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install/azure"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install/azure"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install/azure"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install/azure"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install/azure"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install/azure"
                                                  target={null}
                                                >
                                                  Microsoft Azure
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Installer-provisioned infrastructure"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Installer-provisioned infrastructure
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on Azure with installer-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on Azure with installer-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="stable"
                                cloudProvider="Azure"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_azure/installing-azure-default.html"
                                title="Install OpenShift on Azure with installer-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={6125}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={6126}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={6127}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={6128}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={6129}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={6130}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={6131}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the documentation to configure your Azure account and run the installer
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="Azure"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_azure/installing-azure-default.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                          The installer will ask you for the domain or subdomain you wish to use (this can be purchased through Azure but it will take some time for the DNS to propogate).
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_azure/installing-azure-default.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={6132}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_azure/installing-azure-default.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallAzureIPI>
                      </Connect(InstallAzureIPI)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/azure/user-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/azure/user-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/azure/user-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/azure/user-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/user-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/azure/user-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/azure/user-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/azure/user-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/azure/user-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/azure/user-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/azure/user-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/azure/user-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/azure/user-provisioned",
                          "url": "/install/azure/user-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/azure/user-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/azure/user-provisioned"
                    >
                      <Connect(InstallAzureUPI)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/azure/user-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/azure/user-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/azure/user-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/azure/user-provisioned",
                            "url": "/install/azure/user-provisioned",
                          }
                        }
                      >
                        <InstallAzureUPI
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/azure/user-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/azure/user-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/azure/user-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/azure/user-provisioned",
                              "url": "/install/azure/user-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Microsoft Azure",
                                      "path": "/install/azure",
                                    },
                                    Object {
                                      "label": "User-provisioned infrastructure",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on Azure with user-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Microsoft Azure",
                                        "path": "/install/azure",
                                      },
                                      Object {
                                        "label": "User-provisioned infrastructure",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={8084}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Microsoft Azure"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install/azure"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install/azure"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install/azure"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install/azure"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install/azure"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install/azure"
                                                  target={null}
                                                >
                                                  Microsoft Azure
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$User-provisioned infrastructure"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            User-provisioned infrastructure
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on Azure with user-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on Azure with user-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                breadcrumbs={
                                  <Breadcrumbs
                                    path={
                                      Array [
                                        Object {
                                          "label": "Clusters",
                                        },
                                        Object {
                                          "label": "Create",
                                          "path": "/create",
                                        },
                                        Object {
                                          "label": "OpenShift Container Platform",
                                          "path": "/install",
                                        },
                                        Object {
                                          "label": "Microsoft Azure",
                                          "path": "/install/azure",
                                        },
                                        Object {
                                          "label": "User-provisioned infrastructure",
                                        },
                                      ]
                                    }
                                  />
                                }
                                channel="stable"
                                cloudProvider="Azure"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_azure/installing-azure-default.html"
                                title="Install OpenShift on Azure with installer-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={8085}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={8086}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={8087}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={8088}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={8089}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={8090}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={8091}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the documentation to configure your Azure account and run the installer
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="Azure"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_azure/installing-azure-default.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                          The installer will ask you for the domain or subdomain you wish to use (this can be purchased through Azure but it will take some time for the DNS to propogate).
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_azure/installing-azure-default.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={8092}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_azure/installing-azure-default.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallAzureUPI>
                      </Connect(InstallAzureUPI)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/crc/installer-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/crc/installer-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/crc/installer-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/crc/installer-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/crc/installer-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/crc/installer-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/crc/installer-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/crc/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/crc/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/crc/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/crc/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/crc/installer-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/crc/installer-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/crc/installer-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/crc/installer-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/crc/installer-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/crc/installer-provisioned",
                          "url": "/install/crc/installer-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/crc/installer-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/crc/installer-provisioned"
                    >
                      <Connect(InstallCRC)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/crc/installer-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/crc/installer-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/crc/installer-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/crc/installer-provisioned",
                            "url": "/install/crc/installer-provisioned",
                          }
                        }
                      >
                        <InstallCRC
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/crc/installer-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/crc/installer-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/crc/installer-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/crc/installer-provisioned",
                              "url": "/install/crc/installer-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Code Ready Containers",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift Container Platform 4"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Code Ready Containers",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={16918}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Code Ready Containers"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Code Ready Containers
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift Container Platform 4"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift Container Platform 4
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection
                            className="ocp-downloads"
                          >
                            <section
                              className="pf-c-page__main-section ocp-downloads"
                            >
                              <InstructionsCRC
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Title
                                  headingLevel="h3"
                                  size="2xl"
                                >
                                  <h3
                                    className="pf-c-title pf-m-2xl"
                                  >
                                    Install on Laptop: Red Hat CodeReady Containers
                                  </h3>
                                </Title>
                                <Card>
                                  <article
                                    className="pf-c-card"
                                  >
                                    <div
                                      className="pf-l-grid pf-m-gutter ocm-page"
                                    >
                                      <TokenErrorAlert
                                        token={
                                          Object {
                                            "error": true,
                                            "errorCode": undefined,
                                            "errorDetails": undefined,
                                            "errorMessage": "[object Object]",
                                            "internalErrorCode": undefined,
                                            "operationID": undefined,
                                            "pending": false,
                                          }
                                        }
                                      >
                                        <Alert
                                          className="token-error-alert"
                                          isInline={true}
                                          title="Failed to obtain pull secret"
                                          variant="danger"
                                        >
                                          <div
                                            aria-label="Danger Alert"
                                            className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                            data-ouia-component-id={16919}
                                            data-ouia-component-type="PF4/Alert"
                                            data-ouia-safe={true}
                                          >
                                            <Component
                                              variant="danger"
                                            >
                                              <div
                                                className="pf-c-alert__icon"
                                              >
                                                <ExclamationCircleIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </ExclamationCircleIcon>
                                              </div>
                                            </Component>
                                            <h4
                                              className="pf-c-alert__title"
                                            >
                                              <span
                                                className="pf-u-screen-reader"
                                              >
                                                Danger alert:
                                              </span>
                                              Failed to obtain pull secret
                                            </h4>
                                            <div
                                              className="pf-c-alert__description"
                                            >
                                              [object Object]
                                              <br />
                                              <br />
                                              Try again by refreshing the page. If the problem persists, report the issue to
                                               
                                              <a
                                                href="mailto:ocm-feedback@redhat.com"
                                                rel="noreferrer noopener"
                                                target="_blank"
                                              >
                                                ocm-feedback@redhat.com
                                                 
                                                <ExternalLinkAltIcon
                                                  color="#0066cc"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="#0066cc"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </ExternalLinkAltIcon>
                                              </a>
                                              .
                                            </div>
                                          </div>
                                        </Alert>
                                      </TokenErrorAlert>
                                      <div
                                        className="pf-c-content"
                                      >
                                        <p>
                                          Red Hat CodeReady Containers brings a minimal OpenShift 4.2 or newer cluster to your local laptop or desktop computer.
                                        </p>
                                        <p>
                                          Follow the
                                           
                                          <a
                                            href="https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.11/"
                                            onClick={[Function]}
                                            rel="noreferrer noopener"
                                            target="_blank"
                                          >
                                            official documentation
                                             
                                            <ExternalLinkAltIcon
                                              color="#0066cc"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="#0066cc"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 512 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                  transform=""
                                                />
                                              </svg>
                                            </ExternalLinkAltIcon>
                                          </a>
                                           
                                          for detailed installation instructions.
                                        </p>
                                        <Button
                                          component="a"
                                          href="https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.11/"
                                          onClick={[Function]}
                                          rel="noreferrer noopener"
                                          target="_blank"
                                          variant="secondary"
                                        >
                                          <a
                                            aria-disabled={false}
                                            aria-label={null}
                                            className="pf-c-button pf-m-secondary"
                                            data-ouia-component-id={16920}
                                            data-ouia-component-type="PF4/Button"
                                            data-ouia-safe={true}
                                            disabled={null}
                                            href="https://access.redhat.com/documentation/en-us/red_hat_codeready_containers/1.11/"
                                            onClick={[Function]}
                                            rel="noreferrer noopener"
                                            target="_blank"
                                            type={null}
                                          >
                                            Get started
                                          </a>
                                        </Button>
                                        <p />
                                        <p>
                                          Relevant downloads are provided below.
                                        </p>
                                      </div>
                                    </div>
                                  </article>
                                </Card>
                                <Card>
                                  <article
                                    className="pf-c-card"
                                  >
                                    <div
                                      className="pf-l-grid pf-m-gutter ocm-page"
                                    >
                                      <div
                                        className="pf-c-content"
                                      >
                                        <h3>
                                          Downloads
                                        </h3>
                                        <p>
                                          Download and extract the CodeReady Containers archive for your operating system and place the binary in your
                                           
                                          <code>
                                            $PATH
                                          </code>
                                           
                                          . Run the
                                           
                                          <code>
                                            crc setup
                                          </code>
                                           
                                          command to set up your host operating system for the CodeReady Containers virtual machine.
                                        </p>
                                        <List>
                                          <ul
                                            className="pf-c-list"
                                          >
                                            <ListItem>
                                              <li>
                                                <p>
                                                  Windows:
                                                  <a
                                                    disabled={true}
                                                    href="https://mirror.openshift.com/pub/openshift-v4/clients/crc/latest/crc-windows-amd64.zip"
                                                  >
                                                     
                                                    Download (HyperV)
                                                  </a>
                                                  <br />
                                                  Note: Only supported on Windows 10 Pro or Home with the Fall Creatorʼs Update installed.
                                                  <br />
                                                  No other version or edition of Windows is supported at this time.
                                                </p>
                                              </li>
                                            </ListItem>
                                            <ListItem>
                                              <li>
                                                <p>
                                                  macOS:
                                                  <a
                                                    disabled={false}
                                                    href="https://mirror.openshift.com/pub/openshift-v4/clients/crc/latest/crc-macos-amd64.tar.xz"
                                                  >
                                                     
                                                    Download (HyperKit)
                                                  </a>
                                                </p>
                                              </li>
                                            </ListItem>
                                            <ListItem>
                                              <li>
                                                <p>
                                                  Linux:
                                                  <a
                                                    disabled={true}
                                                    href="https://mirror.openshift.com/pub/openshift-v4/clients/crc/latest/crc-linux-amd64.tar.xz"
                                                  >
                                                     
                                                    Download (Libvirt)
                                                  </a>
                                                </p>
                                              </li>
                                            </ListItem>
                                          </ul>
                                        </List>
                                        <h3
                                          className="pf-c-title pf-m-md downloads-subtitle"
                                        >
                                          Pull secret
                                        </h3>
                                        <PullSecretSection
                                          cloudProviderID="/"
                                          token={
                                            Object {
                                              "error": true,
                                              "errorCode": undefined,
                                              "errorDetails": undefined,
                                              "errorMessage": "[object Object]",
                                              "internalErrorCode": undefined,
                                              "operationID": undefined,
                                              "pending": false,
                                            }
                                          }
                                        >
                                          <p>
                                            Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                          </p>
                                          <div>
                                            <Button
                                              isDisabled={true}
                                              onClick={[Function]}
                                              variant="secondary"
                                            >
                                              <button
                                                aria-disabled={true}
                                                aria-label={null}
                                                className="pf-c-button pf-m-secondary pf-m-disabled"
                                                data-ouia-component-id={16921}
                                                data-ouia-component-type="PF4/Button"
                                                data-ouia-safe={true}
                                                disabled={true}
                                                onClick={[Function]}
                                                tabIndex={null}
                                                type="button"
                                              >
                                                Download pull secret
                                              </button>
                                            </Button>
                                            <CopyToClipboard
                                              onCopy={null}
                                              text=""
                                            >
                                              <span
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "margin": "10px",
                                                  }
                                                }
                                              >
                                                <Button
                                                  className="install--copy-pull-secret"
                                                  id="copyPullSecret"
                                                  isDisabled={true}
                                                  tabIndex={0}
                                                  type="button"
                                                  variant="link"
                                                >
                                                  <button
                                                    aria-disabled={true}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                    data-ouia-component-id={16922}
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={true}
                                                    id="copyPullSecret"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <PasteIcon
                                                      color="#0066cc"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        fill="#0066cc"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 448 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                          transform=""
                                                        />
                                                      </svg>
                                                    </PasteIcon>
                                                      Copy pull secret
                                                  </button>
                                                </Button>
                                              </span>
                                            </CopyToClipboard>
                                          </div>
                                        </PullSecretSection>
                                        <p />
                                        <p>
                                          Note: Your CodeReady Container cluster will not show in your list of clusters in OpenShift Cluster Manager since it is short lived and occasionally running. OpenShift Cluster Manager currently shows only production-level clusters.
                                        </p>
                                      </div>
                                    </div>
                                  </article>
                                </Card>
                              </InstructionsCRC>
                            </section>
                          </PageSection>
                        </InstallCRC>
                      </Connect(InstallCRC)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/gcp 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/gcp",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/gcp",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/gcp",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/gcp",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/gcp",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/gcp",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/gcp",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/gcp",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/gcp",
                          "url": "/install/gcp",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/gcp",
                          "search": "",
                        }
                      }
                      path="/install/gcp"
                    >
                      <InstallGCP
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/gcp",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/gcp",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/gcp",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/gcp",
                            "url": "/install/gcp",
                          }
                        }
                      >
                        <PageTitle
                          breadcrumbs={
                            <Breadcrumbs
                              path={
                                Array [
                                  Object {
                                    "label": "Clusters",
                                  },
                                  Object {
                                    "label": "Create",
                                    "path": "/create",
                                  },
                                  Object {
                                    "label": "OpenShift Container Platform",
                                    "path": "/install",
                                  },
                                  Object {
                                    "label": "Google Cloud Platform",
                                  },
                                ]
                              }
                            />
                          }
                          title="Install OpenShift Container Platform 4"
                        >
                          <PageHeader>
                            <section
                              className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                              widget-type="InsightsPageHeader"
                            >
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Google Cloud Platform",
                                    },
                                  ]
                                }
                              >
                                <Breadcrumb>
                                  <nav
                                    aria-label="Breadcrumb"
                                    className="pf-c-breadcrumb"
                                    data-ouia-component-id={1884}
                                    data-ouia-component-type="PF4/Breadcrumb"
                                    data-ouia-safe={true}
                                  >
                                    <ol
                                      className="pf-c-breadcrumb__list"
                                    >
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Clusters"
                                        replace={false}
                                        showDivider={false}
                                        strict={false}
                                        to=""
                                      >
                                        <Route
                                          exact={false}
                                          path=""
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/"
                                            onClick={[Function]}
                                            showDivider={false}
                                            style={Object {}}
                                            to="/openshift"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift"
                                                target={null}
                                              >
                                                Clusters
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Create"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/create"
                                      >
                                        <Route
                                          exact={false}
                                          path="/create"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className=""
                                            href="/create"
                                            onClick={[Function]}
                                            showDivider={true}
                                            to="/openshift/create"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item"
                                              href="/create"
                                              onClick={[Function]}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/create"
                                                target={null}
                                              >
                                                Create
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$OpenShift Container Platform"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/install"
                                      >
                                        <Route
                                          exact={false}
                                          path="/install"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/install"
                                            onClick={[Function]}
                                            showDivider={true}
                                            style={Object {}}
                                            to="/openshift/install"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/install"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/install"
                                                target={null}
                                              >
                                                OpenShift Container Platform
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <BreadcrumbItem
                                        isActive={true}
                                        key=".$Google Cloud Platform"
                                        showDivider={true}
                                      >
                                        <li
                                          className="pf-c-breadcrumb__item"
                                        >
                                          <span
                                            className="pf-c-breadcrumb__item-divider"
                                          >
                                            <AngleRightIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 256 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                  transform=""
                                                />
                                              </svg>
                                            </AngleRightIcon>
                                          </span>
                                          Google Cloud Platform
                                        </li>
                                      </BreadcrumbItem>
                                    </ol>
                                  </nav>
                                </Breadcrumb>
                              </Breadcrumbs>
                              <Split>
                                <div
                                  className="pf-l-split"
                                >
                                  <SplitItem
                                    isFilled={true}
                                  >
                                    <div
                                      className="pf-l-split__item pf-m-fill"
                                    >
                                      <PageHeaderTitle
                                        className="ocm-page-title"
                                        title="Install OpenShift Container Platform 4"
                                      >
                                        <Title
                                          className="ocm-page-title"
                                          headingLevel="h1"
                                          size="2xl"
                                          widget-type="InsightsPageHeaderTitle"
                                        >
                                          <h1
                                            className="pf-c-title pf-m-2xl ocm-page-title"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                             
                                            Install OpenShift Container Platform 4
                                             
                                          </h1>
                                        </Title>
                                      </PageHeaderTitle>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </section>
                          </PageHeader>
                        </PageTitle>
                        <PageSection>
                          <section
                            className="pf-c-page__main-section"
                          >
                            <InstructionsGCP>
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="pf-c-content ocm-page"
                                  >
                                    <Title
                                      headingLevel="h3"
                                      size="2xl"
                                    >
                                      <h3
                                        className="pf-c-title pf-m-2xl"
                                      >
                                        GCP: Select an installation type
                                      </h3>
                                    </Title>
                                    <div
                                      className="flex-container"
                                    >
                                      <Link
                                        className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                        replace={false}
                                        to="/install/gcp/installer-provisioned"
                                      >
                                        <a
                                          className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                          href="/install/gcp/installer-provisioned"
                                          onClick={[Function]}
                                        >
                                          <CardBadge
                                            isRecommened={true}
                                          >
                                            <div
                                              className="card-badge-container"
                                            >
                                              <span
                                                className="card-badge"
                                              >
                                                <StarIcon
                                                  color="#06c"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="#06c"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 576 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </StarIcon>
                                                Recommended
                                              </span>
                                            </div>
                                          </CardBadge>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              <SyncAltIcon
                                                alt="Installer-Provisioned Infrastructure"
                                                className="aws-ipi-upi-infra-logo"
                                                color="#73bcf7"
                                                noVerticalAlign={false}
                                                size="xl"
                                              >
                                                <svg
                                                  alt="Installer-Provisioned Infrastructure"
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="aws-ipi-upi-infra-logo"
                                                  fill="#73bcf7"
                                                  height="3em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.375em",
                                                    }
                                                  }
                                                  viewBox="0 0 512 512"
                                                  width="3em"
                                                >
                                                  <path
                                                    d="M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </SyncAltIcon>
                                              <Title
                                                headingLevel="h3"
                                                size="lg"
                                              >
                                                <h3
                                                  className="pf-c-title pf-m-lg"
                                                >
                                                  Installer-provisioned infrastructure
                                                </h3>
                                              </Title>
                                               
                                              Deploy an OpenShift cluster on infrastructure that the installation program provisions and the cluster maintains.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                      <Link
                                        className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                        replace={false}
                                        to="/install/gcp/user-provisioned"
                                      >
                                        <a
                                          className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                          href="/install/gcp/user-provisioned"
                                          onClick={[Function]}
                                        >
                                          <CardBadge
                                            isHidden={true}
                                          >
                                            <div
                                              className="card-badge-container"
                                            >
                                              <span
                                                className="card-badge card-badge-hidden"
                                              />
                                            </div>
                                          </CardBadge>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              <UserIcon
                                                alt="User-Provisioned Infrastructure"
                                                className="aws-ipi-upi-infra-logo"
                                                color="#73bcf7"
                                                noVerticalAlign={false}
                                                size="xl"
                                              >
                                                <svg
                                                  alt="User-Provisioned Infrastructure"
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="aws-ipi-upi-infra-logo"
                                                  fill="#73bcf7"
                                                  height="3em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.375em",
                                                    }
                                                  }
                                                  viewBox="0 0 448 512"
                                                  width="3em"
                                                >
                                                  <path
                                                    d="M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </UserIcon>
                                              <Title
                                                headingLevel="h3"
                                                size="lg"
                                              >
                                                <h3
                                                  className="pf-c-title pf-m-lg"
                                                >
                                                  User-provisioned infrastructure
                                                </h3>
                                              </Title>
                                              Deploy an OpenShift cluster on infrastructure that you prepare and maintain.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                    </div>
                                  </div>
                                </article>
                              </Card>
                            </InstructionsGCP>
                          </section>
                        </PageSection>
                      </InstallGCP>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/gcp/installer-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/gcp/installer-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/gcp/installer-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/gcp/installer-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp/installer-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/gcp/installer-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/gcp/installer-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/gcp/installer-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp/installer-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp/installer-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/gcp/installer-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/gcp/installer-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/gcp/installer-provisioned",
                          "url": "/install/gcp/installer-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/gcp/installer-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/gcp/installer-provisioned"
                    >
                      <Connect(InstallGCPIPI)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/gcp/installer-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/gcp/installer-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/gcp/installer-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/gcp/installer-provisioned",
                            "url": "/install/gcp/installer-provisioned",
                          }
                        }
                      >
                        <InstallGCPIPI
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/gcp/installer-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/gcp/installer-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/gcp/installer-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/gcp/installer-provisioned",
                              "url": "/install/gcp/installer-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Google Cloud Platform",
                                      "path": "/install/gcp",
                                    },
                                    Object {
                                      "label": "Installer-provisioned infrastructure",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on GCP with installer-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Google Cloud Platform",
                                        "path": "/install/gcp",
                                      },
                                      Object {
                                        "label": "Installer-provisioned infrastructure",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={643}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Google Cloud Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install/gcp"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install/gcp"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install/gcp"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install/gcp"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install/gcp"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install/gcp"
                                                  target={null}
                                                >
                                                  Google Cloud Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Installer-provisioned infrastructure"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Installer-provisioned infrastructure
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on GCP with installer-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on GCP with installer-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="stable"
                                cloudProvider="GCP"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-account.html"
                                title="Install OpenShift on GCP with installer-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={644}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={645}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={646}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={647}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={648}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={649}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={650}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the documentation to configure your GCP account and run the installer
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="GCP"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-account.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                          The installer will ask you for the domain or subdomain you wish to use (this can be purchased through GCP but it will take some time for the DNS to propogate).
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-account.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={651}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-account.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallGCPIPI>
                      </Connect(InstallGCPIPI)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/gcp/user-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/gcp/user-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/gcp/user-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/gcp/user-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp/user-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/gcp/user-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/gcp/user-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/gcp/user-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/gcp/user-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/gcp/user-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/gcp/user-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/gcp/user-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/gcp/user-provisioned",
                          "url": "/install/gcp/user-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/gcp/user-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/gcp/user-provisioned"
                    >
                      <Connect(InstallGCPUPI)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/gcp/user-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/gcp/user-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/gcp/user-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/gcp/user-provisioned",
                            "url": "/install/gcp/user-provisioned",
                          }
                        }
                      >
                        <InstallGCPUPI
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/gcp/user-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/gcp/user-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/gcp/user-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/gcp/user-provisioned",
                              "url": "/install/gcp/user-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Google Cloud Platform",
                                      "path": "/install/gcp",
                                    },
                                    Object {
                                      "label": "User-provisioned infrastructure",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on GCP with user-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Google Cloud Platform",
                                        "path": "/install/gcp",
                                      },
                                      Object {
                                        "label": "User-provisioned infrastructure",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={1197}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Google Cloud Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install/gcp"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install/gcp"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install/gcp"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install/gcp"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install/gcp"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install/gcp"
                                                  target={null}
                                                >
                                                  Google Cloud Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$User-provisioned infrastructure"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            User-provisioned infrastructure
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on GCP with user-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on GCP with user-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="stable"
                                cloudProvider="GCP"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-user-infra.html"
                                rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-user-infra.html#installation-gcp-user-infra-rhcos_installing-gcp-user-infra"
                                title="Install OpenShift on GCP with user-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={1198}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-user-infra.html#installation-gcp-user-infra-rhcos_installing-gcp-user-infra"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={1199}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={1200}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={1201}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={1202}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={1203}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={1204}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Red Hat Enterprise Linux CoreOS (RHCOS)
                                                            </h3>
                                                          </Title>
                                                          <RHCOSSection
                                                            downloadURL="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                            learnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-user-infra.html#installation-gcp-user-infra-rhcos_installing-gcp-user-infra"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download RHCOS to create machines for your cluster to use during installation.
                                                               
                                                              <a
                                                                href="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-user-infra.html#installation-gcp-user-infra-rhcos_installing-gcp-user-infra"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                              >
                                                                Learn more
                                                                 
                                                                <ExternalLinkAltIcon
                                                                  color="#0066cc"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="#0066cc"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 512 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </ExternalLinkAltIcon>
                                                                .
                                                              </a>
                                                            </p>
                                                            <Button
                                                              className="install--download-installer"
                                                              component="a"
                                                              disabled={true}
                                                              href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                              variant="secondary"
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                aria-label={null}
                                                                className="pf-c-button pf-m-secondary install--download-installer"
                                                                data-ouia-component-id={1205}
                                                                data-ouia-component-type="PF4/Button"
                                                                data-ouia-safe={true}
                                                                disabled={null}
                                                                href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                                type={null}
                                                              >
                                                                Download RHCOS
                                                              </a>
                                                            </Button>
                                                          </RHCOSSection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the documentation to configure your GCP account and run the installer
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="GCP"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-user-infra.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                          The installer will ask you for the domain or subdomain you wish to use (this can be purchased through GCP but it will take some time for the DNS to propogate).
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-user-infra.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={1206}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_gcp/installing-gcp-user-infra.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallGCPUPI>
                      </Connect(InstallGCPUPI)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/ibmz/user-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/ibmz/user-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/ibmz/user-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/ibmz/user-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/ibmz/user-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/ibmz/user-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/ibmz/user-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/ibmz/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/ibmz/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/ibmz/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/ibmz/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/ibmz/user-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/ibmz/user-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/ibmz/user-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/ibmz/user-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/ibmz/user-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/ibmz/user-provisioned",
                          "url": "/install/ibmz/user-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/ibmz/user-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/ibmz/user-provisioned"
                    >
                      <Connect(InstallIBM)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/ibmz/user-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/ibmz/user-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/ibmz/user-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/ibmz/user-provisioned",
                            "url": "/install/ibmz/user-provisioned",
                          }
                        }
                      >
                        <InstallIBM
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/ibmz/user-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/ibmz/user-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/ibmz/user-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/ibmz/user-provisioned",
                              "url": "/install/ibmz/user-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "IBM Z",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on IBM Z with user-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "IBM Z",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={18928}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$IBM Z"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            IBM Z
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on IBM Z with user-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on IBM Z with user-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="ibmz"
                                cloudProvider="IBM-Z"
                                docURL="https://docs.openshift.com/container-platform/4.3/installing/installing_ibm_z/installing-ibm-z.html"
                                rhcosDownloadURL="https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/"
                                rhcosLearnMoreURL="https://docs.openshift.com/container-platform/4.3/installing/installing_ibm_z/installing-ibm-z.html#installation-user-infra-machines-iso-ibm-z_installing-ibm-z"
                                title="Install OpenShift on IBM Z with user-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={18929}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="ibmz"
                                                      cloudProviderID="/"
                                                      rhcosDownloadURL="https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/"
                                                      rhcosLearnMoreURL="https://docs.openshift.com/container-platform/4.3/installing/installing_ibm_z/installing-ibm-z.html#installation-user-infra-machines-iso-ibm-z_installing-ibm-z"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="ibmz"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={18930}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={18931}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={18932}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={18933}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="ibmz"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="ibmz"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={18934}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={18935}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Red Hat Enterprise Linux CoreOS (RHCOS)
                                                            </h3>
                                                          </Title>
                                                          <RHCOSSection
                                                            downloadURL="https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/"
                                                            learnMoreURL="https://docs.openshift.com/container-platform/4.3/installing/installing_ibm_z/installing-ibm-z.html#installation-user-infra-machines-iso-ibm-z_installing-ibm-z"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download RHCOS to create machines for your cluster to use during installation.
                                                               
                                                              <a
                                                                href="https://docs.openshift.com/container-platform/4.3/installing/installing_ibm_z/installing-ibm-z.html#installation-user-infra-machines-iso-ibm-z_installing-ibm-z"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                              >
                                                                Learn more
                                                                 
                                                                <ExternalLinkAltIcon
                                                                  color="#0066cc"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="#0066cc"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 512 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </ExternalLinkAltIcon>
                                                                .
                                                              </a>
                                                            </p>
                                                            <Button
                                                              className="install--download-installer"
                                                              component="a"
                                                              disabled={true}
                                                              href="https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                              variant="secondary"
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                aria-label={null}
                                                                className="pf-c-button pf-m-secondary install--download-installer"
                                                                data-ouia-component-id={18936}
                                                                data-ouia-component-type="PF4/Button"
                                                                data-ouia-safe={true}
                                                                disabled={null}
                                                                href="https://mirror.openshift.com/pub/openshift-v4/s390x/dependencies/rhcos/latest/latest/"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                                type={null}
                                                              >
                                                                Download RHCOS
                                                              </a>
                                                            </Button>
                                                          </RHCOSSection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the instructions to configure your environment and install your cluster
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="IBM-Z"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/4.3/installing/installing_ibm_z/installing-ibm-z.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/4.3/installing/installing_ibm_z/installing-ibm-z.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={18937}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/4.3/installing/installing_ibm_z/installing-ibm-z.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallIBM>
                      </Connect(InstallIBM)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/metal/user-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/metal/user-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/metal/user-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/metal/user-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/metal/user-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/metal/user-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/metal/user-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/metal/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/metal/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/metal/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/metal/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/metal/user-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/metal/user-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/metal/user-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/metal/user-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/metal/user-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/metal/user-provisioned",
                          "url": "/install/metal/user-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/metal/user-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/metal/user-provisioned"
                    >
                      <Connect(InstallBareMetal)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/metal/user-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/metal/user-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/metal/user-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/metal/user-provisioned",
                            "url": "/install/metal/user-provisioned",
                          }
                        }
                      >
                        <InstallBareMetal
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/metal/user-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/metal/user-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/metal/user-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/metal/user-provisioned",
                              "url": "/install/metal/user-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Bare Metal",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on vSphere with user-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Bare Metal",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={10361}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Bare Metal"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Bare Metal
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on vSphere with user-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on vSphere with user-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                breadcrumbs={
                                  <Breadcrumbs
                                    path={
                                      Array [
                                        Object {
                                          "label": "Clusters",
                                        },
                                        Object {
                                          "label": "Create",
                                          "path": "/create",
                                        },
                                        Object {
                                          "label": "OpenShift Container Platform",
                                          "path": "/install",
                                        },
                                        Object {
                                          "label": "Bare Metal",
                                        },
                                      ]
                                    }
                                  />
                                }
                                channel="stable"
                                cloudProvider="Bare Metal"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_bare_metal/installing-bare-metal.html"
                                rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_bare_metal/installing-bare-metal.html#creating-machines-bare-metal"
                                title="Install OpenShift on Bare Metal with user-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={10362}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_bare_metal/installing-bare-metal.html#creating-machines-bare-metal"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={10363}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={10364}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={10365}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={10366}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={10367}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={10368}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Red Hat Enterprise Linux CoreOS (RHCOS)
                                                            </h3>
                                                          </Title>
                                                          <RHCOSSection
                                                            downloadURL="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                            learnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_bare_metal/installing-bare-metal.html#creating-machines-bare-metal"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download RHCOS to create machines for your cluster to use during installation.
                                                               
                                                              <a
                                                                href="https://docs.openshift.com/container-platform/latest/installing/installing_bare_metal/installing-bare-metal.html#creating-machines-bare-metal"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                              >
                                                                Learn more
                                                                 
                                                                <ExternalLinkAltIcon
                                                                  color="#0066cc"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="#0066cc"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 512 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </ExternalLinkAltIcon>
                                                                .
                                                              </a>
                                                            </p>
                                                            <Button
                                                              className="install--download-installer"
                                                              component="a"
                                                              disabled={true}
                                                              href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                              variant="secondary"
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                aria-label={null}
                                                                className="pf-c-button pf-m-secondary install--download-installer"
                                                                data-ouia-component-id={10369}
                                                                data-ouia-component-type="PF4/Button"
                                                                data-ouia-safe={true}
                                                                disabled={null}
                                                                href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                                type={null}
                                                              >
                                                                Download RHCOS
                                                              </a>
                                                            </Button>
                                                          </RHCOSSection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the instructions to configure your environment and install your cluster
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="Bare Metal"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_bare_metal/installing-bare-metal.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_bare_metal/installing-bare-metal.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={10370}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_bare_metal/installing-bare-metal.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallBareMetal>
                      </Connect(InstallBareMetal)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/openstack 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/openstack",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/openstack",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/openstack",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/openstack",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/openstack",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/openstack",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/openstack",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/openstack",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/openstack",
                          "url": "/install/openstack",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/openstack",
                          "search": "",
                        }
                      }
                      path="/install/openstack"
                    >
                      <InstallOSP
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/openstack",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/openstack",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/openstack",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/openstack",
                            "url": "/install/openstack",
                          }
                        }
                      >
                        <PageTitle
                          breadcrumbs={
                            <Breadcrumbs
                              path={
                                Array [
                                  Object {
                                    "label": "Clusters",
                                  },
                                  Object {
                                    "label": "Create",
                                    "path": "/create",
                                  },
                                  Object {
                                    "label": "OpenShift Container Platform",
                                    "path": "/install",
                                  },
                                  Object {
                                    "label": "Red Hat OpenStack Platform",
                                  },
                                ]
                              }
                            />
                          }
                          title="Install OpenShift Container Platform 4"
                        >
                          <PageHeader>
                            <section
                              className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                              widget-type="InsightsPageHeader"
                            >
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Red Hat OpenStack Platform",
                                    },
                                  ]
                                }
                              >
                                <Breadcrumb>
                                  <nav
                                    aria-label="Breadcrumb"
                                    className="pf-c-breadcrumb"
                                    data-ouia-component-id={4302}
                                    data-ouia-component-type="PF4/Breadcrumb"
                                    data-ouia-safe={true}
                                  >
                                    <ol
                                      className="pf-c-breadcrumb__list"
                                    >
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Clusters"
                                        replace={false}
                                        showDivider={false}
                                        strict={false}
                                        to=""
                                      >
                                        <Route
                                          exact={false}
                                          path=""
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/"
                                            onClick={[Function]}
                                            showDivider={false}
                                            style={Object {}}
                                            to="/openshift"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift"
                                                target={null}
                                              >
                                                Clusters
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$Create"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/create"
                                      >
                                        <Route
                                          exact={false}
                                          path="/create"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className=""
                                            href="/create"
                                            onClick={[Function]}
                                            showDivider={true}
                                            to="/openshift/create"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item"
                                              href="/create"
                                              onClick={[Function]}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/create"
                                                target={null}
                                              >
                                                Create
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <LinkContainer
                                        activeClassName="active"
                                        exact={false}
                                        key=".$OpenShift Container Platform"
                                        replace={false}
                                        showDivider={true}
                                        strict={false}
                                        to="/install"
                                      >
                                        <Route
                                          exact={false}
                                          path="/install"
                                          strict={false}
                                        >
                                          <BreadcrumbItem
                                            className="active"
                                            href="/install"
                                            onClick={[Function]}
                                            showDivider={true}
                                            style={Object {}}
                                            to="/openshift/install"
                                          >
                                            <li
                                              className="pf-c-breadcrumb__item active"
                                              href="/install"
                                              onClick={[Function]}
                                              style={Object {}}
                                            >
                                              <span
                                                className="pf-c-breadcrumb__item-divider"
                                              >
                                                <AngleRightIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 256 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </AngleRightIcon>
                                              </span>
                                              <a
                                                className="pf-c-breadcrumb__link"
                                                href="/openshift/install"
                                                target={null}
                                              >
                                                OpenShift Container Platform
                                              </a>
                                            </li>
                                          </BreadcrumbItem>
                                        </Route>
                                      </LinkContainer>
                                      <BreadcrumbItem
                                        isActive={true}
                                        key=".$Red Hat OpenStack Platform"
                                        showDivider={true}
                                      >
                                        <li
                                          className="pf-c-breadcrumb__item"
                                        >
                                          <span
                                            className="pf-c-breadcrumb__item-divider"
                                          >
                                            <AngleRightIcon
                                              color="currentColor"
                                              noVerticalAlign={false}
                                              size="sm"
                                            >
                                              <svg
                                                aria-hidden={true}
                                                aria-labelledby={null}
                                                fill="currentColor"
                                                height="1em"
                                                role="img"
                                                style={
                                                  Object {
                                                    "verticalAlign": "-0.125em",
                                                  }
                                                }
                                                viewBox="0 0 256 512"
                                                width="1em"
                                              >
                                                <path
                                                  d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                  transform=""
                                                />
                                              </svg>
                                            </AngleRightIcon>
                                          </span>
                                          Red Hat OpenStack Platform
                                        </li>
                                      </BreadcrumbItem>
                                    </ol>
                                  </nav>
                                </Breadcrumb>
                              </Breadcrumbs>
                              <Split>
                                <div
                                  className="pf-l-split"
                                >
                                  <SplitItem
                                    isFilled={true}
                                  >
                                    <div
                                      className="pf-l-split__item pf-m-fill"
                                    >
                                      <PageHeaderTitle
                                        className="ocm-page-title"
                                        title="Install OpenShift Container Platform 4"
                                      >
                                        <Title
                                          className="ocm-page-title"
                                          headingLevel="h1"
                                          size="2xl"
                                          widget-type="InsightsPageHeaderTitle"
                                        >
                                          <h1
                                            className="pf-c-title pf-m-2xl ocm-page-title"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                             
                                            Install OpenShift Container Platform 4
                                             
                                          </h1>
                                        </Title>
                                      </PageHeaderTitle>
                                    </div>
                                  </SplitItem>
                                </div>
                              </Split>
                            </section>
                          </PageHeader>
                        </PageTitle>
                        <PageSection>
                          <section
                            className="pf-c-page__main-section"
                          >
                            <InstructionsOSP>
                              <Card>
                                <article
                                  className="pf-c-card"
                                >
                                  <div
                                    className="pf-c-content ocm-page"
                                  >
                                    <Title
                                      headingLevel="h3"
                                      size="2xl"
                                    >
                                      <h3
                                        className="pf-c-title pf-m-2xl"
                                      >
                                        OpenStack: Select an installation type
                                      </h3>
                                    </Title>
                                    <div
                                      className="flex-container"
                                    >
                                      <Link
                                        className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                        replace={false}
                                        to="/install/openstack/installer-provisioned"
                                      >
                                        <a
                                          className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                          href="/install/openstack/installer-provisioned"
                                          onClick={[Function]}
                                        >
                                          <CardBadge
                                            isRecommened={true}
                                          >
                                            <div
                                              className="card-badge-container"
                                            >
                                              <span
                                                className="card-badge"
                                              >
                                                <StarIcon
                                                  color="#06c"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="#06c"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 576 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </StarIcon>
                                                Recommended
                                              </span>
                                            </div>
                                          </CardBadge>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              <SyncAltIcon
                                                alt="Installer-Provisioned Infrastructure"
                                                className="aws-ipi-upi-infra-logo"
                                                color="#73bcf7"
                                                noVerticalAlign={false}
                                                size="xl"
                                              >
                                                <svg
                                                  alt="Installer-Provisioned Infrastructure"
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="aws-ipi-upi-infra-logo"
                                                  fill="#73bcf7"
                                                  height="3em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.375em",
                                                    }
                                                  }
                                                  viewBox="0 0 512 512"
                                                  width="3em"
                                                >
                                                  <path
                                                    d="M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </SyncAltIcon>
                                              <Title
                                                headingLevel="h3"
                                                size="lg"
                                              >
                                                <h3
                                                  className="pf-c-title pf-m-lg"
                                                >
                                                  Installer-provisioned infrastructure
                                                </h3>
                                              </Title>
                                               
                                              Deploy an OpenShift cluster on infrastructure that the installation program provisions and the cluster maintains.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                      <Link
                                        className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                        replace={false}
                                        to="/install/openstack/user-provisioned"
                                      >
                                        <a
                                          className="aws-ipi-upi-infra-card infra-card pf-c-card"
                                          href="/install/openstack/user-provisioned"
                                          onClick={[Function]}
                                        >
                                          <CardBadge
                                            isHidden={true}
                                          >
                                            <div
                                              className="card-badge-container"
                                            >
                                              <span
                                                className="card-badge card-badge-hidden"
                                              />
                                            </div>
                                          </CardBadge>
                                          <CardBody>
                                            <div
                                              className="pf-c-card__body"
                                            >
                                              <UserIcon
                                                alt="User-Provisioned Infrastructure"
                                                className="aws-ipi-upi-infra-logo"
                                                color="#73bcf7"
                                                noVerticalAlign={false}
                                                size="xl"
                                              >
                                                <svg
                                                  alt="User-Provisioned Infrastructure"
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  className="aws-ipi-upi-infra-logo"
                                                  fill="#73bcf7"
                                                  height="3em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.375em",
                                                    }
                                                  }
                                                  viewBox="0 0 448 512"
                                                  width="3em"
                                                >
                                                  <path
                                                    d="M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </UserIcon>
                                              <Title
                                                headingLevel="h3"
                                                size="lg"
                                              >
                                                <h3
                                                  className="pf-c-title pf-m-lg"
                                                >
                                                  User-provisioned infrastructure
                                                </h3>
                                              </Title>
                                              Deploy an OpenShift cluster on infrastructure that you prepare and maintain.
                                            </div>
                                          </CardBody>
                                        </a>
                                      </Link>
                                    </div>
                                  </div>
                                </article>
                              </Card>
                            </InstructionsOSP>
                          </section>
                        </PageSection>
                      </InstallOSP>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/openstack/installer-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/openstack/installer-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/openstack/installer-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/openstack/installer-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack/installer-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/openstack/installer-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/openstack/installer-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/openstack/installer-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack/installer-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack/installer-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/openstack/installer-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/openstack/installer-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/openstack/installer-provisioned",
                          "url": "/install/openstack/installer-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/openstack/installer-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/openstack/installer-provisioned"
                    >
                      <Connect(InstallOSPIPI)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/openstack/installer-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/openstack/installer-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/openstack/installer-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/openstack/installer-provisioned",
                            "url": "/install/openstack/installer-provisioned",
                          }
                        }
                      >
                        <InstallOSPIPI
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/openstack/installer-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/openstack/installer-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/openstack/installer-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/openstack/installer-provisioned",
                              "url": "/install/openstack/installer-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Red Hat OpenStack Platform",
                                      "path": "/install/openstack",
                                    },
                                    Object {
                                      "label": "Installer-provisioned infrastructure",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on Red Hat OpenStack Platform with installer-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Red Hat OpenStack Platform",
                                        "path": "/install/openstack",
                                      },
                                      Object {
                                        "label": "Installer-provisioned infrastructure",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={1975}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Red Hat OpenStack Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install/openstack"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install/openstack"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install/openstack"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install/openstack"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install/openstack"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install/openstack"
                                                  target={null}
                                                >
                                                  Red Hat OpenStack Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Installer-provisioned infrastructure"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Installer-provisioned infrastructure
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on Red Hat OpenStack Platform with installer-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on Red Hat OpenStack Platform with installer-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="stable"
                                cloudProvider="Red Hat OpenStack Platform"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_openstack/installing-openstack-installer-custom.html"
                                title="Install OpenShift on Red Hat OpenStack Platform with installer-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={1976}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={1977}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={1978}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={1979}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={1980}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={1981}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={1982}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the instructions to configure your environment and install your cluster
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="Red Hat OpenStack Platform"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_openstack/installing-openstack-installer-custom.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_openstack/installing-openstack-installer-custom.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={1983}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_openstack/installing-openstack-installer-custom.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallOSPIPI>
                      </Connect(InstallOSPIPI)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/openstack/user-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/openstack/user-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/openstack/user-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/openstack/user-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack/user-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/openstack/user-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/openstack/user-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/openstack/user-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/openstack/user-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/openstack/user-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/openstack/user-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/openstack/user-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/openstack/user-provisioned",
                          "url": "/install/openstack/user-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/openstack/user-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/openstack/user-provisioned"
                    >
                      <Connect(InstallOSPUPI)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/openstack/user-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/openstack/user-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/openstack/user-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/openstack/user-provisioned",
                            "url": "/install/openstack/user-provisioned",
                          }
                        }
                      >
                        <InstallOSPUPI
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/openstack/user-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/openstack/user-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/openstack/user-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/openstack/user-provisioned",
                              "url": "/install/openstack/user-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Red Hat OpenStack Platform",
                                      "path": "/install/openstack",
                                    },
                                    Object {
                                      "label": "User-provisioned infrastructure",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on Red Hat OpenStack Platform with user-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Red Hat OpenStack Platform",
                                        "path": "/install/openstack",
                                      },
                                      Object {
                                        "label": "User-provisioned infrastructure",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={3030}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Red Hat OpenStack Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install/openstack"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install/openstack"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install/openstack"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install/openstack"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install/openstack"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install/openstack"
                                                  target={null}
                                                >
                                                  Red Hat OpenStack Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$User-provisioned infrastructure"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            User-provisioned infrastructure
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on Red Hat OpenStack Platform with user-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on Red Hat OpenStack Platform with user-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                breadcrumbs={
                                  <Breadcrumbs
                                    path={
                                      Array [
                                        Object {
                                          "label": "Clusters",
                                        },
                                        Object {
                                          "label": "Create",
                                          "path": "/create",
                                        },
                                        Object {
                                          "label": "OpenShift Container Platform",
                                          "path": "/install",
                                        },
                                        Object {
                                          "label": "Red Hat OpenStack Platform",
                                          "path": "/install/openstack",
                                        },
                                        Object {
                                          "label": "User-provisioned infrastructure",
                                        },
                                      ]
                                    }
                                  />
                                }
                                channel="stable"
                                cloudProvider="Red Hat OpenStack Platform"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_openstack/installing-openstack-user.html"
                                rhcosDownloadURL="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latestinstalling/installing_openstack/installing-openstack-user.html#installation-osp-creating-image_installing-openstack-user"
                                title="Install OpenShift on Red Hat OpenStack Platform with user-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={3031}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      rhcosDownloadURL="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                      rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latestinstalling/installing_openstack/installing-openstack-user.html#installation-osp-creating-image_installing-openstack-user"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={3032}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={3033}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={3034}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={3035}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={3036}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={3037}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Red Hat Enterprise Linux CoreOS (RHCOS)
                                                            </h3>
                                                          </Title>
                                                          <RHCOSSection
                                                            downloadURL="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                            learnMoreURL="https://docs.openshift.com/container-platform/latestinstalling/installing_openstack/installing-openstack-user.html#installation-osp-creating-image_installing-openstack-user"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download RHCOS to create machines for your cluster to use during installation.
                                                               
                                                              <a
                                                                href="https://docs.openshift.com/container-platform/latestinstalling/installing_openstack/installing-openstack-user.html#installation-osp-creating-image_installing-openstack-user"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                              >
                                                                Learn more
                                                                 
                                                                <ExternalLinkAltIcon
                                                                  color="#0066cc"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="#0066cc"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 512 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </ExternalLinkAltIcon>
                                                                .
                                                              </a>
                                                            </p>
                                                            <Button
                                                              className="install--download-installer"
                                                              component="a"
                                                              disabled={true}
                                                              href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                              variant="secondary"
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                aria-label={null}
                                                                className="pf-c-button pf-m-secondary install--download-installer"
                                                                data-ouia-component-id={3038}
                                                                data-ouia-component-type="PF4/Button"
                                                                data-ouia-safe={true}
                                                                disabled={null}
                                                                href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                                type={null}
                                                              >
                                                                Download RHCOS
                                                              </a>
                                                            </Button>
                                                          </RHCOSSection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the instructions to configure your environment and install your cluster
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="Red Hat OpenStack Platform"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_openstack/installing-openstack-user.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_openstack/installing-openstack-user.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={3039}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_openstack/installing-openstack-user.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallOSPUPI>
                      </Connect(InstallOSPUPI)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/power/user-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/power/user-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/power/user-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/power/user-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/power/user-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/power/user-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/power/user-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/power/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/power/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/power/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/power/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/power/user-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/power/user-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/power/user-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/power/user-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/power/user-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/power/user-provisioned",
                          "url": "/install/power/user-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/power/user-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/power/user-provisioned"
                    >
                      <Connect(InstallIBM)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/power/user-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/power/user-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/power/user-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/power/user-provisioned",
                            "url": "/install/power/user-provisioned",
                          }
                        }
                      >
                        <InstallIBM
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/power/user-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/power/user-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/power/user-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/power/user-provisioned",
                              "url": "/install/power/user-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Power",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on Power with user-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Power",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={23224}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Power"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Power
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on Power with user-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on Power with user-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="ppc64le"
                                cloudProvider="Power"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_ibm_power/installing-ibm-power.html"
                                rhcosDownloadURL="https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/latest/latest/"
                                rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_ibm_power/installing-ibm-power.html#creating-machines-bare-metal-power"
                                showPreReleasePageLink={false}
                                title="Install OpenShift on Power with user-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={23225}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="ppc64le"
                                                      cloudProviderID="/"
                                                      rhcosDownloadURL="https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/latest/latest/"
                                                      rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_ibm_power/installing-ibm-power.html#creating-machines-bare-metal-power"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="ppc64le"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={23226}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={23227}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={23228}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={23229}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="ppc64le"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="ppc64le"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={23230}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={23231}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Red Hat Enterprise Linux CoreOS (RHCOS)
                                                            </h3>
                                                          </Title>
                                                          <RHCOSSection
                                                            downloadURL="https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/latest/latest/"
                                                            learnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_ibm_power/installing-ibm-power.html#creating-machines-bare-metal-power"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download RHCOS to create machines for your cluster to use during installation.
                                                               
                                                              <a
                                                                href="https://docs.openshift.com/container-platform/latest/installing/installing_ibm_power/installing-ibm-power.html#creating-machines-bare-metal-power"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                              >
                                                                Learn more
                                                                 
                                                                <ExternalLinkAltIcon
                                                                  color="#0066cc"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="#0066cc"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 512 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </ExternalLinkAltIcon>
                                                                .
                                                              </a>
                                                            </p>
                                                            <Button
                                                              className="install--download-installer"
                                                              component="a"
                                                              disabled={true}
                                                              href="https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/latest/latest/"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                              variant="secondary"
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                aria-label={null}
                                                                className="pf-c-button pf-m-secondary install--download-installer"
                                                                data-ouia-component-id={23232}
                                                                data-ouia-component-type="PF4/Button"
                                                                data-ouia-safe={true}
                                                                disabled={null}
                                                                href="https://mirror.openshift.com/pub/openshift-v4/ppc64le/dependencies/rhcos/latest/latest/"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                                type={null}
                                                              >
                                                                Download RHCOS
                                                              </a>
                                                            </Button>
                                                          </RHCOSSection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the instructions to configure your environment and install your cluster
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="Power"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_ibm_power/installing-ibm-power.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_ibm_power/installing-ibm-power.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={23233}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_ibm_power/installing-ibm-power.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallIBM>
                      </Connect(InstallIBM)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/pre-release 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/pre-release",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/pre-release",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/pre-release",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/pre-release",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/pre-release",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/pre-release",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/pre-release",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/pre-release",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/pre-release",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/pre-release",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/pre-release",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/pre-release",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/pre-release",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/pre-release",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/pre-release",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/pre-release",
                          "url": "/install/pre-release",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/pre-release",
                          "search": "",
                        }
                      }
                      path="/install/pre-release"
                    >
                      <Connect(InstallPreRelease)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/pre-release",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/pre-release",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/pre-release",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/pre-release",
                            "url": "/install/pre-release",
                          }
                        }
                      >
                        <InstallPreRelease
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/pre-release",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/pre-release",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/pre-release",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/pre-release",
                              "url": "/install/pre-release",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Pre-Release Builds",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift Container Platform 4"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Pre-Release Builds",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={27922}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Pre-Release Builds"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Pre-Release Builds
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift Container Platform 4"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift Container Platform 4
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection
                            className="ocp-downloads"
                          >
                            <section
                              className="pf-c-page__main-section ocp-downloads"
                            >
                              <InstructionsPreRelease
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Title
                                  headingLevel="h3"
                                  size="2xl"
                                >
                                  <h3
                                    className="pf-c-title pf-m-2xl"
                                  >
                                    Experimental Developer Preview Builds
                                  </h3>
                                </Title>
                                <Stack
                                  hasGutter={true}
                                >
                                  <div
                                    className="pf-l-stack pf-m-gutter"
                                  >
                                    <StackItem>
                                      <div
                                        className="pf-l-stack__item"
                                      >
                                        <Card
                                          className="pre-release-card"
                                        >
                                          <article
                                            className="pf-c-card pre-release-card"
                                          >
                                            <div
                                              className="pf-l-grid pf-m-gutter ocm-page instructions-section"
                                            >
                                              <div
                                                className="developer-preview"
                                              >
                                                <CodeIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 640 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </CodeIcon>
                                                 
                                                Developer Preview
                                              </div>
                                              <TokenErrorAlert
                                                token={
                                                  Object {
                                                    "error": true,
                                                    "errorCode": undefined,
                                                    "errorDetails": undefined,
                                                    "errorMessage": "[object Object]",
                                                    "internalErrorCode": undefined,
                                                    "operationID": undefined,
                                                    "pending": false,
                                                  }
                                                }
                                              >
                                                <Alert
                                                  className="token-error-alert"
                                                  isInline={true}
                                                  title="Failed to obtain pull secret"
                                                  variant="danger"
                                                >
                                                  <div
                                                    aria-label="Danger Alert"
                                                    className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                    data-ouia-component-id={27923}
                                                    data-ouia-component-type="PF4/Alert"
                                                    data-ouia-safe={true}
                                                  >
                                                    <Component
                                                      variant="danger"
                                                    >
                                                      <div
                                                        className="pf-c-alert__icon"
                                                      >
                                                        <ExclamationCircleIcon
                                                          color="currentColor"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={null}
                                                            fill="currentColor"
                                                            height="1em"
                                                            role="img"
                                                            style={
                                                              Object {
                                                                "verticalAlign": "-0.125em",
                                                              }
                                                            }
                                                            viewBox="0 0 512 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                              transform=""
                                                            />
                                                          </svg>
                                                        </ExclamationCircleIcon>
                                                      </div>
                                                    </Component>
                                                    <h4
                                                      className="pf-c-alert__title"
                                                    >
                                                      <span
                                                        className="pf-u-screen-reader"
                                                      >
                                                        Danger alert:
                                                      </span>
                                                      Failed to obtain pull secret
                                                    </h4>
                                                    <div
                                                      className="pf-c-alert__description"
                                                    >
                                                      [object Object]
                                                      <br />
                                                      <br />
                                                      Try again by refreshing the page. If the problem persists, report the issue to
                                                       
                                                      <a
                                                        href="mailto:ocm-feedback@redhat.com"
                                                        rel="noreferrer noopener"
                                                        target="_blank"
                                                      >
                                                        ocm-feedback@redhat.com
                                                         
                                                        <ExternalLinkAltIcon
                                                          color="#0066cc"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={null}
                                                            fill="#0066cc"
                                                            height="1em"
                                                            role="img"
                                                            style={
                                                              Object {
                                                                "verticalAlign": "-0.125em",
                                                              }
                                                            }
                                                            viewBox="0 0 512 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                              transform=""
                                                            />
                                                          </svg>
                                                        </ExternalLinkAltIcon>
                                                      </a>
                                                      .
                                                    </div>
                                                  </div>
                                                </Alert>
                                              </TokenErrorAlert>
                                              <TelemetryDisclaimer>
                                                <p
                                                  className="small-text"
                                                >
                                                  Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                   
                                                  <a
                                                    href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                    rel="noreferrer noopener"
                                                    target="_blank"
                                                  >
                                                    Learn more
                                                  </a>
                                                   
                                                  about the data we collect.
                                                </p>
                                              </TelemetryDisclaimer>
                                              <div
                                                className="pf-c-content"
                                              >
                                                <p>
                                                  As Red Hat OpenShift Container Platform (OCP) has moved to become a more agile and rapidly deployable Kubernetes offering, we want to allow existing and evaluation customers and partners access to the latest pre-release nightly builds to see a real-time view into the next version of OpenShift.
                                                </p>
                                                <p />
                                                <DeveloperPreviewStatements>
                                                  <p>
                                                    Because these are developer preview builds:
                                                  </p>
                                                  <ul
                                                    className="dev-preview-warnings"
                                                  >
                                                    <li>
                                                      Production use is not permitted.
                                                    </li>
                                                    <li>
                                                      Installation and use is not eligible for Red Hat production support.
                                                    </li>
                                                    <li>
                                                      Clusters installed at pre-release versions cannot be upgraded. As we approach a GA milestone with these nightly builds, we will allow upgrades from a nightly to a nightly; however, we will not support an upgrade from a nightly to the final GA build of OCP.
                                                    </li>
                                                  </ul>
                                                </DeveloperPreviewStatements>
                                                <p>
                                                  These nightly builds are useful for those who would like to stay up to date on features being developed in the next release of OpenShift. Such builds are advantageous for planning future deployments, ISV integrations, or other educational purposes.
                                                </p>
                                                <h3>
                                                  Feature Completion in Nightly Builds
                                                </h3>
                                                <p>
                                                  Each OpenShift minor release will target initiatives or focus areas. These features will not be the same in every nightly build. Because these are experimental nightly builds, some features may be incomplete or have bugs. This is the beauty of the development process.
                                                </p>
                                                <p>
                                                  The following features are being targeted for the OpenShift 4.5 release and will eventually be working in the nightly builds as they approach production readiness:
                                                </p>
                                                <h4>
                                                  Install experience
                                                </h4>
                                                <ul>
                                                  <li>
                                                    VMware vSphere support for installer-provisioned infrastructure (IPI) deployment method
                                                    <ul>
                                                      <li>
                                                        Compact 3-node clusters for bare metal (only); aligns with Edge push
                                                      </li>
                                                    </ul>
                                                  </li>
                                                  <li>
                                                    GCP UPI support for shared VPC in a host project (cross-project networking)
                                                  </li>
                                                  <li>
                                                    OpenShift on OpenStack brings new capabilities:
                                                    <ul>
                                                      <li>
                                                        OpenStack IPI install: Admin can choose two network interfaces on OpenShift worker nodes (using Multus)
                                                      </li>
                                                      <li>
                                                        OpenStack IPI install: Distribute OpenShift Masters on OpenStack nodes for best possible HA using anti-affinity rules
                                                      </li>
                                                      <li>
                                                        OpenStack IPI installer allows for Customer-Provisioned Network & Subnets
                                                      </li>
                                                      <li>
                                                        OpenShift can use OpenStack Manila (OpenStack File Service) for Read-Write-Many PVs.
                                                      </li>
                                                    </ul>
                                                  </li>
                                                </ul>
                                                <h4>
                                                  Core Platform
                                                </h4>
                                                <ul>
                                                  <li>
                                                    Compute
                                                    <ul>
                                                      <li>
                                                        Kube 1.18 and crio 1.18 with RHCOS 4.5
                                                      </li>
                                                      <li>
                                                        Vertical Pod Autoscaler  
                                                      </li>
                                                    </ul>
                                                  </li>
                                                  <li>
                                                    Networking and Ingress/Router
                                                    <ul>
                                                      <li>
                                                        SR-IOV Usability and Debugging Improvement
                                                      </li>
                                                      <li>
                                                        Router now supports HTTP/2 and gRPC 
                                                      </li>
                                                      <li>
                                                        Capabilities to enable ingress logging for the Router for security and audit
                                                      </li>
                                                      <li>
                                                        Scale testing saw improvements in connection pooling and improved threading vs 4.3
                                                      </li>
                                                    </ul>
                                                  </li>
                                                  <li>
                                                    Storage
                                                    <ul>
                                                      <li>
                                                        CSI Operator for AWS EBS 
                                                      </li>
                                                      <li>
                                                        CSI Cloning GA
                                                      </li>
                                                      <li>
                                                        CSI OpenStack Manila
                                                      </li>
                                                    </ul>
                                                  </li>
                                                </ul>
                                                <h4>
                                                  Observability: Monitoring and Logging 
                                                </h4>
                                                <ul>
                                                  <li>
                                                    OpenShift Logging is updated with Elasticsearch 6
                                                    <ul>
                                                      <li>
                                                        Change to index scheme should improve scale
                                                      </li>
                                                    </ul>
                                                  </li>
                                                </ul>
                                                <h4>
                                                  Operators, Operator Framework, SDK and OLM
                                                </h4>
                                                <ul>
                                                  <li>
                                                    Operators, Operator Framework and OLM supports apiextensions.k8s.io/v1 CRDs
                                                  </li>
                                                  <li>
                                                    A single API that streamlines the discovery of operators for admins and users
                                                  </li>
                                                  <li>
                                                    Operator developers can use validating and mutating admission webhooks
                                                  </li>
                                                </ul>
                                                <h4>
                                                  Developer Experience and Console
                                                </h4>
                                                <ul>
                                                  <li>
                                                    Ability to pull images from either the Red Hat registry or users’ specific registries that require credentials
                                                  </li>
                                                  <li>
                                                    Console will provide native console integration for Operator managed services
                                                  </li>
                                                  <li>
                                                    Ability to filter operators by badges on embedded Marketplace and OpertaorHub
                                                  </li>
                                                  <li>
                                                    Ability to customize the console URL of OpenShift Console
                                                  </li>
                                                  <li>
                                                    Ability for admins/users to BYO custom certificates for OpenShift Console
                                                  </li>
                                                  <li>
                                                    Ability to use Event Sources for Serverless Applications in Topology View
                                                  </li>
                                                  <li>
                                                    Upgrade and rollback Helm releases
                                                  </li>
                                                  <li>
                                                    Pipelines
                                                    <ul>
                                                      <li>
                                                         Add webhooks to pipelines to trigger them on Git events
                                                      </li>
                                                      <li>
                                                        Manage Git and registry credentials used in pipelines
                                                      </li>
                                                      <li>
                                                        Configure pipeline workspace for sharing volumes between tasks
                                                      </li>
                                                      <li>
                                                        Improved user experience in Tekton CLI, VS Code Tekton extension and Tekton IntellJ plugin
                                                      </li>
                                                    </ul>
                                                  </li>
                                                </ul>
                                                <p>
                                                  Find out more about test blockers for the OCP 4.5 dev previews by viewing the
                                                   
                                                  <a
                                                    href="https://bugzilla.redhat.com/buglist.cgi?bug_status=NEW&bug_status=ASSIGNED&bug_status=POST&bug_status=MODIFIED&columnlist=bug_status%2Ccomponent%2Cshort_desc%2Cassigned_to_realname%2Creporter_realname%2Cchangeddate&keywords=TestBlocker&keywords_type=allwords&known_name=OCP4-3-blocker&list_id=10675364&product=OpenShift%20Container%20Platform&query_based_on=OCP4-4-blocker&query_format=advanced&target_release=4.5.0"
                                                    rel="noreferrer noopener"
                                                    target="_blank"
                                                  >
                                                    test blocker bug list
                                                     
                                                    <ExternalLinkAltIcon
                                                      color="#0066cc"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        fill="#0066cc"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 512 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                          transform=""
                                                        />
                                                      </svg>
                                                    </ExternalLinkAltIcon>
                                                  </a>
                                                  .
                                                </p>
                                              </div>
                                            </div>
                                          </article>
                                        </Card>
                                      </div>
                                    </StackItem>
                                    <StackItem>
                                      <div
                                        className="pf-l-stack__item"
                                      >
                                        <Card
                                          className="download-instructions"
                                        >
                                          <article
                                            className="pf-c-card download-instructions"
                                          >
                                            <div
                                              className="instructions-section pf-c-content"
                                            >
                                              <DownloadsAndPullSecretSection
                                                channel="preRelease"
                                                rhcosDownloadURL="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/pre-release/latest"
                                                showPreReleaseDocs={true}
                                                showPreReleasePageLink={false}
                                                token={
                                                  Object {
                                                    "error": true,
                                                    "errorCode": undefined,
                                                    "errorDetails": undefined,
                                                    "errorMessage": "[object Object]",
                                                    "internalErrorCode": undefined,
                                                    "operationID": undefined,
                                                    "pending": false,
                                                  }
                                                }
                                              >
                                                <div
                                                  className="ocp-downloads"
                                                >
                                                  <div
                                                    className="instructions-section"
                                                  >
                                                    <Title
                                                      headingLevel="h2"
                                                    >
                                                      <h2
                                                        className="pf-c-title pf-m-xl"
                                                      >
                                                        What you need to get started
                                                      </h2>
                                                    </Title>
                                                    <Title
                                                      headingLevel="h3"
                                                    >
                                                      <h3
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        OpenShift installer
                                                      </h3>
                                                    </Title>
                                                    <p>
                                                      Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                    </p>
                                                    <p>
                                                      For pre-release documentation, refer to the
                                                       
                                                      <a
                                                        href="https://github.com/openshift/installer/tree/master/docs/user"
                                                        rel="noreferrer noopener"
                                                        target="_blank"
                                                      >
                                                        latest installer documentation
                                                         
                                                        <ExternalLinkAltIcon
                                                          color="#0066cc"
                                                          noVerticalAlign={false}
                                                          size="sm"
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            aria-labelledby={null}
                                                            fill="#0066cc"
                                                            height="1em"
                                                            role="img"
                                                            style={
                                                              Object {
                                                                "verticalAlign": "-0.125em",
                                                              }
                                                            }
                                                            viewBox="0 0 512 512"
                                                            width="1em"
                                                          >
                                                            <path
                                                              d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                              transform=""
                                                            />
                                                          </svg>
                                                        </ExternalLinkAltIcon>
                                                      </a>
                                                      .
                                                    </p>
                                                    <div>
                                                      <DownloadAndOSSelection
                                                        channel="preRelease"
                                                        token={
                                                          Object {
                                                            "error": true,
                                                            "errorCode": undefined,
                                                            "errorDetails": undefined,
                                                            "errorMessage": "[object Object]",
                                                            "internalErrorCode": undefined,
                                                            "operationID": undefined,
                                                            "pending": false,
                                                          }
                                                        }
                                                      >
                                                        <Split
                                                          className="os-based-download"
                                                          hasGutter={true}
                                                        >
                                                          <div
                                                            className="pf-l-split pf-m-gutter os-based-download"
                                                          >
                                                            <SplitItem
                                                              span={4}
                                                            >
                                                              <div
                                                                className="pf-l-split__item"
                                                                span={4}
                                                              >
                                                                <FormSelect
                                                                  aria-label="select-os-dropdown"
                                                                  className=""
                                                                  isDisabled={false}
                                                                  isRequired={false}
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  onFocus={[Function]}
                                                                  ouiaSafe={true}
                                                                  validated="default"
                                                                  value="Select OS"
                                                                >
                                                                  <select
                                                                    aria-invalid={false}
                                                                    aria-label="select-os-dropdown"
                                                                    className="pf-c-form-control"
                                                                    data-ouia-component-id={27924}
                                                                    data-ouia-component-type="PF4/FormSelect"
                                                                    data-ouia-safe={true}
                                                                    disabled={false}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    required={false}
                                                                    value="Select OS"
                                                                  >
                                                                    <FormSelectOption
                                                                      isDisabled={true}
                                                                      key="OS.Select OS"
                                                                      label="Select OS"
                                                                      value="Select OS"
                                                                    >
                                                                      <option
                                                                        className=""
                                                                        disabled={true}
                                                                        value="Select OS"
                                                                      >
                                                                        Select OS
                                                                      </option>
                                                                    </FormSelectOption>
                                                                    <FormSelectOption
                                                                      isDisabled={false}
                                                                      key="OS.linux"
                                                                      label="Linux"
                                                                      value="linux"
                                                                    >
                                                                      <option
                                                                        className=""
                                                                        disabled={false}
                                                                        value="linux"
                                                                      >
                                                                        Linux
                                                                      </option>
                                                                    </FormSelectOption>
                                                                    <FormSelectOption
                                                                      isDisabled={false}
                                                                      key="OS.mac"
                                                                      label="MacOS"
                                                                      value="mac"
                                                                    >
                                                                      <option
                                                                        className=""
                                                                        disabled={false}
                                                                        value="mac"
                                                                      >
                                                                        MacOS
                                                                      </option>
                                                                    </FormSelectOption>
                                                                  </select>
                                                                </FormSelect>
                                                              </div>
                                                            </SplitItem>
                                                            <SplitItem
                                                              span={5}
                                                            >
                                                              <div
                                                                className="pf-l-split__item"
                                                                span={5}
                                                              >
                                                                <DownloadButton
                                                                  cliTools={false}
                                                                  disabled={true}
                                                                  token={
                                                                    Object {
                                                                      "error": true,
                                                                      "errorCode": undefined,
                                                                      "errorDetails": undefined,
                                                                      "errorMessage": "[object Object]",
                                                                      "internalErrorCode": undefined,
                                                                      "operationID": undefined,
                                                                      "pending": false,
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--download-installer"
                                                                    component="a"
                                                                    disabled={true}
                                                                    download={true}
                                                                    onClick={[Function]}
                                                                    variant="secondary"
                                                                  >
                                                                    <a
                                                                      aria-disabled={false}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-secondary install--download-installer"
                                                                      data-ouia-component-id={27925}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={null}
                                                                      download={true}
                                                                      onClick={[Function]}
                                                                      type={null}
                                                                    >
                                                                      Download installer
                                                                    </a>
                                                                  </Button>
                                                                </DownloadButton>
                                                              </div>
                                                            </SplitItem>
                                                            <SplitItem
                                                              span={3}
                                                            >
                                                              <div
                                                                className="pf-l-split__item"
                                                                span={3}
                                                              />
                                                            </SplitItem>
                                                          </div>
                                                        </Split>
                                                      </DownloadAndOSSelection>
                                                    </div>
                                                  </div>
                                                  <div
                                                    className="instructions-section"
                                                  >
                                                    <Title
                                                      headingLevel="h3"
                                                    >
                                                      <h3
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Pull secret
                                                      </h3>
                                                    </Title>
                                                    <PullSecretSection
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <p>
                                                        Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                      </p>
                                                      <div>
                                                        <Button
                                                          isDisabled={true}
                                                          onClick={[Function]}
                                                          variant="secondary"
                                                        >
                                                          <button
                                                            aria-disabled={true}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary pf-m-disabled"
                                                            data-ouia-component-id={27926}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={true}
                                                            onClick={[Function]}
                                                            tabIndex={null}
                                                            type="button"
                                                          >
                                                            Download pull secret
                                                          </button>
                                                        </Button>
                                                        <CopyToClipboard
                                                          onCopy={null}
                                                          text=""
                                                        >
                                                          <span
                                                            onClick={[Function]}
                                                            style={
                                                              Object {
                                                                "margin": "10px",
                                                              }
                                                            }
                                                          >
                                                            <Button
                                                              className="install--copy-pull-secret"
                                                              id="copyPullSecret"
                                                              isDisabled={true}
                                                              tabIndex={0}
                                                              type="button"
                                                              variant="link"
                                                            >
                                                              <button
                                                                aria-disabled={true}
                                                                aria-label={null}
                                                                className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                data-ouia-component-id={27927}
                                                                data-ouia-component-type="PF4/Button"
                                                                data-ouia-safe={true}
                                                                disabled={true}
                                                                id="copyPullSecret"
                                                                tabIndex={0}
                                                                type="button"
                                                              >
                                                                <PasteIcon
                                                                  color="#0066cc"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="#0066cc"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 448 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </PasteIcon>
                                                                  Copy pull secret
                                                              </button>
                                                            </Button>
                                                          </span>
                                                        </CopyToClipboard>
                                                      </div>
                                                    </PullSecretSection>
                                                  </div>
                                                  <div
                                                    className="instructions-section"
                                                  >
                                                    <Title
                                                      headingLevel="h3"
                                                    >
                                                      <h3
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Command line interface
                                                      </h3>
                                                    </Title>
                                                    <CLISection
                                                      channel="preRelease"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <p>
                                                        Download the OpenShift command-line tools and add them to your
                                                         
                                                        <code>
                                                          PATH
                                                        </code>
                                                        .
                                                      </p>
                                                      <div>
                                                        <DownloadAndOSSelection
                                                          channel="preRelease"
                                                          cliTools={true}
                                                          token={
                                                            Object {
                                                              "error": true,
                                                              "errorCode": undefined,
                                                              "errorDetails": undefined,
                                                              "errorMessage": "[object Object]",
                                                              "internalErrorCode": undefined,
                                                              "operationID": undefined,
                                                              "pending": false,
                                                            }
                                                          }
                                                        >
                                                          <Split
                                                            className="os-based-download"
                                                            hasGutter={true}
                                                          >
                                                            <div
                                                              className="pf-l-split pf-m-gutter os-based-download"
                                                            >
                                                              <SplitItem
                                                                span={4}
                                                              >
                                                                <div
                                                                  className="pf-l-split__item"
                                                                  span={4}
                                                                >
                                                                  <FormSelect
                                                                    aria-label="select-os-dropdown"
                                                                    className=""
                                                                    isDisabled={false}
                                                                    isRequired={false}
                                                                    onBlur={[Function]}
                                                                    onChange={[Function]}
                                                                    onFocus={[Function]}
                                                                    ouiaSafe={true}
                                                                    validated="default"
                                                                    value="Select OS"
                                                                  >
                                                                    <select
                                                                      aria-invalid={false}
                                                                      aria-label="select-os-dropdown"
                                                                      className="pf-c-form-control"
                                                                      data-ouia-component-id={27928}
                                                                      data-ouia-component-type="PF4/FormSelect"
                                                                      data-ouia-safe={true}
                                                                      disabled={false}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      value="Select OS"
                                                                    >
                                                                      <FormSelectOption
                                                                        isDisabled={true}
                                                                        key="OS.Select OS"
                                                                        label="Select OS"
                                                                        value="Select OS"
                                                                      >
                                                                        <option
                                                                          className=""
                                                                          disabled={true}
                                                                          value="Select OS"
                                                                        >
                                                                          Select OS
                                                                        </option>
                                                                      </FormSelectOption>
                                                                      <FormSelectOption
                                                                        isDisabled={false}
                                                                        key="OS.linux"
                                                                        label="Linux"
                                                                        value="linux"
                                                                      >
                                                                        <option
                                                                          className=""
                                                                          disabled={false}
                                                                          value="linux"
                                                                        >
                                                                          Linux
                                                                        </option>
                                                                      </FormSelectOption>
                                                                      <FormSelectOption
                                                                        isDisabled={false}
                                                                        key="OS.mac"
                                                                        label="MacOS"
                                                                        value="mac"
                                                                      >
                                                                        <option
                                                                          className=""
                                                                          disabled={false}
                                                                          value="mac"
                                                                        >
                                                                          MacOS
                                                                        </option>
                                                                      </FormSelectOption>
                                                                      <FormSelectOption
                                                                        isDisabled={false}
                                                                        key="OS.windows"
                                                                        label="Windows"
                                                                        value="windows"
                                                                      >
                                                                        <option
                                                                          className=""
                                                                          disabled={false}
                                                                          value="windows"
                                                                        >
                                                                          Windows
                                                                        </option>
                                                                      </FormSelectOption>
                                                                    </select>
                                                                  </FormSelect>
                                                                </div>
                                                              </SplitItem>
                                                              <SplitItem
                                                                span={5}
                                                              >
                                                                <div
                                                                  className="pf-l-split__item"
                                                                  span={5}
                                                                >
                                                                  <DownloadButton
                                                                    cliTools={true}
                                                                    disabled={true}
                                                                    token={
                                                                      Object {
                                                                        "error": true,
                                                                        "errorCode": undefined,
                                                                        "errorDetails": undefined,
                                                                        "errorMessage": "[object Object]",
                                                                        "internalErrorCode": undefined,
                                                                        "operationID": undefined,
                                                                        "pending": false,
                                                                      }
                                                                    }
                                                                  >
                                                                    <Button
                                                                      className="install--download-installer"
                                                                      component="a"
                                                                      disabled={true}
                                                                      download={true}
                                                                      onClick={[Function]}
                                                                      variant="secondary"
                                                                    >
                                                                      <a
                                                                        aria-disabled={false}
                                                                        aria-label={null}
                                                                        className="pf-c-button pf-m-secondary install--download-installer"
                                                                        data-ouia-component-id={27929}
                                                                        data-ouia-component-type="PF4/Button"
                                                                        data-ouia-safe={true}
                                                                        disabled={null}
                                                                        download={true}
                                                                        onClick={[Function]}
                                                                        type={null}
                                                                      >
                                                                        Download command-line tools
                                                                      </a>
                                                                    </Button>
                                                                  </DownloadButton>
                                                                </div>
                                                              </SplitItem>
                                                              <SplitItem
                                                                span={3}
                                                              >
                                                                <div
                                                                  className="pf-l-split__item"
                                                                  span={3}
                                                                />
                                                              </SplitItem>
                                                            </div>
                                                          </Split>
                                                        </DownloadAndOSSelection>
                                                      </div>
                                                      <p />
                                                      <p>
                                                        When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                         
                                                        <code>
                                                          kubeconfig
                                                        </code>
                                                         
                                                        file will also be generated for you to use with the
                                                         
                                                        <code>
                                                          oc
                                                        </code>
                                                         
                                                        CLI tools you downloaded.
                                                      </p>
                                                    </CLISection>
                                                  </div>
                                                  <div
                                                    className="instructions-section"
                                                  >
                                                    <Title
                                                      headingLevel="h3"
                                                    >
                                                      <h3
                                                        className="pf-c-title pf-m-lg"
                                                      >
                                                        Red Hat Enterprise Linux CoreOS (RHCOS)
                                                      </h3>
                                                    </Title>
                                                    <RHCOSSection
                                                      downloadURL="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/pre-release/latest"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Button
                                                        className="install--download-installer"
                                                        component="a"
                                                        disabled={true}
                                                        href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/pre-release/latest"
                                                        rel="noreferrer noopener"
                                                        target="_blank"
                                                        variant="secondary"
                                                      >
                                                        <a
                                                          aria-disabled={false}
                                                          aria-label={null}
                                                          className="pf-c-button pf-m-secondary install--download-installer"
                                                          data-ouia-component-id={27930}
                                                          data-ouia-component-type="PF4/Button"
                                                          data-ouia-safe={true}
                                                          disabled={null}
                                                          href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/pre-release/latest"
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          type={null}
                                                        >
                                                          Download RHCOS
                                                        </a>
                                                      </Button>
                                                    </RHCOSSection>
                                                  </div>
                                                </div>
                                              </DownloadsAndPullSecretSection>
                                              <p>
                                                As these are nightly builds, you will see multiple versions available at any one time inside the mirror URLs. We strongly advise using the 4.5 nightlies until OpenShift 4.5 is released.
                                              </p>
                                              <h3
                                                className="pf-c-title pf-m-md downloads-subtitle"
                                              >
                                                Feedback and Support
                                              </h3>
                                              <p>
                                                If you are a Red Hat customer or partner and have feedback about these nightly builds, email
                                                 
                                                <a
                                                  href="mailto:***REMOVED***?subject=[dev preview build]"
                                                >
                                                  ***REMOVED***
                                                </a>
                                                . Do not use the formal Red Hat support service ticket process. You can read more about support handling in the following
                                                 
                                                <a
                                                  href="https://access.redhat.com/articles/4307871"
                                                  rel="noreferrer noopener"
                                                  target="_blank"
                                                >
                                                  knowledge article
                                                </a>
                                                .
                                              </p>
                                            </div>
                                          </article>
                                        </Card>
                                      </div>
                                    </StackItem>
                                  </div>
                                </Stack>
                              </InstructionsPreRelease>
                            </section>
                          </PageSection>
                        </InstallPreRelease>
                      </Connect(InstallPreRelease)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/pull-secret 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/pull-secret",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/pull-secret",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/pull-secret",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/pull-secret",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/pull-secret",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/pull-secret",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/pull-secret",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/pull-secret",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/pull-secret",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/pull-secret",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/pull-secret",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/pull-secret",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/pull-secret",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/pull-secret",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/pull-secret",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/pull-secret",
                          "url": "/install/pull-secret",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/pull-secret",
                          "search": "",
                        }
                      }
                      path="/install/pull-secret"
                    >
                      <Connect(InstallPullSecret)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/pull-secret",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/pull-secret",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/pull-secret",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/pull-secret",
                            "url": "/install/pull-secret",
                          }
                        }
                      >
                        <InstallPullSecret
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/pull-secret",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/pull-secret",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/pull-secret",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/pull-secret",
                              "url": "/install/pull-secret",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            title="Install OpenShift Container Platform 4"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift Container Platform 4"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift Container Platform 4
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection
                            className="ocp-instructions"
                          >
                            <section
                              className="pf-c-page__main-section ocp-instructions"
                            >
                              <InstructionsPullSecret
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Title
                                  headingLevel="h3"
                                  size="2xl"
                                >
                                  <h3
                                    className="pf-c-title pf-m-2xl"
                                  >
                                    Pull secret
                                  </h3>
                                </Title>
                                <Card>
                                  <article
                                    className="pf-c-card"
                                  >
                                    <div
                                      className="pf-l-grid pf-m-gutter ocm-page"
                                    >
                                      <TokenErrorAlert
                                        token={
                                          Object {
                                            "error": true,
                                            "errorCode": undefined,
                                            "errorDetails": undefined,
                                            "errorMessage": "[object Object]",
                                            "internalErrorCode": undefined,
                                            "operationID": undefined,
                                            "pending": false,
                                          }
                                        }
                                      >
                                        <Alert
                                          className="token-error-alert"
                                          isInline={true}
                                          title="Failed to obtain pull secret"
                                          variant="danger"
                                        >
                                          <div
                                            aria-label="Danger Alert"
                                            className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                            data-ouia-component-id={32440}
                                            data-ouia-component-type="PF4/Alert"
                                            data-ouia-safe={true}
                                          >
                                            <Component
                                              variant="danger"
                                            >
                                              <div
                                                className="pf-c-alert__icon"
                                              >
                                                <ExclamationCircleIcon
                                                  color="currentColor"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="currentColor"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </ExclamationCircleIcon>
                                              </div>
                                            </Component>
                                            <h4
                                              className="pf-c-alert__title"
                                            >
                                              <span
                                                className="pf-u-screen-reader"
                                              >
                                                Danger alert:
                                              </span>
                                              Failed to obtain pull secret
                                            </h4>
                                            <div
                                              className="pf-c-alert__description"
                                            >
                                              [object Object]
                                              <br />
                                              <br />
                                              Try again by refreshing the page. If the problem persists, report the issue to
                                               
                                              <a
                                                href="mailto:ocm-feedback@redhat.com"
                                                rel="noreferrer noopener"
                                                target="_blank"
                                              >
                                                ocm-feedback@redhat.com
                                                 
                                                <ExternalLinkAltIcon
                                                  color="#0066cc"
                                                  noVerticalAlign={false}
                                                  size="sm"
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    aria-labelledby={null}
                                                    fill="#0066cc"
                                                    height="1em"
                                                    role="img"
                                                    style={
                                                      Object {
                                                        "verticalAlign": "-0.125em",
                                                      }
                                                    }
                                                    viewBox="0 0 512 512"
                                                    width="1em"
                                                  >
                                                    <path
                                                      d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                      transform=""
                                                    />
                                                  </svg>
                                                </ExternalLinkAltIcon>
                                              </a>
                                              .
                                            </div>
                                          </div>
                                        </Alert>
                                      </TokenErrorAlert>
                                      <TelemetryDisclaimer>
                                        <p
                                          className="small-text"
                                        >
                                          Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                           
                                          <a
                                            href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                            rel="noreferrer noopener"
                                            target="_blank"
                                          >
                                            Learn more
                                          </a>
                                           
                                          about the data we collect.
                                        </p>
                                      </TelemetryDisclaimer>
                                      <div
                                        className="pf-c-content"
                                      >
                                        <h3
                                          className="pf-c-title pf-m-md downloads-subtitle"
                                        >
                                          Pull secret
                                        </h3>
                                        <PullSecretSection
                                          token={
                                            Object {
                                              "error": true,
                                              "errorCode": undefined,
                                              "errorDetails": undefined,
                                              "errorMessage": "[object Object]",
                                              "internalErrorCode": undefined,
                                              "operationID": undefined,
                                              "pending": false,
                                            }
                                          }
                                        >
                                          <p>
                                            Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                          </p>
                                          <div>
                                            <Button
                                              isDisabled={true}
                                              onClick={[Function]}
                                              variant="secondary"
                                            >
                                              <button
                                                aria-disabled={true}
                                                aria-label={null}
                                                className="pf-c-button pf-m-secondary pf-m-disabled"
                                                data-ouia-component-id={32441}
                                                data-ouia-component-type="PF4/Button"
                                                data-ouia-safe={true}
                                                disabled={true}
                                                onClick={[Function]}
                                                tabIndex={null}
                                                type="button"
                                              >
                                                Download pull secret
                                              </button>
                                            </Button>
                                            <CopyToClipboard
                                              onCopy={null}
                                              text=""
                                            >
                                              <span
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "margin": "10px",
                                                  }
                                                }
                                              >
                                                <Button
                                                  className="install--copy-pull-secret"
                                                  id="copyPullSecret"
                                                  isDisabled={true}
                                                  tabIndex={0}
                                                  type="button"
                                                  variant="link"
                                                >
                                                  <button
                                                    aria-disabled={true}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                    data-ouia-component-id={32442}
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={true}
                                                    id="copyPullSecret"
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <PasteIcon
                                                      color="#0066cc"
                                                      noVerticalAlign={false}
                                                      size="sm"
                                                    >
                                                      <svg
                                                        aria-hidden={true}
                                                        aria-labelledby={null}
                                                        fill="#0066cc"
                                                        height="1em"
                                                        role="img"
                                                        style={
                                                          Object {
                                                            "verticalAlign": "-0.125em",
                                                          }
                                                        }
                                                        viewBox="0 0 448 512"
                                                        width="1em"
                                                      >
                                                        <path
                                                          d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                          transform=""
                                                        />
                                                      </svg>
                                                    </PasteIcon>
                                                      Copy pull secret
                                                  </button>
                                                </Button>
                                              </span>
                                            </CopyToClipboard>
                                          </div>
                                        </PullSecretSection>
                                      </div>
                                    </div>
                                  </article>
                                </Card>
                              </InstructionsPullSecret>
                            </section>
                          </PageSection>
                        </InstallPullSecret>
                      </Connect(InstallPullSecret)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/rhv/installer-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/rhv/installer-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/rhv/installer-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/rhv/installer-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/rhv/installer-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/rhv/installer-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/rhv/installer-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/rhv/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/rhv/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/rhv/installer-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/rhv/installer-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/rhv/installer-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/rhv/installer-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/rhv/installer-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/rhv/installer-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/rhv/installer-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/rhv/installer-provisioned",
                          "url": "/install/rhv/installer-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/rhv/installer-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/rhv/installer-provisioned"
                    >
                      <Connect(InstallRHV)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/rhv/installer-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/rhv/installer-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/rhv/installer-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/rhv/installer-provisioned",
                            "url": "/install/rhv/installer-provisioned",
                          }
                        }
                      >
                        <InstallRHV
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/rhv/installer-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/rhv/installer-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/rhv/installer-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/rhv/installer-provisioned",
                              "url": "/install/rhv/installer-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "Red Hat Virtualization",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on Red Hat Virtualization with installer-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "Red Hat Virtualization",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={4420}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$Red Hat Virtualization"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            Red Hat Virtualization
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on Red Hat Virtualization with installer-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on Red Hat Virtualization with installer-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="stable"
                                cloudProvider="Red Hat Virutalization"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_rhv/installing-rhv-default.html"
                                showPreReleasePageLink={false}
                                title="Install OpenShift on Red Hat Virtualization with installer-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={4421}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={4422}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={4423}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={4424}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={4425}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={4426}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={4427}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the instructions to configure your environment and install your cluster
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="Red Hat Virutalization"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_rhv/installing-rhv-default.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_rhv/installing-rhv-default.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={4428}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_rhv/installing-rhv-default.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallRHV>
                      </Connect(InstallRHV)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /install/vsphere/user-provisioned 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/install/vsphere/user-provisioned",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/install/vsphere/user-provisioned",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/install/vsphere/user-provisioned",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/vsphere/user-provisioned",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/install/vsphere/user-provisioned",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/install/vsphere/user-provisioned",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/vsphere/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/vsphere/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/vsphere/user-provisioned",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/vsphere/user-provisioned",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/vsphere/user-provisioned",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/install/vsphere/user-provisioned",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/install/vsphere/user-provisioned",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/vsphere/user-provisioned",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/install/vsphere/user-provisioned",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/install/vsphere/user-provisioned",
                          "url": "/install/vsphere/user-provisioned",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/install/vsphere/user-provisioned",
                          "search": "",
                        }
                      }
                      path="/install/vsphere/user-provisioned"
                    >
                      <Connect(InstallVSphere)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/vsphere/user-provisioned",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/vsphere/user-provisioned",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/install/vsphere/user-provisioned",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/install/vsphere/user-provisioned",
                            "url": "/install/vsphere/user-provisioned",
                          }
                        }
                      >
                        <InstallVSphere
                          dispatch={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/install/vsphere/user-provisioned",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/install/vsphere/user-provisioned",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/install/vsphere/user-provisioned",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/install/vsphere/user-provisioned",
                              "url": "/install/vsphere/user-provisioned",
                            }
                          }
                          token={
                            Object {
                              "error": true,
                              "errorCode": undefined,
                              "errorDetails": undefined,
                              "errorMessage": "[object Object]",
                              "internalErrorCode": undefined,
                              "operationID": undefined,
                              "pending": false,
                            }
                          }
                        >
                          <PageTitle
                            breadcrumbs={
                              <Breadcrumbs
                                path={
                                  Array [
                                    Object {
                                      "label": "Clusters",
                                    },
                                    Object {
                                      "label": "Create",
                                      "path": "/create",
                                    },
                                    Object {
                                      "label": "OpenShift Container Platform",
                                      "path": "/install",
                                    },
                                    Object {
                                      "label": "VMware vSphere",
                                    },
                                  ]
                                }
                              />
                            }
                            title="Install OpenShift on vSphere with user-provisioned infrastructure"
                          >
                            <PageHeader>
                              <section
                                className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                widget-type="InsightsPageHeader"
                              >
                                <Breadcrumbs
                                  path={
                                    Array [
                                      Object {
                                        "label": "Clusters",
                                      },
                                      Object {
                                        "label": "Create",
                                        "path": "/create",
                                      },
                                      Object {
                                        "label": "OpenShift Container Platform",
                                        "path": "/install",
                                      },
                                      Object {
                                        "label": "VMware vSphere",
                                      },
                                    ]
                                  }
                                >
                                  <Breadcrumb>
                                    <nav
                                      aria-label="Breadcrumb"
                                      className="pf-c-breadcrumb"
                                      data-ouia-component-id={13505}
                                      data-ouia-component-type="PF4/Breadcrumb"
                                      data-ouia-safe={true}
                                    >
                                      <ol
                                        className="pf-c-breadcrumb__list"
                                      >
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Clusters"
                                          replace={false}
                                          showDivider={false}
                                          strict={false}
                                          to=""
                                        >
                                          <Route
                                            exact={false}
                                            path=""
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/"
                                              onClick={[Function]}
                                              showDivider={false}
                                              style={Object {}}
                                              to="/openshift"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift"
                                                  target={null}
                                                >
                                                  Clusters
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$Create"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/create"
                                        >
                                          <Route
                                            exact={false}
                                            path="/create"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className=""
                                              href="/create"
                                              onClick={[Function]}
                                              showDivider={true}
                                              to="/openshift/create"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                                href="/create"
                                                onClick={[Function]}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/create"
                                                  target={null}
                                                >
                                                  Create
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <LinkContainer
                                          activeClassName="active"
                                          exact={false}
                                          key=".$OpenShift Container Platform"
                                          replace={false}
                                          showDivider={true}
                                          strict={false}
                                          to="/install"
                                        >
                                          <Route
                                            exact={false}
                                            path="/install"
                                            strict={false}
                                          >
                                            <BreadcrumbItem
                                              className="active"
                                              href="/install"
                                              onClick={[Function]}
                                              showDivider={true}
                                              style={Object {}}
                                              to="/openshift/install"
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item active"
                                                href="/install"
                                                onClick={[Function]}
                                                style={Object {}}
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                <a
                                                  className="pf-c-breadcrumb__link"
                                                  href="/openshift/install"
                                                  target={null}
                                                >
                                                  OpenShift Container Platform
                                                </a>
                                              </li>
                                            </BreadcrumbItem>
                                          </Route>
                                        </LinkContainer>
                                        <BreadcrumbItem
                                          isActive={true}
                                          key=".$VMware vSphere"
                                          showDivider={true}
                                        >
                                          <li
                                            className="pf-c-breadcrumb__item"
                                          >
                                            <span
                                              className="pf-c-breadcrumb__item-divider"
                                            >
                                              <AngleRightIcon
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                              >
                                                <svg
                                                  aria-hidden={true}
                                                  aria-labelledby={null}
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 256 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </AngleRightIcon>
                                            </span>
                                            VMware vSphere
                                          </li>
                                        </BreadcrumbItem>
                                      </ol>
                                    </nav>
                                  </Breadcrumb>
                                </Breadcrumbs>
                                <Split>
                                  <div
                                    className="pf-l-split"
                                  >
                                    <SplitItem
                                      isFilled={true}
                                    >
                                      <div
                                        className="pf-l-split__item pf-m-fill"
                                      >
                                        <PageHeaderTitle
                                          className="ocm-page-title"
                                          title="Install OpenShift on vSphere with user-provisioned infrastructure"
                                        >
                                          <Title
                                            className="ocm-page-title"
                                            headingLevel="h1"
                                            size="2xl"
                                            widget-type="InsightsPageHeaderTitle"
                                          >
                                            <h1
                                              className="pf-c-title pf-m-2xl ocm-page-title"
                                              widget-type="InsightsPageHeaderTitle"
                                            >
                                               
                                              Install OpenShift on vSphere with user-provisioned infrastructure
                                               
                                            </h1>
                                          </Title>
                                        </PageHeaderTitle>
                                      </div>
                                    </SplitItem>
                                  </div>
                                </Split>
                              </section>
                            </PageHeader>
                          </PageTitle>
                          <PageSection>
                            <section
                              className="pf-c-page__main-section"
                            >
                              <OCPInstructions
                                channel="stable"
                                cloudProvider="VMWare vSphere"
                                docURL="https://docs.openshift.com/container-platform/latest/installing/installing_vsphere/installing-vsphere.html"
                                rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_vsphere/installing-vsphere.html#installation-vsphere-machines_installing-vsphere"
                                title="Install OpenShift on vSphere with user-provisioned infrastructure"
                                token={
                                  Object {
                                    "error": true,
                                    "errorCode": undefined,
                                    "errorDetails": undefined,
                                    "errorMessage": "[object Object]",
                                    "internalErrorCode": undefined,
                                    "operationID": undefined,
                                    "pending": false,
                                  }
                                }
                              >
                                <Card
                                  className="ocp-downloads"
                                >
                                  <article
                                    className="pf-c-card ocp-downloads"
                                  >
                                    <Stack>
                                      <div
                                        className="pf-l-stack"
                                      >
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number alert"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number alert"
                                                      />
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions alert"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions alert"
                                                  >
                                                    <TokenErrorAlert
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <Alert
                                                        className="token-error-alert"
                                                        isInline={true}
                                                        title="Failed to obtain pull secret"
                                                        variant="danger"
                                                      >
                                                        <div
                                                          aria-label="Danger Alert"
                                                          className="pf-c-alert pf-m-inline pf-m-danger token-error-alert"
                                                          data-ouia-component-id={13506}
                                                          data-ouia-component-type="PF4/Alert"
                                                          data-ouia-safe={true}
                                                        >
                                                          <Component
                                                            variant="danger"
                                                          >
                                                            <div
                                                              className="pf-c-alert__icon"
                                                            >
                                                              <ExclamationCircleIcon
                                                                color="currentColor"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="currentColor"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExclamationCircleIcon>
                                                            </div>
                                                          </Component>
                                                          <h4
                                                            className="pf-c-alert__title"
                                                          >
                                                            <span
                                                              className="pf-u-screen-reader"
                                                            >
                                                              Danger alert:
                                                            </span>
                                                            Failed to obtain pull secret
                                                          </h4>
                                                          <div
                                                            className="pf-c-alert__description"
                                                          >
                                                            [object Object]
                                                            <br />
                                                            <br />
                                                            Try again by refreshing the page. If the problem persists, report the issue to
                                                             
                                                            <a
                                                              href="mailto:ocm-feedback@redhat.com"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              ocm-feedback@redhat.com
                                                               
                                                              <ExternalLinkAltIcon
                                                                color="#0066cc"
                                                                noVerticalAlign={false}
                                                                size="sm"
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  aria-labelledby={null}
                                                                  fill="#0066cc"
                                                                  height="1em"
                                                                  role="img"
                                                                  style={
                                                                    Object {
                                                                      "verticalAlign": "-0.125em",
                                                                    }
                                                                  }
                                                                  viewBox="0 0 512 512"
                                                                  width="1em"
                                                                >
                                                                  <path
                                                                    d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                    transform=""
                                                                  />
                                                                </svg>
                                                              </ExternalLinkAltIcon>
                                                            </a>
                                                            .
                                                          </div>
                                                        </div>
                                                      </Alert>
                                                    </TokenErrorAlert>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        1
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <DownloadsAndPullSecretSection
                                                      channel="stable"
                                                      cloudProviderID="/"
                                                      rhcosLearnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_vsphere/installing-vsphere.html#installation-vsphere-machines_installing-vsphere"
                                                      token={
                                                        Object {
                                                          "error": true,
                                                          "errorCode": undefined,
                                                          "errorDetails": undefined,
                                                          "errorMessage": "[object Object]",
                                                          "internalErrorCode": undefined,
                                                          "operationID": undefined,
                                                          "pending": false,
                                                        }
                                                      }
                                                    >
                                                      <div
                                                        className="ocp-downloads"
                                                      >
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h2"
                                                          >
                                                            <h2
                                                              className="pf-c-title pf-m-xl"
                                                            >
                                                              What you need to get started
                                                            </h2>
                                                          </Title>
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              OpenShift installer
                                                            </h3>
                                                          </Title>
                                                          <p>
                                                            Download and extract the install program for your operating system and place the file in the directory where you will store the installation configuration files. Note: The OpenShift install program is only available for Linux and macOS at this time.
                                                          </p>
                                                          <div>
                                                            <DownloadAndOSSelection
                                                              channel="stable"
                                                              cloudProviderID="/"
                                                              token={
                                                                Object {
                                                                  "error": true,
                                                                  "errorCode": undefined,
                                                                  "errorDetails": undefined,
                                                                  "errorMessage": "[object Object]",
                                                                  "internalErrorCode": undefined,
                                                                  "operationID": undefined,
                                                                  "pending": false,
                                                                }
                                                              }
                                                            >
                                                              <Split
                                                                className="os-based-download"
                                                                hasGutter={true}
                                                              >
                                                                <div
                                                                  className="pf-l-split pf-m-gutter os-based-download"
                                                                >
                                                                  <SplitItem
                                                                    span={4}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={4}
                                                                    >
                                                                      <FormSelect
                                                                        aria-label="select-os-dropdown"
                                                                        className=""
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        ouiaSafe={true}
                                                                        validated="default"
                                                                        value="Select OS"
                                                                      >
                                                                        <select
                                                                          aria-invalid={false}
                                                                          aria-label="select-os-dropdown"
                                                                          className="pf-c-form-control"
                                                                          data-ouia-component-id={13507}
                                                                          data-ouia-component-type="PF4/FormSelect"
                                                                          data-ouia-safe={true}
                                                                          disabled={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          required={false}
                                                                          value="Select OS"
                                                                        >
                                                                          <FormSelectOption
                                                                            isDisabled={true}
                                                                            key="OS.Select OS"
                                                                            label="Select OS"
                                                                            value="Select OS"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={true}
                                                                              value="Select OS"
                                                                            >
                                                                              Select OS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.linux"
                                                                            label="Linux"
                                                                            value="linux"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="linux"
                                                                            >
                                                                              Linux
                                                                            </option>
                                                                          </FormSelectOption>
                                                                          <FormSelectOption
                                                                            isDisabled={false}
                                                                            key="OS.mac"
                                                                            label="MacOS"
                                                                            value="mac"
                                                                          >
                                                                            <option
                                                                              className=""
                                                                              disabled={false}
                                                                              value="mac"
                                                                            >
                                                                              MacOS
                                                                            </option>
                                                                          </FormSelectOption>
                                                                        </select>
                                                                      </FormSelect>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={5}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={5}
                                                                    >
                                                                      <DownloadButton
                                                                        cliTools={false}
                                                                        cloudProviderID="/"
                                                                        disabled={true}
                                                                        token={
                                                                          Object {
                                                                            "error": true,
                                                                            "errorCode": undefined,
                                                                            "errorDetails": undefined,
                                                                            "errorMessage": "[object Object]",
                                                                            "internalErrorCode": undefined,
                                                                            "operationID": undefined,
                                                                            "pending": false,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Button
                                                                          className="install--download-installer"
                                                                          component="a"
                                                                          disabled={true}
                                                                          download={true}
                                                                          onClick={[Function]}
                                                                          variant="secondary"
                                                                        >
                                                                          <a
                                                                            aria-disabled={false}
                                                                            aria-label={null}
                                                                            className="pf-c-button pf-m-secondary install--download-installer"
                                                                            data-ouia-component-id={13508}
                                                                            data-ouia-component-type="PF4/Button"
                                                                            data-ouia-safe={true}
                                                                            disabled={null}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            type={null}
                                                                          >
                                                                            Download installer
                                                                          </a>
                                                                        </Button>
                                                                      </DownloadButton>
                                                                    </div>
                                                                  </SplitItem>
                                                                  <SplitItem
                                                                    span={3}
                                                                  >
                                                                    <div
                                                                      className="pf-l-split__item"
                                                                      span={3}
                                                                    />
                                                                  </SplitItem>
                                                                </div>
                                                              </Split>
                                                            </DownloadAndOSSelection>
                                                          </div>
                                                          <div>
                                                            <DeveloperPreviewSection>
                                                              <span
                                                                className="pf-c-label pf-m-compact dev-preview-label"
                                                              >
                                                                <CodeIcon
                                                                  color="currentColor"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="currentColor"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 640 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </CodeIcon>
                                                                 
                                                                Developer Preview
                                                              </span>
                                                               
                                                              <Link
                                                                replace={false}
                                                                to="/install/pre-release"
                                                              >
                                                                <a
                                                                  href="/install/pre-release"
                                                                  onClick={[Function]}
                                                                >
                                                                  Download
                                                                   
                                                                  pre-release builds
                                                                </a>
                                                              </Link>
                                                            </DeveloperPreviewSection>
                                                          </div>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Pull secret
                                                            </h3>
                                                          </Title>
                                                          <PullSecretSection
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download or copy your pull secret. The install program will prompt you for your pull secret during installation.
                                                            </p>
                                                            <div>
                                                              <Button
                                                                isDisabled={true}
                                                                onClick={[Function]}
                                                                variant="secondary"
                                                              >
                                                                <button
                                                                  aria-disabled={true}
                                                                  aria-label={null}
                                                                  className="pf-c-button pf-m-secondary pf-m-disabled"
                                                                  data-ouia-component-id={13509}
                                                                  data-ouia-component-type="PF4/Button"
                                                                  data-ouia-safe={true}
                                                                  disabled={true}
                                                                  onClick={[Function]}
                                                                  tabIndex={null}
                                                                  type="button"
                                                                >
                                                                  Download pull secret
                                                                </button>
                                                              </Button>
                                                              <CopyToClipboard
                                                                onCopy={null}
                                                                text=""
                                                              >
                                                                <span
                                                                  onClick={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "margin": "10px",
                                                                    }
                                                                  }
                                                                >
                                                                  <Button
                                                                    className="install--copy-pull-secret"
                                                                    id="copyPullSecret"
                                                                    isDisabled={true}
                                                                    tabIndex={0}
                                                                    type="button"
                                                                    variant="link"
                                                                  >
                                                                    <button
                                                                      aria-disabled={true}
                                                                      aria-label={null}
                                                                      className="pf-c-button pf-m-link pf-m-disabled install--copy-pull-secret"
                                                                      data-ouia-component-id={13510}
                                                                      data-ouia-component-type="PF4/Button"
                                                                      data-ouia-safe={true}
                                                                      disabled={true}
                                                                      id="copyPullSecret"
                                                                      tabIndex={0}
                                                                      type="button"
                                                                    >
                                                                      <PasteIcon
                                                                        color="#0066cc"
                                                                        noVerticalAlign={false}
                                                                        size="sm"
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          aria-labelledby={null}
                                                                          fill="#0066cc"
                                                                          height="1em"
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "verticalAlign": "-0.125em",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 448 512"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M128 184c0-30.879 25.122-56 56-56h136V56c0-13.255-10.745-24-24-24h-80.61C204.306 12.89 183.637 0 160 0s-44.306 12.89-55.39 32H24C10.745 32 0 42.745 0 56v336c0 13.255 10.745 24 24 24h104V184zm32-144c13.255 0 24 10.745 24 24s-10.745 24-24 24-24-10.745-24-24 10.745-24 24-24zm184 248h104v200c0 13.255-10.745 24-24 24H184c-13.255 0-24-10.745-24-24V184c0-13.255 10.745-24 24-24h136v104c0 13.2 10.8 24 24 24zm104-38.059V256h-96v-96h6.059a24 24 0 0 1 16.97 7.029l65.941 65.941a24.002 24.002 0 0 1 7.03 16.971z"
                                                                            transform=""
                                                                          />
                                                                        </svg>
                                                                      </PasteIcon>
                                                                        Copy pull secret
                                                                    </button>
                                                                  </Button>
                                                                </span>
                                                              </CopyToClipboard>
                                                            </div>
                                                          </PullSecretSection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Command line interface
                                                            </h3>
                                                          </Title>
                                                          <CLISection
                                                            channel="stable"
                                                            cloudProviderID="/"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download the OpenShift command-line tools and add them to your
                                                               
                                                              <code>
                                                                PATH
                                                              </code>
                                                              .
                                                            </p>
                                                            <div>
                                                              <DownloadAndOSSelection
                                                                channel="stable"
                                                                cliTools={true}
                                                                cloudProviderID="/"
                                                                token={
                                                                  Object {
                                                                    "error": true,
                                                                    "errorCode": undefined,
                                                                    "errorDetails": undefined,
                                                                    "errorMessage": "[object Object]",
                                                                    "internalErrorCode": undefined,
                                                                    "operationID": undefined,
                                                                    "pending": false,
                                                                  }
                                                                }
                                                              >
                                                                <Split
                                                                  className="os-based-download"
                                                                  hasGutter={true}
                                                                >
                                                                  <div
                                                                    className="pf-l-split pf-m-gutter os-based-download"
                                                                  >
                                                                    <SplitItem
                                                                      span={4}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={4}
                                                                      >
                                                                        <FormSelect
                                                                          aria-label="select-os-dropdown"
                                                                          className=""
                                                                          isDisabled={false}
                                                                          isRequired={false}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          ouiaSafe={true}
                                                                          validated="default"
                                                                          value="Select OS"
                                                                        >
                                                                          <select
                                                                            aria-invalid={false}
                                                                            aria-label="select-os-dropdown"
                                                                            className="pf-c-form-control"
                                                                            data-ouia-component-id={13511}
                                                                            data-ouia-component-type="PF4/FormSelect"
                                                                            data-ouia-safe={true}
                                                                            disabled={false}
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onFocus={[Function]}
                                                                            required={false}
                                                                            value="Select OS"
                                                                          >
                                                                            <FormSelectOption
                                                                              isDisabled={true}
                                                                              key="OS.Select OS"
                                                                              label="Select OS"
                                                                              value="Select OS"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={true}
                                                                                value="Select OS"
                                                                              >
                                                                                Select OS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.linux"
                                                                              label="Linux"
                                                                              value="linux"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="linux"
                                                                              >
                                                                                Linux
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.mac"
                                                                              label="MacOS"
                                                                              value="mac"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="mac"
                                                                              >
                                                                                MacOS
                                                                              </option>
                                                                            </FormSelectOption>
                                                                            <FormSelectOption
                                                                              isDisabled={false}
                                                                              key="OS.windows"
                                                                              label="Windows"
                                                                              value="windows"
                                                                            >
                                                                              <option
                                                                                className=""
                                                                                disabled={false}
                                                                                value="windows"
                                                                              >
                                                                                Windows
                                                                              </option>
                                                                            </FormSelectOption>
                                                                          </select>
                                                                        </FormSelect>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={5}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={5}
                                                                      >
                                                                        <DownloadButton
                                                                          cliTools={true}
                                                                          cloudProviderID="/"
                                                                          disabled={true}
                                                                          token={
                                                                            Object {
                                                                              "error": true,
                                                                              "errorCode": undefined,
                                                                              "errorDetails": undefined,
                                                                              "errorMessage": "[object Object]",
                                                                              "internalErrorCode": undefined,
                                                                              "operationID": undefined,
                                                                              "pending": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Button
                                                                            className="install--download-installer"
                                                                            component="a"
                                                                            disabled={true}
                                                                            download={true}
                                                                            onClick={[Function]}
                                                                            variant="secondary"
                                                                          >
                                                                            <a
                                                                              aria-disabled={false}
                                                                              aria-label={null}
                                                                              className="pf-c-button pf-m-secondary install--download-installer"
                                                                              data-ouia-component-id={13512}
                                                                              data-ouia-component-type="PF4/Button"
                                                                              data-ouia-safe={true}
                                                                              disabled={null}
                                                                              download={true}
                                                                              onClick={[Function]}
                                                                              type={null}
                                                                            >
                                                                              Download command-line tools
                                                                            </a>
                                                                          </Button>
                                                                        </DownloadButton>
                                                                      </div>
                                                                    </SplitItem>
                                                                    <SplitItem
                                                                      span={3}
                                                                    >
                                                                      <div
                                                                        className="pf-l-split__item"
                                                                        span={3}
                                                                      />
                                                                    </SplitItem>
                                                                  </div>
                                                                </Split>
                                                              </DownloadAndOSSelection>
                                                            </div>
                                                            <p />
                                                            <p>
                                                              When the installer is complete you will see the console URL and credentials for accessing your new cluster. A
                                                               
                                                              <code>
                                                                kubeconfig
                                                              </code>
                                                               
                                                              file will also be generated for you to use with the
                                                               
                                                              <code>
                                                                oc
                                                              </code>
                                                               
                                                              CLI tools you downloaded.
                                                            </p>
                                                          </CLISection>
                                                        </div>
                                                        <div
                                                          className="instructions-section"
                                                        >
                                                          <Title
                                                            headingLevel="h3"
                                                          >
                                                            <h3
                                                              className="pf-c-title pf-m-lg"
                                                            >
                                                              Red Hat Enterprise Linux CoreOS (RHCOS)
                                                            </h3>
                                                          </Title>
                                                          <RHCOSSection
                                                            downloadURL="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                            learnMoreURL="https://docs.openshift.com/container-platform/latest/installing/installing_vsphere/installing-vsphere.html#installation-vsphere-machines_installing-vsphere"
                                                            token={
                                                              Object {
                                                                "error": true,
                                                                "errorCode": undefined,
                                                                "errorDetails": undefined,
                                                                "errorMessage": "[object Object]",
                                                                "internalErrorCode": undefined,
                                                                "operationID": undefined,
                                                                "pending": false,
                                                              }
                                                            }
                                                          >
                                                            <p>
                                                              Download RHCOS to create machines for your cluster to use during installation.
                                                               
                                                              <a
                                                                href="https://docs.openshift.com/container-platform/latest/installing/installing_vsphere/installing-vsphere.html#installation-vsphere-machines_installing-vsphere"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                              >
                                                                Learn more
                                                                 
                                                                <ExternalLinkAltIcon
                                                                  color="#0066cc"
                                                                  noVerticalAlign={false}
                                                                  size="sm"
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    aria-labelledby={null}
                                                                    fill="#0066cc"
                                                                    height="1em"
                                                                    role="img"
                                                                    style={
                                                                      Object {
                                                                        "verticalAlign": "-0.125em",
                                                                      }
                                                                    }
                                                                    viewBox="0 0 512 512"
                                                                    width="1em"
                                                                  >
                                                                    <path
                                                                      d="M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z"
                                                                      transform=""
                                                                    />
                                                                  </svg>
                                                                </ExternalLinkAltIcon>
                                                                .
                                                              </a>
                                                            </p>
                                                            <Button
                                                              className="install--download-installer"
                                                              component="a"
                                                              disabled={true}
                                                              href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                              variant="secondary"
                                                            >
                                                              <a
                                                                aria-disabled={false}
                                                                aria-label={null}
                                                                className="pf-c-button pf-m-secondary install--download-installer"
                                                                data-ouia-component-id={13513}
                                                                data-ouia-component-type="PF4/Button"
                                                                data-ouia-safe={true}
                                                                disabled={null}
                                                                href="https://mirror.openshift.com/pub/openshift-v4/dependencies/rhcos/latest/latest/"
                                                                rel="noreferrer noopener"
                                                                target="_blank"
                                                                type={null}
                                                              >
                                                                Download RHCOS
                                                              </a>
                                                            </Button>
                                                          </RHCOSSection>
                                                        </div>
                                                      </div>
                                                    </DownloadsAndPullSecretSection>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        2
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <div
                                                      className="instructions-section"
                                                    >
                                                      <Title
                                                        headingLevel="h2"
                                                      >
                                                        <h2
                                                          className="pf-c-title pf-m-xl"
                                                        >
                                                          Follow the instructions to configure your environment and install your cluster
                                                        </h2>
                                                      </Title>
                                                      <GetStarted
                                                        cloudProvider="VMWare vSphere"
                                                        cloudProviderID="/"
                                                        docURL="https://docs.openshift.com/container-platform/latest/installing/installing_vsphere/installing-vsphere.html"
                                                      >
                                                        <p>
                                                          The installer will take about 45 minutes to run.
                                                           
                                                        </p>
                                                        <Button
                                                          component="a"
                                                          href="https://docs.openshift.com/container-platform/latest/installing/installing_vsphere/installing-vsphere.html"
                                                          onClick={[Function]}
                                                          rel="noreferrer noopener"
                                                          target="_blank"
                                                          variant="secondary"
                                                        >
                                                          <a
                                                            aria-disabled={false}
                                                            aria-label={null}
                                                            className="pf-c-button pf-m-secondary"
                                                            data-ouia-component-id={13514}
                                                            data-ouia-component-type="PF4/Button"
                                                            data-ouia-safe={true}
                                                            disabled={null}
                                                            href="https://docs.openshift.com/container-platform/latest/installing/installing_vsphere/installing-vsphere.html"
                                                            onClick={[Function]}
                                                            rel="noreferrer noopener"
                                                            target="_blank"
                                                            type={null}
                                                          >
                                                            Get started
                                                          </a>
                                                        </Button>
                                                        <TelemetryDisclaimer>
                                                          <p
                                                            className="small-text"
                                                          >
                                                            Red Hat collects a limited amount of telemetry data. By installing OpenShift Container Platform 4, you accept our data collection policy.
                                                             
                                                            <a
                                                              href="https://docs.openshift.com/container-platform/latest/support/remote_health_monitoring/about-remote-health-monitoring.html"
                                                              rel="noreferrer noopener"
                                                              target="_blank"
                                                            >
                                                              Learn more
                                                            </a>
                                                             
                                                            about the data we collect.
                                                          </p>
                                                        </TelemetryDisclaimer>
                                                      </GetStarted>
                                                    </div>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                        <Divider
                                          className="steps-divider"
                                        >
                                          <hr
                                            className="pf-c-divider steps-divider"
                                          />
                                        </Divider>
                                        <StackItem>
                                          <div
                                            className="pf-l-stack__item"
                                          >
                                            <Split>
                                              <div
                                                className="pf-l-split"
                                              >
                                                <SplitItem>
                                                  <div
                                                    className="pf-l-split__item"
                                                  >
                                                    <Title
                                                      className="step-number"
                                                      headingLevel="h1"
                                                    >
                                                      <h1
                                                        className="pf-c-title pf-m-2xl step-number"
                                                      >
                                                        3
                                                      </h1>
                                                    </Title>
                                                  </div>
                                                </SplitItem>
                                                <SplitItem
                                                  className="download-instructions"
                                                  isFilled={true}
                                                >
                                                  <div
                                                    className="pf-l-split__item pf-m-fill download-instructions"
                                                  >
                                                    <SubscriptionAndSupport>
                                                      <div
                                                        className="instructions-section"
                                                      >
                                                        <Title
                                                          headingLevel="h2"
                                                        >
                                                          <h2
                                                            className="pf-c-title pf-m-xl"
                                                          >
                                                            Subscription and support
                                                          </h2>
                                                        </Title>
                                                        <p>
                                                          You cluster will be automatically registered with a 60 day evaluation subscription which does not include support. In order to receive support for your cluster, you will need to edit the subscription settings  the cluster details page here in OpenShift Cluster Manager.
                                                        </p>
                                                        <ul>
                                                          <li>
                                                            <span>
                                                              Choose "Edit subscriptions settings " from the actions menu in the upper right of the cluster details pages.
                                                            </span>
                                                          </li>
                                                          <li>
                                                            <span>
                                                              Select the options that apply to your cluster in the dialog and save.
                                                            </span>
                                                          </li>
                                                        </ul>
                                                      </div>
                                                    </SubscriptionAndSupport>
                                                  </div>
                                                </SplitItem>
                                              </div>
                                            </Split>
                                          </div>
                                        </StackItem>
                                      </div>
                                    </Stack>
                                  </article>
                                </Card>
                              </OCPInstructions>
                            </section>
                          </PageSection>
                        </InstallVSphere>
                      </Connect(InstallVSphere)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /register 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/register",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/register",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/register",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/register",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/register",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/register",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/register",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/register",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/register",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/register",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/register",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/register",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/register",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/register",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/register",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/register",
                          "url": "/register",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/register",
                          "search": "",
                        }
                      }
                      path="/register"
                    >
                      <Connect(ReduxForm)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/register",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/register",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/register",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/register",
                            "url": "/register",
                          }
                        }
                      >
                        <ReduxForm
                          closeModal={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/register",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/register",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          initialValues={
                            Object {
                              "cluster_id": "",
                              "display_name": "",
                              "memory_gib": "",
                              "nodes_compute": "",
                              "operating_system": "Red Hat Enterprise Linux CoreOS",
                              "socket_num": "",
                              "system_type": "physical",
                              "vcpu_num": "",
                              "web_console_url": "",
                            }
                          }
                          isOpen={false}
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/register",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/register",
                              "url": "/register",
                            }
                          }
                          onSubmit={[Function]}
                          openModal={[Function]}
                          registerClusterResponse={
                            Object {
                              "cluster": null,
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": false,
                              "valid": true,
                            }
                          }
                          resetForm={[Function]}
                          resetResponse={[Function]}
                        >
                          <Connect(Form(RegisterCluster))
                            closeModal={[Function]}
                            destroyOnUnmount={true}
                            enableReinitialize={false}
                            forceUnregisterOnUnmount={false}
                            form="RegisterCluster"
                            getFormState={[Function]}
                            history={
                              Object {
                                "action": "POP",
                                "block": [Function],
                                "canGo": [Function],
                                "createHref": [Function],
                                "entries": Array [
                                  Object {
                                    "hash": "",
                                    "key": "testKey",
                                    "pathname": "/register",
                                    "search": "",
                                  },
                                ],
                                "go": [Function],
                                "goBack": [Function],
                                "goForward": [Function],
                                "index": 0,
                                "length": 1,
                                "listen": [Function],
                                "location": Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/register",
                                  "search": "",
                                },
                                "push": [Function],
                                "replace": [Function],
                              }
                            }
                            initialValues={
                              Object {
                                "cluster_id": "",
                                "display_name": "",
                                "memory_gib": "",
                                "nodes_compute": "",
                                "operating_system": "Red Hat Enterprise Linux CoreOS",
                                "socket_num": "",
                                "system_type": "physical",
                                "vcpu_num": "",
                                "web_console_url": "",
                              }
                            }
                            isOpen={false}
                            keepDirtyOnReinitialize={false}
                            location={
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/register",
                                "search": "",
                              }
                            }
                            match={
                              Object {
                                "isExact": true,
                                "params": Object {},
                                "path": "/register",
                                "url": "/register",
                              }
                            }
                            onSubmit={[Function]}
                            openModal={[Function]}
                            persistentSubmitErrors={false}
                            pure={true}
                            registerClusterResponse={
                              Object {
                                "cluster": null,
                                "error": false,
                                "errorDetails": null,
                                "errorMessage": "",
                                "fulfilled": false,
                                "pending": false,
                                "valid": true,
                              }
                            }
                            resetForm={[Function]}
                            resetResponse={[Function]}
                            shouldAsyncValidate={[Function]}
                            shouldError={[Function]}
                            shouldValidate={[Function]}
                            shouldWarn={[Function]}
                            touchOnBlur={true}
                            touchOnChange={false}
                            updateUnregisteredFields={false}
                          >
                            <Form(RegisterCluster)
                              anyTouched={false}
                              array={
                                Object {
                                  "insert": [Function],
                                  "move": [Function],
                                  "pop": [Function],
                                  "push": [Function],
                                  "remove": [Function],
                                  "removeAll": [Function],
                                  "shift": [Function],
                                  "splice": [Function],
                                  "swap": [Function],
                                  "unshift": [Function],
                                }
                              }
                              arrayInsert={[Function]}
                              arrayMove={[Function]}
                              arrayPop={[Function]}
                              arrayPush={[Function]}
                              arrayRemove={[Function]}
                              arrayRemoveAll={[Function]}
                              arrayShift={[Function]}
                              arraySplice={[Function]}
                              arraySwap={[Function]}
                              arrayUnshift={[Function]}
                              asyncValidating={false}
                              autofill={[Function]}
                              blur={[Function]}
                              change={[Function]}
                              clearAsyncError={[Function]}
                              clearFields={[Function]}
                              clearSubmit={[Function]}
                              clearSubmitErrors={[Function]}
                              closeModal={[Function]}
                              destroy={[Function]}
                              destroyOnUnmount={true}
                              dirty={false}
                              dispatch={[Function]}
                              enableReinitialize={false}
                              focus={[Function]}
                              forceUnregisterOnUnmount={false}
                              form="RegisterCluster"
                              getFormState={[Function]}
                              history={
                                Object {
                                  "action": "POP",
                                  "block": [Function],
                                  "canGo": [Function],
                                  "createHref": [Function],
                                  "entries": Array [
                                    Object {
                                      "hash": "",
                                      "key": "testKey",
                                      "pathname": "/register",
                                      "search": "",
                                    },
                                  ],
                                  "go": [Function],
                                  "goBack": [Function],
                                  "goForward": [Function],
                                  "index": 0,
                                  "length": 1,
                                  "listen": [Function],
                                  "location": Object {
                                    "hash": "",
                                    "key": "testKey",
                                    "pathname": "/register",
                                    "search": "",
                                  },
                                  "push": [Function],
                                  "replace": [Function],
                                }
                              }
                              initialValues={
                                Object {
                                  "cluster_id": "",
                                  "display_name": "",
                                  "memory_gib": "",
                                  "nodes_compute": "",
                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                  "socket_num": "",
                                  "system_type": "physical",
                                  "vcpu_num": "",
                                  "web_console_url": "",
                                }
                              }
                              initialize={[Function]}
                              initialized={true}
                              invalid={true}
                              isOpen={false}
                              keepDirtyOnReinitialize={false}
                              location={
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/register",
                                  "search": "",
                                }
                              }
                              match={
                                Object {
                                  "isExact": true,
                                  "params": Object {},
                                  "path": "/register",
                                  "url": "/register",
                                }
                              }
                              onSubmit={[Function]}
                              openModal={[Function]}
                              persistentSubmitErrors={false}
                              pristine={true}
                              pure={true}
                              registerClusterResponse={
                                Object {
                                  "cluster": null,
                                  "error": false,
                                  "errorDetails": null,
                                  "errorMessage": "",
                                  "fulfilled": false,
                                  "pending": false,
                                  "valid": true,
                                }
                              }
                              registerField={[Function]}
                              registeredFields={
                                Object {
                                  "cluster_id": Object {
                                    "count": 31,
                                    "name": "cluster_id",
                                    "type": "Field",
                                  },
                                  "display_name": Object {
                                    "count": 31,
                                    "name": "display_name",
                                    "type": "Field",
                                  },
                                  "memory_gib": Object {
                                    "count": 31,
                                    "name": "memory_gib",
                                    "type": "Field",
                                  },
                                  "nodes_compute": Object {
                                    "count": 31,
                                    "name": "nodes_compute",
                                    "type": "Field",
                                  },
                                  "operating_system": Object {
                                    "count": 31,
                                    "name": "operating_system",
                                    "type": "Field",
                                  },
                                  "socket_num": Object {
                                    "count": 31,
                                    "name": "socket_num",
                                    "type": "Field",
                                  },
                                  "system_type": Object {
                                    "count": 31,
                                    "name": "system_type",
                                    "type": "Field",
                                  },
                                  "web_console_url": Object {
                                    "count": 31,
                                    "name": "web_console_url",
                                    "type": "Field",
                                  },
                                }
                              }
                              reset={[Function]}
                              resetForm={[Function]}
                              resetResponse={[Function]}
                              resetSection={[Function]}
                              setSubmitFailed={[Function]}
                              setSubmitSucceeded={[Function]}
                              shouldAsyncValidate={[Function]}
                              shouldError={[Function]}
                              shouldValidate={[Function]}
                              shouldWarn={[Function]}
                              startAsyncValidation={[Function]}
                              startSubmit={[Function]}
                              stopAsyncValidation={[Function]}
                              stopSubmit={[Function]}
                              submit={[Function]}
                              submitFailed={false}
                              submitSucceeded={false}
                              submitting={false}
                              syncErrors={
                                Object {
                                  "cluster_id": "Cluster ID is required.",
                                  "socket_num": "Field is required",
                                }
                              }
                              syncWarnings={Object {}}
                              touch={[Function]}
                              touchOnBlur={true}
                              touchOnChange={false}
                              unregisterField={[Function]}
                              untouch={[Function]}
                              updateSyncErrors={[Function]}
                              updateSyncWarnings={[Function]}
                              updateUnregisteredFields={false}
                              valid={false}
                              validExceptSubmit={false}
                              values={
                                Object {
                                  "cluster_id": "",
                                  "display_name": "",
                                  "memory_gib": "",
                                  "nodes_compute": "",
                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                  "socket_num": "",
                                  "system_type": "physical",
                                  "vcpu_num": "",
                                  "web_console_url": "",
                                }
                              }
                            >
                              <RegisterCluster
                                anyTouched={false}
                                array={
                                  Object {
                                    "insert": [Function],
                                    "move": [Function],
                                    "pop": [Function],
                                    "push": [Function],
                                    "remove": [Function],
                                    "removeAll": [Function],
                                    "shift": [Function],
                                    "splice": [Function],
                                    "swap": [Function],
                                    "unshift": [Function],
                                  }
                                }
                                asyncValidate={[Function]}
                                asyncValidating={false}
                                autofill={[Function]}
                                blur={[Function]}
                                change={[Function]}
                                clearAsyncError={[Function]}
                                clearFields={[Function]}
                                clearSubmit={[Function]}
                                clearSubmitErrors={[Function]}
                                closeModal={[Function]}
                                destroy={[Function]}
                                dirty={false}
                                dispatch={[Function]}
                                form="RegisterCluster"
                                handleSubmit={[Function]}
                                history={
                                  Object {
                                    "action": "POP",
                                    "block": [Function],
                                    "canGo": [Function],
                                    "createHref": [Function],
                                    "entries": Array [
                                      Object {
                                        "hash": "",
                                        "key": "testKey",
                                        "pathname": "/register",
                                        "search": "",
                                      },
                                    ],
                                    "go": [Function],
                                    "goBack": [Function],
                                    "goForward": [Function],
                                    "index": 0,
                                    "length": 1,
                                    "listen": [Function],
                                    "location": Object {
                                      "hash": "",
                                      "key": "testKey",
                                      "pathname": "/register",
                                      "search": "",
                                    },
                                    "push": [Function],
                                    "replace": [Function],
                                  }
                                }
                                initialValues={
                                  Object {
                                    "cluster_id": "",
                                    "display_name": "",
                                    "memory_gib": "",
                                    "nodes_compute": "",
                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                    "socket_num": "",
                                    "system_type": "physical",
                                    "vcpu_num": "",
                                    "web_console_url": "",
                                  }
                                }
                                initialize={[Function]}
                                initialized={true}
                                invalid={true}
                                isOpen={false}
                                location={
                                  Object {
                                    "hash": "",
                                    "key": "testKey",
                                    "pathname": "/register",
                                    "search": "",
                                  }
                                }
                                match={
                                  Object {
                                    "isExact": true,
                                    "params": Object {},
                                    "path": "/register",
                                    "url": "/register",
                                  }
                                }
                                onSubmit={[Function]}
                                openModal={[Function]}
                                pristine={true}
                                pure={true}
                                registerClusterResponse={
                                  Object {
                                    "cluster": null,
                                    "error": false,
                                    "errorDetails": null,
                                    "errorMessage": "",
                                    "fulfilled": false,
                                    "pending": false,
                                    "valid": true,
                                  }
                                }
                                reset={[Function]}
                                resetForm={[Function]}
                                resetResponse={[Function]}
                                resetSection={[Function]}
                                submit={[Function]}
                                submitFailed={false}
                                submitSucceeded={false}
                                submitting={false}
                                touch={[Function]}
                                untouch={[Function]}
                                valid={false}
                              >
                                <PageHeader>
                                  <section
                                    className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                                    widget-type="InsightsPageHeader"
                                  >
                                    <Breadcrumbs
                                      path={
                                        Array [
                                          Object {
                                            "label": "Clusters",
                                          },
                                          Object {
                                            "label": "Cluster registration",
                                          },
                                        ]
                                      }
                                    >
                                      <Breadcrumb>
                                        <nav
                                          aria-label="Breadcrumb"
                                          className="pf-c-breadcrumb"
                                          data-ouia-component-id={38040}
                                          data-ouia-component-type="PF4/Breadcrumb"
                                          data-ouia-safe={true}
                                        >
                                          <ol
                                            className="pf-c-breadcrumb__list"
                                          >
                                            <LinkContainer
                                              activeClassName="active"
                                              exact={false}
                                              key=".$Clusters"
                                              replace={false}
                                              showDivider={false}
                                              strict={false}
                                              to=""
                                            >
                                              <Route
                                                exact={false}
                                                path=""
                                                strict={false}
                                              >
                                                <BreadcrumbItem
                                                  className="active"
                                                  href="/"
                                                  onClick={[Function]}
                                                  showDivider={false}
                                                  style={Object {}}
                                                  to="/openshift"
                                                >
                                                  <li
                                                    className="pf-c-breadcrumb__item active"
                                                    href="/"
                                                    onClick={[Function]}
                                                    style={Object {}}
                                                  >
                                                    <a
                                                      className="pf-c-breadcrumb__link"
                                                      href="/openshift"
                                                      target={null}
                                                    >
                                                      Clusters
                                                    </a>
                                                  </li>
                                                </BreadcrumbItem>
                                              </Route>
                                            </LinkContainer>
                                            <BreadcrumbItem
                                              isActive={true}
                                              key=".$Cluster registration"
                                              showDivider={true}
                                            >
                                              <li
                                                className="pf-c-breadcrumb__item"
                                              >
                                                <span
                                                  className="pf-c-breadcrumb__item-divider"
                                                >
                                                  <AngleRightIcon
                                                    color="currentColor"
                                                    noVerticalAlign={false}
                                                    size="sm"
                                                  >
                                                    <svg
                                                      aria-hidden={true}
                                                      aria-labelledby={null}
                                                      fill="currentColor"
                                                      height="1em"
                                                      role="img"
                                                      style={
                                                        Object {
                                                          "verticalAlign": "-0.125em",
                                                        }
                                                      }
                                                      viewBox="0 0 256 512"
                                                      width="1em"
                                                    >
                                                      <path
                                                        d="M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z"
                                                        transform=""
                                                      />
                                                    </svg>
                                                  </AngleRightIcon>
                                                </span>
                                                Cluster registration
                                              </li>
                                            </BreadcrumbItem>
                                          </ol>
                                        </nav>
                                      </Breadcrumb>
                                    </Breadcrumbs>
                                    <PageHeaderTitle
                                      title="Cluster registration"
                                    >
                                      <Title
                                        className=""
                                        headingLevel="h1"
                                        size="2xl"
                                        widget-type="InsightsPageHeaderTitle"
                                      >
                                        <h1
                                          className="pf-c-title pf-m-2xl"
                                          widget-type="InsightsPageHeaderTitle"
                                        >
                                           
                                          Cluster registration
                                           
                                        </h1>
                                      </Title>
                                    </PageHeaderTitle>
                                  </section>
                                </PageHeader>
                                <PageSection>
                                  <section
                                    className="pf-c-page__main-section"
                                  >
                                    <Card
                                      id="register-cluster"
                                    >
                                      <article
                                        className="pf-c-card"
                                        id="register-cluster"
                                      >
                                        <CardBody>
                                          <div
                                            className="pf-c-card__body"
                                          >
                                            <Grid>
                                              <div
                                                className="pf-l-grid"
                                              >
                                                <GridItem
                                                  span={8}
                                                >
                                                  <div
                                                    className="pf-l-grid__item pf-m-8-col"
                                                  >
                                                    <Form
                                                      onSubmit={[Function]}
                                                    >
                                                      <form
                                                        className="pf-c-form"
                                                        noValidate={true}
                                                        onSubmit={[Function]}
                                                      >
                                                        <Field
                                                          component={[Function]}
                                                          disabled={false}
                                                          extendedHelpText="The cluster ID may be found on the About page of the cluster web console"
                                                          isRequired={true}
                                                          label="Cluster ID"
                                                          name="cluster_id"
                                                          type="text"
                                                          validate={[Function]}
                                                        >
                                                          <Connect(ConnectedField)
                                                            _reduxForm={
                                                              Object {
                                                                "anyTouched": false,
                                                                "array": Object {
                                                                  "insert": [Function],
                                                                  "move": [Function],
                                                                  "pop": [Function],
                                                                  "push": [Function],
                                                                  "remove": [Function],
                                                                  "removeAll": [Function],
                                                                  "shift": [Function],
                                                                  "splice": [Function],
                                                                  "swap": [Function],
                                                                  "unshift": [Function],
                                                                },
                                                                "arrayInsert": [Function],
                                                                "arrayMove": [Function],
                                                                "arrayPop": [Function],
                                                                "arrayPush": [Function],
                                                                "arrayRemove": [Function],
                                                                "arrayRemoveAll": [Function],
                                                                "arrayShift": [Function],
                                                                "arraySplice": [Function],
                                                                "arraySwap": [Function],
                                                                "arrayUnshift": [Function],
                                                                "asyncErrors": undefined,
                                                                "asyncValidate": [Function],
                                                                "asyncValidating": false,
                                                                "autofill": [Function],
                                                                "blur": [Function],
                                                                "change": [Function],
                                                                "clearAsyncError": [Function],
                                                                "clearFields": [Function],
                                                                "clearSubmit": [Function],
                                                                "clearSubmitErrors": [Function],
                                                                "closeModal": [Function],
                                                                "destroy": [Function],
                                                                "destroyOnUnmount": true,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "enableReinitialize": false,
                                                                "error": undefined,
                                                                "focus": [Function],
                                                                "forceUnregisterOnUnmount": false,
                                                                "form": "RegisterCluster",
                                                                "getFormState": [Function],
                                                                "getValues": [Function],
                                                                "history": Object {
                                                                  "action": "POP",
                                                                  "block": [Function],
                                                                  "canGo": [Function],
                                                                  "createHref": [Function],
                                                                  "entries": Array [
                                                                    Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                  ],
                                                                  "go": [Function],
                                                                  "goBack": [Function],
                                                                  "goForward": [Function],
                                                                  "index": 0,
                                                                  "length": 1,
                                                                  "listen": [Function],
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "push": [Function],
                                                                  "replace": [Function],
                                                                },
                                                                "initialValues": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "initialize": [Function],
                                                                "initialized": false,
                                                                "invalid": false,
                                                                "isOpen": false,
                                                                "keepDirtyOnReinitialize": false,
                                                                "location": Object {
                                                                  "hash": "",
                                                                  "key": "testKey",
                                                                  "pathname": "/register",
                                                                  "search": "",
                                                                },
                                                                "match": Object {
                                                                  "isExact": true,
                                                                  "params": Object {},
                                                                  "path": "/register",
                                                                  "url": "/register",
                                                                },
                                                                "onSubmit": [Function],
                                                                "openModal": [Function],
                                                                "persistentSubmitErrors": false,
                                                                "pristine": true,
                                                                "pure": true,
                                                                "register": [Function],
                                                                "registerClusterResponse": Object {
                                                                  "cluster": null,
                                                                  "error": false,
                                                                  "errorDetails": null,
                                                                  "errorMessage": "",
                                                                  "fulfilled": false,
                                                                  "pending": false,
                                                                  "valid": true,
                                                                },
                                                                "registerField": [Function],
                                                                "registerInnerOnSubmit": [Function],
                                                                "registeredFields": undefined,
                                                                "reset": [Function],
                                                                "resetForm": [Function],
                                                                "resetResponse": [Function],
                                                                "resetSection": [Function],
                                                                "sectionPrefix": undefined,
                                                                "setSubmitFailed": [Function],
                                                                "setSubmitSucceeded": [Function],
                                                                "shouldAsyncValidate": [Function],
                                                                "shouldError": [Function],
                                                                "shouldValidate": [Function],
                                                                "shouldWarn": [Function],
                                                                "startAsyncValidation": [Function],
                                                                "startSubmit": [Function],
                                                                "staticContext": undefined,
                                                                "stopAsyncValidation": [Function],
                                                                "stopSubmit": [Function],
                                                                "submit": [Function],
                                                                "submitFailed": false,
                                                                "submitSucceeded": false,
                                                                "submitting": false,
                                                                "syncErrors": Object {},
                                                                "syncWarnings": Object {},
                                                                "touch": [Function],
                                                                "touchOnBlur": true,
                                                                "touchOnChange": false,
                                                                "triggerSubmit": undefined,
                                                                "unregister": [Function],
                                                                "unregisterField": [Function],
                                                                "untouch": [Function],
                                                                "updateSyncErrors": [Function],
                                                                "updateSyncWarnings": [Function],
                                                                "updateUnregisteredFields": false,
                                                                "valid": true,
                                                                "validExceptSubmit": true,
                                                                "values": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            component={[Function]}
                                                            disabled={false}
                                                            extendedHelpText="The cluster ID may be found on the About page of the cluster web console"
                                                            isRequired={true}
                                                            label="Cluster ID"
                                                            name="cluster_id"
                                                            normalize={[Function]}
                                                            type="text"
                                                            validate={[Function]}
                                                          >
                                                            <ConnectedField
                                                              _reduxForm={
                                                                Object {
                                                                  "anyTouched": false,
                                                                  "array": Object {
                                                                    "insert": [Function],
                                                                    "move": [Function],
                                                                    "pop": [Function],
                                                                    "push": [Function],
                                                                    "remove": [Function],
                                                                    "removeAll": [Function],
                                                                    "shift": [Function],
                                                                    "splice": [Function],
                                                                    "swap": [Function],
                                                                    "unshift": [Function],
                                                                  },
                                                                  "arrayInsert": [Function],
                                                                  "arrayMove": [Function],
                                                                  "arrayPop": [Function],
                                                                  "arrayPush": [Function],
                                                                  "arrayRemove": [Function],
                                                                  "arrayRemoveAll": [Function],
                                                                  "arrayShift": [Function],
                                                                  "arraySplice": [Function],
                                                                  "arraySwap": [Function],
                                                                  "arrayUnshift": [Function],
                                                                  "asyncErrors": undefined,
                                                                  "asyncValidate": [Function],
                                                                  "asyncValidating": false,
                                                                  "autofill": [Function],
                                                                  "blur": [Function],
                                                                  "change": [Function],
                                                                  "clearAsyncError": [Function],
                                                                  "clearFields": [Function],
                                                                  "clearSubmit": [Function],
                                                                  "clearSubmitErrors": [Function],
                                                                  "closeModal": [Function],
                                                                  "destroy": [Function],
                                                                  "destroyOnUnmount": true,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "enableReinitialize": false,
                                                                  "error": undefined,
                                                                  "focus": [Function],
                                                                  "forceUnregisterOnUnmount": false,
                                                                  "form": "RegisterCluster",
                                                                  "getFormState": [Function],
                                                                  "getValues": [Function],
                                                                  "history": Object {
                                                                    "action": "POP",
                                                                    "block": [Function],
                                                                    "canGo": [Function],
                                                                    "createHref": [Function],
                                                                    "entries": Array [
                                                                      Object {
                                                                        "hash": "",
                                                                        "key": "testKey",
                                                                        "pathname": "/register",
                                                                        "search": "",
                                                                      },
                                                                    ],
                                                                    "go": [Function],
                                                                    "goBack": [Function],
                                                                    "goForward": [Function],
                                                                    "index": 0,
                                                                    "length": 1,
                                                                    "listen": [Function],
                                                                    "location": Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                    "push": [Function],
                                                                    "replace": [Function],
                                                                  },
                                                                  "initialValues": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "initialize": [Function],
                                                                  "initialized": false,
                                                                  "invalid": false,
                                                                  "isOpen": false,
                                                                  "keepDirtyOnReinitialize": false,
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "match": Object {
                                                                    "isExact": true,
                                                                    "params": Object {},
                                                                    "path": "/register",
                                                                    "url": "/register",
                                                                  },
                                                                  "onSubmit": [Function],
                                                                  "openModal": [Function],
                                                                  "persistentSubmitErrors": false,
                                                                  "pristine": true,
                                                                  "pure": true,
                                                                  "register": [Function],
                                                                  "registerClusterResponse": Object {
                                                                    "cluster": null,
                                                                    "error": false,
                                                                    "errorDetails": null,
                                                                    "errorMessage": "",
                                                                    "fulfilled": false,
                                                                    "pending": false,
                                                                    "valid": true,
                                                                  },
                                                                  "registerField": [Function],
                                                                  "registerInnerOnSubmit": [Function],
                                                                  "registeredFields": undefined,
                                                                  "reset": [Function],
                                                                  "resetForm": [Function],
                                                                  "resetResponse": [Function],
                                                                  "resetSection": [Function],
                                                                  "sectionPrefix": undefined,
                                                                  "setSubmitFailed": [Function],
                                                                  "setSubmitSucceeded": [Function],
                                                                  "shouldAsyncValidate": [Function],
                                                                  "shouldError": [Function],
                                                                  "shouldValidate": [Function],
                                                                  "shouldWarn": [Function],
                                                                  "startAsyncValidation": [Function],
                                                                  "startSubmit": [Function],
                                                                  "staticContext": undefined,
                                                                  "stopAsyncValidation": [Function],
                                                                  "stopSubmit": [Function],
                                                                  "submit": [Function],
                                                                  "submitFailed": false,
                                                                  "submitSucceeded": false,
                                                                  "submitting": false,
                                                                  "syncErrors": Object {},
                                                                  "syncWarnings": Object {},
                                                                  "touch": [Function],
                                                                  "touchOnBlur": true,
                                                                  "touchOnChange": false,
                                                                  "triggerSubmit": undefined,
                                                                  "unregister": [Function],
                                                                  "unregisterField": [Function],
                                                                  "untouch": [Function],
                                                                  "updateSyncErrors": [Function],
                                                                  "updateSyncWarnings": [Function],
                                                                  "updateUnregisteredFields": false,
                                                                  "valid": true,
                                                                  "validExceptSubmit": true,
                                                                  "values": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              asyncValidating={false}
                                                              component={[Function]}
                                                              dirty={false}
                                                              disabled={false}
                                                              dispatch={[Function]}
                                                              extendedHelpText="The cluster ID may be found on the About page of the cluster web console"
                                                              initial=""
                                                              isRequired={true}
                                                              label="Cluster ID"
                                                              name="cluster_id"
                                                              normalize={[Function]}
                                                              pristine={true}
                                                              syncError="Cluster ID is required."
                                                              type="text"
                                                              validate={[Function]}
                                                              value=""
                                                            >
                                                              <ReduxVerticalFormGroup
                                                                disabled={false}
                                                                extendedHelpText="The cluster ID may be found on the About page of the cluster web console"
                                                                helpText=""
                                                                input={
                                                                  Object {
                                                                    "name": "cluster_id",
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onDragStart": [Function],
                                                                    "onDrop": [Function],
                                                                    "onFocus": [Function],
                                                                    "value": "",
                                                                  }
                                                                }
                                                                isRequired={true}
                                                                label="Cluster ID"
                                                                meta={
                                                                  Object {
                                                                    "active": false,
                                                                    "asyncValidating": false,
                                                                    "autofilled": false,
                                                                    "dirty": false,
                                                                    "dispatch": [Function],
                                                                    "error": "Cluster ID is required.",
                                                                    "form": "RegisterCluster",
                                                                    "initial": "",
                                                                    "invalid": true,
                                                                    "pristine": true,
                                                                    "submitFailed": false,
                                                                    "submitting": false,
                                                                    "touched": false,
                                                                    "valid": false,
                                                                    "visited": false,
                                                                    "warning": undefined,
                                                                  }
                                                                }
                                                                showHelpTextOnError={true}
                                                                type="text"
                                                              >
                                                                <FormGroup
                                                                  fieldId="cluster_id"
                                                                  helperText=""
                                                                  helperTextInvalid=""
                                                                  isRequired={true}
                                                                  label="Cluster ID"
                                                                  labelIcon={
                                                                    <PopoverHint
                                                                      hint="The cluster ID may be found on the About page of the cluster web console"
                                                                    />
                                                                  }
                                                                  validated="default"
                                                                >
                                                                  <div
                                                                    className="pf-c-form__group"
                                                                  >
                                                                    <div
                                                                      className="pf-c-form__group-label"
                                                                    >
                                                                      <label
                                                                        className="pf-c-form__label"
                                                                        htmlFor="cluster_id"
                                                                      >
                                                                        <span
                                                                          className="pf-c-form__label-text"
                                                                        >
                                                                          Cluster ID
                                                                        </span>
                                                                        <span
                                                                          aria-hidden="true"
                                                                          className="pf-c-form__label-required"
                                                                        >
                                                                           
                                                                          *
                                                                        </span>
                                                                      </label>
                                                                       
                                                                      <PopoverHint
                                                                        hint="The cluster ID may be found on the About page of the cluster web console"
                                                                      >
                                                                        <Popover
                                                                          appendTo={[Function]}
                                                                          aria-label="help"
                                                                          bodyContent="The cluster ID may be found on the About page of the cluster web console"
                                                                          boundary="window"
                                                                          className=""
                                                                          closeBtnAriaLabel="Close"
                                                                          distance={25}
                                                                          enableFlip={true}
                                                                          flipBehavior={
                                                                            Array [
                                                                              "top",
                                                                              "right",
                                                                              "bottom",
                                                                              "left",
                                                                              "top",
                                                                              "right",
                                                                              "bottom",
                                                                            ]
                                                                          }
                                                                          footerContent={null}
                                                                          headerContent={null}
                                                                          hideOnOutsideClick={true}
                                                                          isVisible={null}
                                                                          maxWidth="calc(1rem + 1rem + 18.75rem)"
                                                                          onHidden={[Function]}
                                                                          onHide={[Function]}
                                                                          onMount={[Function]}
                                                                          onShow={[Function]}
                                                                          onShown={[Function]}
                                                                          position="top"
                                                                          shouldClose={[Function]}
                                                                          tippyProps={Object {}}
                                                                          zIndex={9999}
                                                                        >
                                                                          <PopoverBase
                                                                            appendTo={[Function]}
                                                                            arrow={true}
                                                                            boundary="window"
                                                                            content={<React.Fragment />}
                                                                            distance={25}
                                                                            flip={true}
                                                                            flipBehavior={
                                                                              Array [
                                                                                "top",
                                                                                "right",
                                                                                "bottom",
                                                                                "left",
                                                                                "top",
                                                                                "right",
                                                                                "bottom",
                                                                              ]
                                                                            }
                                                                            hideOnClick={true}
                                                                            interactive={true}
                                                                            interactiveBorder={0}
                                                                            isVisible={null}
                                                                            lazy={true}
                                                                            maxWidth="calc(1rem + 1rem + 18.75rem)"
                                                                            onCreate={[Function]}
                                                                            onHidden={[Function]}
                                                                            onHide={[Function]}
                                                                            onMount={[Function]}
                                                                            onShow={[Function]}
                                                                            onShown={[Function]}
                                                                            placement="top"
                                                                            popperOptions={
                                                                              Object {
                                                                                "modifiers": Object {
                                                                                  "hide": Object {
                                                                                    "enabled": true,
                                                                                  },
                                                                                  "preventOverflow": Object {
                                                                                    "enabled": true,
                                                                                  },
                                                                                },
                                                                              }
                                                                            }
                                                                            theme="pf-popover"
                                                                            trigger="click"
                                                                            zIndex={9999}
                                                                          >
                                                                            <span>
                                                                              <OutlinedQuestionCircleIcon
                                                                                color="currentColor"
                                                                                noVerticalAlign={false}
                                                                                size="sm"
                                                                              >
                                                                                <svg
                                                                                  aria-hidden={true}
                                                                                  aria-labelledby={null}
                                                                                  fill="currentColor"
                                                                                  height="1em"
                                                                                  role="img"
                                                                                  style={
                                                                                    Object {
                                                                                      "verticalAlign": "-0.125em",
                                                                                    }
                                                                                  }
                                                                                  viewBox="0 0 512 512"
                                                                                  width="1em"
                                                                                >
                                                                                  <path
                                                                                    d="M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z"
                                                                                    transform=""
                                                                                  />
                                                                                </svg>
                                                                              </OutlinedQuestionCircleIcon>
                                                                            </span>
                                                                            <Portal
                                                                              containerInfo={<div />}
                                                                            />
                                                                          </PopoverBase>
                                                                        </Popover>
                                                                      </PopoverHint>
                                                                    </div>
                                                                    <div
                                                                      className="pf-c-form__group-control"
                                                                    >
                                                                      <ForwardRef
                                                                        id="cluster_id"
                                                                        isDisabled={false}
                                                                        isRequired={true}
                                                                        name="cluster_id"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onDrop={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        validated="default"
                                                                        value=""
                                                                      >
                                                                        <TextInputBase
                                                                          aria-label={null}
                                                                          className=""
                                                                          id="cluster_id"
                                                                          innerRef={null}
                                                                          isDisabled={false}
                                                                          isReadOnly={false}
                                                                          isRequired={true}
                                                                          name="cluster_id"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onDragStart={[Function]}
                                                                          onDrop={[Function]}
                                                                          onFocus={[Function]}
                                                                          type="text"
                                                                          validated="default"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            aria-label={null}
                                                                            className="pf-c-form-control"
                                                                            disabled={false}
                                                                            id="cluster_id"
                                                                            name="cluster_id"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onDragStart={[Function]}
                                                                            onDrop={[Function]}
                                                                            onFocus={[Function]}
                                                                            readOnly={false}
                                                                            required={true}
                                                                            type="text"
                                                                            value=""
                                                                          />
                                                                        </TextInputBase>
                                                                      </ForwardRef>
                                                                    </div>
                                                                  </div>
                                                                </FormGroup>
                                                              </ReduxVerticalFormGroup>
                                                            </ConnectedField>
                                                          </Connect(ConnectedField)>
                                                        </Field>
                                                        <Field
                                                          component={[Function]}
                                                          disabled={false}
                                                          label="Display name"
                                                          name="display_name"
                                                          type="text"
                                                          validate={[Function]}
                                                        >
                                                          <Connect(ConnectedField)
                                                            _reduxForm={
                                                              Object {
                                                                "anyTouched": false,
                                                                "array": Object {
                                                                  "insert": [Function],
                                                                  "move": [Function],
                                                                  "pop": [Function],
                                                                  "push": [Function],
                                                                  "remove": [Function],
                                                                  "removeAll": [Function],
                                                                  "shift": [Function],
                                                                  "splice": [Function],
                                                                  "swap": [Function],
                                                                  "unshift": [Function],
                                                                },
                                                                "arrayInsert": [Function],
                                                                "arrayMove": [Function],
                                                                "arrayPop": [Function],
                                                                "arrayPush": [Function],
                                                                "arrayRemove": [Function],
                                                                "arrayRemoveAll": [Function],
                                                                "arrayShift": [Function],
                                                                "arraySplice": [Function],
                                                                "arraySwap": [Function],
                                                                "arrayUnshift": [Function],
                                                                "asyncErrors": undefined,
                                                                "asyncValidate": [Function],
                                                                "asyncValidating": false,
                                                                "autofill": [Function],
                                                                "blur": [Function],
                                                                "change": [Function],
                                                                "clearAsyncError": [Function],
                                                                "clearFields": [Function],
                                                                "clearSubmit": [Function],
                                                                "clearSubmitErrors": [Function],
                                                                "closeModal": [Function],
                                                                "destroy": [Function],
                                                                "destroyOnUnmount": true,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "enableReinitialize": false,
                                                                "error": undefined,
                                                                "focus": [Function],
                                                                "forceUnregisterOnUnmount": false,
                                                                "form": "RegisterCluster",
                                                                "getFormState": [Function],
                                                                "getValues": [Function],
                                                                "history": Object {
                                                                  "action": "POP",
                                                                  "block": [Function],
                                                                  "canGo": [Function],
                                                                  "createHref": [Function],
                                                                  "entries": Array [
                                                                    Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                  ],
                                                                  "go": [Function],
                                                                  "goBack": [Function],
                                                                  "goForward": [Function],
                                                                  "index": 0,
                                                                  "length": 1,
                                                                  "listen": [Function],
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "push": [Function],
                                                                  "replace": [Function],
                                                                },
                                                                "initialValues": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "initialize": [Function],
                                                                "initialized": false,
                                                                "invalid": false,
                                                                "isOpen": false,
                                                                "keepDirtyOnReinitialize": false,
                                                                "location": Object {
                                                                  "hash": "",
                                                                  "key": "testKey",
                                                                  "pathname": "/register",
                                                                  "search": "",
                                                                },
                                                                "match": Object {
                                                                  "isExact": true,
                                                                  "params": Object {},
                                                                  "path": "/register",
                                                                  "url": "/register",
                                                                },
                                                                "onSubmit": [Function],
                                                                "openModal": [Function],
                                                                "persistentSubmitErrors": false,
                                                                "pristine": true,
                                                                "pure": true,
                                                                "register": [Function],
                                                                "registerClusterResponse": Object {
                                                                  "cluster": null,
                                                                  "error": false,
                                                                  "errorDetails": null,
                                                                  "errorMessage": "",
                                                                  "fulfilled": false,
                                                                  "pending": false,
                                                                  "valid": true,
                                                                },
                                                                "registerField": [Function],
                                                                "registerInnerOnSubmit": [Function],
                                                                "registeredFields": undefined,
                                                                "reset": [Function],
                                                                "resetForm": [Function],
                                                                "resetResponse": [Function],
                                                                "resetSection": [Function],
                                                                "sectionPrefix": undefined,
                                                                "setSubmitFailed": [Function],
                                                                "setSubmitSucceeded": [Function],
                                                                "shouldAsyncValidate": [Function],
                                                                "shouldError": [Function],
                                                                "shouldValidate": [Function],
                                                                "shouldWarn": [Function],
                                                                "startAsyncValidation": [Function],
                                                                "startSubmit": [Function],
                                                                "staticContext": undefined,
                                                                "stopAsyncValidation": [Function],
                                                                "stopSubmit": [Function],
                                                                "submit": [Function],
                                                                "submitFailed": false,
                                                                "submitSucceeded": false,
                                                                "submitting": false,
                                                                "syncErrors": Object {},
                                                                "syncWarnings": Object {},
                                                                "touch": [Function],
                                                                "touchOnBlur": true,
                                                                "touchOnChange": false,
                                                                "triggerSubmit": undefined,
                                                                "unregister": [Function],
                                                                "unregisterField": [Function],
                                                                "untouch": [Function],
                                                                "updateSyncErrors": [Function],
                                                                "updateSyncWarnings": [Function],
                                                                "updateUnregisteredFields": false,
                                                                "valid": true,
                                                                "validExceptSubmit": true,
                                                                "values": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            component={[Function]}
                                                            disabled={false}
                                                            label="Display name"
                                                            name="display_name"
                                                            normalize={[Function]}
                                                            type="text"
                                                            validate={[Function]}
                                                          >
                                                            <ConnectedField
                                                              _reduxForm={
                                                                Object {
                                                                  "anyTouched": false,
                                                                  "array": Object {
                                                                    "insert": [Function],
                                                                    "move": [Function],
                                                                    "pop": [Function],
                                                                    "push": [Function],
                                                                    "remove": [Function],
                                                                    "removeAll": [Function],
                                                                    "shift": [Function],
                                                                    "splice": [Function],
                                                                    "swap": [Function],
                                                                    "unshift": [Function],
                                                                  },
                                                                  "arrayInsert": [Function],
                                                                  "arrayMove": [Function],
                                                                  "arrayPop": [Function],
                                                                  "arrayPush": [Function],
                                                                  "arrayRemove": [Function],
                                                                  "arrayRemoveAll": [Function],
                                                                  "arrayShift": [Function],
                                                                  "arraySplice": [Function],
                                                                  "arraySwap": [Function],
                                                                  "arrayUnshift": [Function],
                                                                  "asyncErrors": undefined,
                                                                  "asyncValidate": [Function],
                                                                  "asyncValidating": false,
                                                                  "autofill": [Function],
                                                                  "blur": [Function],
                                                                  "change": [Function],
                                                                  "clearAsyncError": [Function],
                                                                  "clearFields": [Function],
                                                                  "clearSubmit": [Function],
                                                                  "clearSubmitErrors": [Function],
                                                                  "closeModal": [Function],
                                                                  "destroy": [Function],
                                                                  "destroyOnUnmount": true,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "enableReinitialize": false,
                                                                  "error": undefined,
                                                                  "focus": [Function],
                                                                  "forceUnregisterOnUnmount": false,
                                                                  "form": "RegisterCluster",
                                                                  "getFormState": [Function],
                                                                  "getValues": [Function],
                                                                  "history": Object {
                                                                    "action": "POP",
                                                                    "block": [Function],
                                                                    "canGo": [Function],
                                                                    "createHref": [Function],
                                                                    "entries": Array [
                                                                      Object {
                                                                        "hash": "",
                                                                        "key": "testKey",
                                                                        "pathname": "/register",
                                                                        "search": "",
                                                                      },
                                                                    ],
                                                                    "go": [Function],
                                                                    "goBack": [Function],
                                                                    "goForward": [Function],
                                                                    "index": 0,
                                                                    "length": 1,
                                                                    "listen": [Function],
                                                                    "location": Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                    "push": [Function],
                                                                    "replace": [Function],
                                                                  },
                                                                  "initialValues": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "initialize": [Function],
                                                                  "initialized": false,
                                                                  "invalid": false,
                                                                  "isOpen": false,
                                                                  "keepDirtyOnReinitialize": false,
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "match": Object {
                                                                    "isExact": true,
                                                                    "params": Object {},
                                                                    "path": "/register",
                                                                    "url": "/register",
                                                                  },
                                                                  "onSubmit": [Function],
                                                                  "openModal": [Function],
                                                                  "persistentSubmitErrors": false,
                                                                  "pristine": true,
                                                                  "pure": true,
                                                                  "register": [Function],
                                                                  "registerClusterResponse": Object {
                                                                    "cluster": null,
                                                                    "error": false,
                                                                    "errorDetails": null,
                                                                    "errorMessage": "",
                                                                    "fulfilled": false,
                                                                    "pending": false,
                                                                    "valid": true,
                                                                  },
                                                                  "registerField": [Function],
                                                                  "registerInnerOnSubmit": [Function],
                                                                  "registeredFields": undefined,
                                                                  "reset": [Function],
                                                                  "resetForm": [Function],
                                                                  "resetResponse": [Function],
                                                                  "resetSection": [Function],
                                                                  "sectionPrefix": undefined,
                                                                  "setSubmitFailed": [Function],
                                                                  "setSubmitSucceeded": [Function],
                                                                  "shouldAsyncValidate": [Function],
                                                                  "shouldError": [Function],
                                                                  "shouldValidate": [Function],
                                                                  "shouldWarn": [Function],
                                                                  "startAsyncValidation": [Function],
                                                                  "startSubmit": [Function],
                                                                  "staticContext": undefined,
                                                                  "stopAsyncValidation": [Function],
                                                                  "stopSubmit": [Function],
                                                                  "submit": [Function],
                                                                  "submitFailed": false,
                                                                  "submitSucceeded": false,
                                                                  "submitting": false,
                                                                  "syncErrors": Object {},
                                                                  "syncWarnings": Object {},
                                                                  "touch": [Function],
                                                                  "touchOnBlur": true,
                                                                  "touchOnChange": false,
                                                                  "triggerSubmit": undefined,
                                                                  "unregister": [Function],
                                                                  "unregisterField": [Function],
                                                                  "untouch": [Function],
                                                                  "updateSyncErrors": [Function],
                                                                  "updateSyncWarnings": [Function],
                                                                  "updateUnregisteredFields": false,
                                                                  "valid": true,
                                                                  "validExceptSubmit": true,
                                                                  "values": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              asyncValidating={false}
                                                              component={[Function]}
                                                              dirty={false}
                                                              disabled={false}
                                                              dispatch={[Function]}
                                                              initial=""
                                                              label="Display name"
                                                              name="display_name"
                                                              normalize={[Function]}
                                                              pristine={true}
                                                              type="text"
                                                              validate={[Function]}
                                                              value=""
                                                            >
                                                              <ReduxVerticalFormGroup
                                                                disabled={false}
                                                                helpText=""
                                                                input={
                                                                  Object {
                                                                    "name": "display_name",
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onDragStart": [Function],
                                                                    "onDrop": [Function],
                                                                    "onFocus": [Function],
                                                                    "value": "",
                                                                  }
                                                                }
                                                                isRequired={false}
                                                                label="Display name"
                                                                meta={
                                                                  Object {
                                                                    "active": false,
                                                                    "asyncValidating": false,
                                                                    "autofilled": false,
                                                                    "dirty": false,
                                                                    "dispatch": [Function],
                                                                    "error": undefined,
                                                                    "form": "RegisterCluster",
                                                                    "initial": "",
                                                                    "invalid": false,
                                                                    "pristine": true,
                                                                    "submitFailed": false,
                                                                    "submitting": false,
                                                                    "touched": false,
                                                                    "valid": true,
                                                                    "visited": false,
                                                                    "warning": undefined,
                                                                  }
                                                                }
                                                                showHelpTextOnError={true}
                                                                type="text"
                                                              >
                                                                <FormGroup
                                                                  fieldId="display_name"
                                                                  helperText=""
                                                                  helperTextInvalid=""
                                                                  isRequired={false}
                                                                  label="Display name"
                                                                  validated="default"
                                                                >
                                                                  <div
                                                                    className="pf-c-form__group"
                                                                  >
                                                                    <div
                                                                      className="pf-c-form__group-label"
                                                                    >
                                                                      <label
                                                                        className="pf-c-form__label"
                                                                        htmlFor="display_name"
                                                                      >
                                                                        <span
                                                                          className="pf-c-form__label-text"
                                                                        >
                                                                          Display name
                                                                        </span>
                                                                      </label>
                                                                       
                                                                    </div>
                                                                    <div
                                                                      className="pf-c-form__group-control"
                                                                    >
                                                                      <ForwardRef
                                                                        id="display_name"
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        name="display_name"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onDrop={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        validated="default"
                                                                        value=""
                                                                      >
                                                                        <TextInputBase
                                                                          aria-label={null}
                                                                          className=""
                                                                          id="display_name"
                                                                          innerRef={null}
                                                                          isDisabled={false}
                                                                          isReadOnly={false}
                                                                          isRequired={false}
                                                                          name="display_name"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onDragStart={[Function]}
                                                                          onDrop={[Function]}
                                                                          onFocus={[Function]}
                                                                          type="text"
                                                                          validated="default"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            aria-label={null}
                                                                            className="pf-c-form-control"
                                                                            disabled={false}
                                                                            id="display_name"
                                                                            name="display_name"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onDragStart={[Function]}
                                                                            onDrop={[Function]}
                                                                            onFocus={[Function]}
                                                                            readOnly={false}
                                                                            required={false}
                                                                            type="text"
                                                                            value=""
                                                                          />
                                                                        </TextInputBase>
                                                                      </ForwardRef>
                                                                    </div>
                                                                  </div>
                                                                </FormGroup>
                                                              </ReduxVerticalFormGroup>
                                                            </ConnectedField>
                                                          </Connect(ConnectedField)>
                                                        </Field>
                                                        <Field
                                                          component={[Function]}
                                                          disabled={false}
                                                          label="Web console URL"
                                                          name="web_console_url"
                                                          type="text"
                                                          validate={[Function]}
                                                        >
                                                          <Connect(ConnectedField)
                                                            _reduxForm={
                                                              Object {
                                                                "anyTouched": false,
                                                                "array": Object {
                                                                  "insert": [Function],
                                                                  "move": [Function],
                                                                  "pop": [Function],
                                                                  "push": [Function],
                                                                  "remove": [Function],
                                                                  "removeAll": [Function],
                                                                  "shift": [Function],
                                                                  "splice": [Function],
                                                                  "swap": [Function],
                                                                  "unshift": [Function],
                                                                },
                                                                "arrayInsert": [Function],
                                                                "arrayMove": [Function],
                                                                "arrayPop": [Function],
                                                                "arrayPush": [Function],
                                                                "arrayRemove": [Function],
                                                                "arrayRemoveAll": [Function],
                                                                "arrayShift": [Function],
                                                                "arraySplice": [Function],
                                                                "arraySwap": [Function],
                                                                "arrayUnshift": [Function],
                                                                "asyncErrors": undefined,
                                                                "asyncValidate": [Function],
                                                                "asyncValidating": false,
                                                                "autofill": [Function],
                                                                "blur": [Function],
                                                                "change": [Function],
                                                                "clearAsyncError": [Function],
                                                                "clearFields": [Function],
                                                                "clearSubmit": [Function],
                                                                "clearSubmitErrors": [Function],
                                                                "closeModal": [Function],
                                                                "destroy": [Function],
                                                                "destroyOnUnmount": true,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "enableReinitialize": false,
                                                                "error": undefined,
                                                                "focus": [Function],
                                                                "forceUnregisterOnUnmount": false,
                                                                "form": "RegisterCluster",
                                                                "getFormState": [Function],
                                                                "getValues": [Function],
                                                                "history": Object {
                                                                  "action": "POP",
                                                                  "block": [Function],
                                                                  "canGo": [Function],
                                                                  "createHref": [Function],
                                                                  "entries": Array [
                                                                    Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                  ],
                                                                  "go": [Function],
                                                                  "goBack": [Function],
                                                                  "goForward": [Function],
                                                                  "index": 0,
                                                                  "length": 1,
                                                                  "listen": [Function],
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "push": [Function],
                                                                  "replace": [Function],
                                                                },
                                                                "initialValues": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "initialize": [Function],
                                                                "initialized": false,
                                                                "invalid": false,
                                                                "isOpen": false,
                                                                "keepDirtyOnReinitialize": false,
                                                                "location": Object {
                                                                  "hash": "",
                                                                  "key": "testKey",
                                                                  "pathname": "/register",
                                                                  "search": "",
                                                                },
                                                                "match": Object {
                                                                  "isExact": true,
                                                                  "params": Object {},
                                                                  "path": "/register",
                                                                  "url": "/register",
                                                                },
                                                                "onSubmit": [Function],
                                                                "openModal": [Function],
                                                                "persistentSubmitErrors": false,
                                                                "pristine": true,
                                                                "pure": true,
                                                                "register": [Function],
                                                                "registerClusterResponse": Object {
                                                                  "cluster": null,
                                                                  "error": false,
                                                                  "errorDetails": null,
                                                                  "errorMessage": "",
                                                                  "fulfilled": false,
                                                                  "pending": false,
                                                                  "valid": true,
                                                                },
                                                                "registerField": [Function],
                                                                "registerInnerOnSubmit": [Function],
                                                                "registeredFields": undefined,
                                                                "reset": [Function],
                                                                "resetForm": [Function],
                                                                "resetResponse": [Function],
                                                                "resetSection": [Function],
                                                                "sectionPrefix": undefined,
                                                                "setSubmitFailed": [Function],
                                                                "setSubmitSucceeded": [Function],
                                                                "shouldAsyncValidate": [Function],
                                                                "shouldError": [Function],
                                                                "shouldValidate": [Function],
                                                                "shouldWarn": [Function],
                                                                "startAsyncValidation": [Function],
                                                                "startSubmit": [Function],
                                                                "staticContext": undefined,
                                                                "stopAsyncValidation": [Function],
                                                                "stopSubmit": [Function],
                                                                "submit": [Function],
                                                                "submitFailed": false,
                                                                "submitSucceeded": false,
                                                                "submitting": false,
                                                                "syncErrors": Object {},
                                                                "syncWarnings": Object {},
                                                                "touch": [Function],
                                                                "touchOnBlur": true,
                                                                "touchOnChange": false,
                                                                "triggerSubmit": undefined,
                                                                "unregister": [Function],
                                                                "unregisterField": [Function],
                                                                "untouch": [Function],
                                                                "updateSyncErrors": [Function],
                                                                "updateSyncWarnings": [Function],
                                                                "updateUnregisteredFields": false,
                                                                "valid": true,
                                                                "validExceptSubmit": true,
                                                                "values": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            component={[Function]}
                                                            disabled={false}
                                                            label="Web console URL"
                                                            name="web_console_url"
                                                            normalize={[Function]}
                                                            type="text"
                                                            validate={[Function]}
                                                          >
                                                            <ConnectedField
                                                              _reduxForm={
                                                                Object {
                                                                  "anyTouched": false,
                                                                  "array": Object {
                                                                    "insert": [Function],
                                                                    "move": [Function],
                                                                    "pop": [Function],
                                                                    "push": [Function],
                                                                    "remove": [Function],
                                                                    "removeAll": [Function],
                                                                    "shift": [Function],
                                                                    "splice": [Function],
                                                                    "swap": [Function],
                                                                    "unshift": [Function],
                                                                  },
                                                                  "arrayInsert": [Function],
                                                                  "arrayMove": [Function],
                                                                  "arrayPop": [Function],
                                                                  "arrayPush": [Function],
                                                                  "arrayRemove": [Function],
                                                                  "arrayRemoveAll": [Function],
                                                                  "arrayShift": [Function],
                                                                  "arraySplice": [Function],
                                                                  "arraySwap": [Function],
                                                                  "arrayUnshift": [Function],
                                                                  "asyncErrors": undefined,
                                                                  "asyncValidate": [Function],
                                                                  "asyncValidating": false,
                                                                  "autofill": [Function],
                                                                  "blur": [Function],
                                                                  "change": [Function],
                                                                  "clearAsyncError": [Function],
                                                                  "clearFields": [Function],
                                                                  "clearSubmit": [Function],
                                                                  "clearSubmitErrors": [Function],
                                                                  "closeModal": [Function],
                                                                  "destroy": [Function],
                                                                  "destroyOnUnmount": true,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "enableReinitialize": false,
                                                                  "error": undefined,
                                                                  "focus": [Function],
                                                                  "forceUnregisterOnUnmount": false,
                                                                  "form": "RegisterCluster",
                                                                  "getFormState": [Function],
                                                                  "getValues": [Function],
                                                                  "history": Object {
                                                                    "action": "POP",
                                                                    "block": [Function],
                                                                    "canGo": [Function],
                                                                    "createHref": [Function],
                                                                    "entries": Array [
                                                                      Object {
                                                                        "hash": "",
                                                                        "key": "testKey",
                                                                        "pathname": "/register",
                                                                        "search": "",
                                                                      },
                                                                    ],
                                                                    "go": [Function],
                                                                    "goBack": [Function],
                                                                    "goForward": [Function],
                                                                    "index": 0,
                                                                    "length": 1,
                                                                    "listen": [Function],
                                                                    "location": Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                    "push": [Function],
                                                                    "replace": [Function],
                                                                  },
                                                                  "initialValues": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "initialize": [Function],
                                                                  "initialized": false,
                                                                  "invalid": false,
                                                                  "isOpen": false,
                                                                  "keepDirtyOnReinitialize": false,
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "match": Object {
                                                                    "isExact": true,
                                                                    "params": Object {},
                                                                    "path": "/register",
                                                                    "url": "/register",
                                                                  },
                                                                  "onSubmit": [Function],
                                                                  "openModal": [Function],
                                                                  "persistentSubmitErrors": false,
                                                                  "pristine": true,
                                                                  "pure": true,
                                                                  "register": [Function],
                                                                  "registerClusterResponse": Object {
                                                                    "cluster": null,
                                                                    "error": false,
                                                                    "errorDetails": null,
                                                                    "errorMessage": "",
                                                                    "fulfilled": false,
                                                                    "pending": false,
                                                                    "valid": true,
                                                                  },
                                                                  "registerField": [Function],
                                                                  "registerInnerOnSubmit": [Function],
                                                                  "registeredFields": undefined,
                                                                  "reset": [Function],
                                                                  "resetForm": [Function],
                                                                  "resetResponse": [Function],
                                                                  "resetSection": [Function],
                                                                  "sectionPrefix": undefined,
                                                                  "setSubmitFailed": [Function],
                                                                  "setSubmitSucceeded": [Function],
                                                                  "shouldAsyncValidate": [Function],
                                                                  "shouldError": [Function],
                                                                  "shouldValidate": [Function],
                                                                  "shouldWarn": [Function],
                                                                  "startAsyncValidation": [Function],
                                                                  "startSubmit": [Function],
                                                                  "staticContext": undefined,
                                                                  "stopAsyncValidation": [Function],
                                                                  "stopSubmit": [Function],
                                                                  "submit": [Function],
                                                                  "submitFailed": false,
                                                                  "submitSucceeded": false,
                                                                  "submitting": false,
                                                                  "syncErrors": Object {},
                                                                  "syncWarnings": Object {},
                                                                  "touch": [Function],
                                                                  "touchOnBlur": true,
                                                                  "touchOnChange": false,
                                                                  "triggerSubmit": undefined,
                                                                  "unregister": [Function],
                                                                  "unregisterField": [Function],
                                                                  "untouch": [Function],
                                                                  "updateSyncErrors": [Function],
                                                                  "updateSyncWarnings": [Function],
                                                                  "updateUnregisteredFields": false,
                                                                  "valid": true,
                                                                  "validExceptSubmit": true,
                                                                  "values": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              asyncValidating={false}
                                                              component={[Function]}
                                                              dirty={false}
                                                              disabled={false}
                                                              dispatch={[Function]}
                                                              initial=""
                                                              label="Web console URL"
                                                              name="web_console_url"
                                                              normalize={[Function]}
                                                              pristine={true}
                                                              type="text"
                                                              validate={[Function]}
                                                              value=""
                                                            >
                                                              <ReduxVerticalFormGroup
                                                                disabled={false}
                                                                helpText=""
                                                                input={
                                                                  Object {
                                                                    "name": "web_console_url",
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onDragStart": [Function],
                                                                    "onDrop": [Function],
                                                                    "onFocus": [Function],
                                                                    "value": "",
                                                                  }
                                                                }
                                                                isRequired={false}
                                                                label="Web console URL"
                                                                meta={
                                                                  Object {
                                                                    "active": false,
                                                                    "asyncValidating": false,
                                                                    "autofilled": false,
                                                                    "dirty": false,
                                                                    "dispatch": [Function],
                                                                    "error": undefined,
                                                                    "form": "RegisterCluster",
                                                                    "initial": "",
                                                                    "invalid": false,
                                                                    "pristine": true,
                                                                    "submitFailed": false,
                                                                    "submitting": false,
                                                                    "touched": false,
                                                                    "valid": true,
                                                                    "visited": false,
                                                                    "warning": undefined,
                                                                  }
                                                                }
                                                                showHelpTextOnError={true}
                                                                type="text"
                                                              >
                                                                <FormGroup
                                                                  fieldId="web_console_url"
                                                                  helperText=""
                                                                  helperTextInvalid=""
                                                                  isRequired={false}
                                                                  label="Web console URL"
                                                                  validated="default"
                                                                >
                                                                  <div
                                                                    className="pf-c-form__group"
                                                                  >
                                                                    <div
                                                                      className="pf-c-form__group-label"
                                                                    >
                                                                      <label
                                                                        className="pf-c-form__label"
                                                                        htmlFor="web_console_url"
                                                                      >
                                                                        <span
                                                                          className="pf-c-form__label-text"
                                                                        >
                                                                          Web console URL
                                                                        </span>
                                                                      </label>
                                                                       
                                                                    </div>
                                                                    <div
                                                                      className="pf-c-form__group-control"
                                                                    >
                                                                      <ForwardRef
                                                                        id="web_console_url"
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        name="web_console_url"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onDrop={[Function]}
                                                                        onFocus={[Function]}
                                                                        type="text"
                                                                        validated="default"
                                                                        value=""
                                                                      >
                                                                        <TextInputBase
                                                                          aria-label={null}
                                                                          className=""
                                                                          id="web_console_url"
                                                                          innerRef={null}
                                                                          isDisabled={false}
                                                                          isReadOnly={false}
                                                                          isRequired={false}
                                                                          name="web_console_url"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onDragStart={[Function]}
                                                                          onDrop={[Function]}
                                                                          onFocus={[Function]}
                                                                          type="text"
                                                                          validated="default"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            aria-label={null}
                                                                            className="pf-c-form-control"
                                                                            disabled={false}
                                                                            id="web_console_url"
                                                                            name="web_console_url"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onDragStart={[Function]}
                                                                            onDrop={[Function]}
                                                                            onFocus={[Function]}
                                                                            readOnly={false}
                                                                            required={false}
                                                                            type="text"
                                                                            value=""
                                                                          />
                                                                        </TextInputBase>
                                                                      </ForwardRef>
                                                                    </div>
                                                                  </div>
                                                                </FormGroup>
                                                              </ReduxVerticalFormGroup>
                                                            </ConnectedField>
                                                          </Connect(ConnectedField)>
                                                        </Field>
                                                        <FormGroup
                                                          fieldId="operating_system"
                                                          isRequired={true}
                                                          label="Operating system"
                                                        >
                                                          <div
                                                            className="pf-c-form__group"
                                                          >
                                                            <div
                                                              className="pf-c-form__group-label"
                                                            >
                                                              <label
                                                                className="pf-c-form__label"
                                                                htmlFor="operating_system"
                                                              >
                                                                <span
                                                                  className="pf-c-form__label-text"
                                                                >
                                                                  Operating system
                                                                </span>
                                                                <span
                                                                  aria-hidden="true"
                                                                  className="pf-c-form__label-required"
                                                                >
                                                                   
                                                                  *
                                                                </span>
                                                              </label>
                                                               
                                                            </div>
                                                            <div
                                                              className="pf-c-form__group-control"
                                                            >
                                                              <Field
                                                                component={[Function]}
                                                                defaultValue="Red Hat Enterprise Linux CoreOS"
                                                                disabled={false}
                                                                name="operating_system"
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "label": "Red Hat Enterprise Linux CoreOS",
                                                                      "value": "Red Hat Enterprise Linux CoreOS",
                                                                    },
                                                                    Object {
                                                                      "label": "Red Hat Enterprise Linux",
                                                                      "value": "Red Hat Enterprise Linux",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Connect(ConnectedField)
                                                                  _reduxForm={
                                                                    Object {
                                                                      "anyTouched": false,
                                                                      "array": Object {
                                                                        "insert": [Function],
                                                                        "move": [Function],
                                                                        "pop": [Function],
                                                                        "push": [Function],
                                                                        "remove": [Function],
                                                                        "removeAll": [Function],
                                                                        "shift": [Function],
                                                                        "splice": [Function],
                                                                        "swap": [Function],
                                                                        "unshift": [Function],
                                                                      },
                                                                      "arrayInsert": [Function],
                                                                      "arrayMove": [Function],
                                                                      "arrayPop": [Function],
                                                                      "arrayPush": [Function],
                                                                      "arrayRemove": [Function],
                                                                      "arrayRemoveAll": [Function],
                                                                      "arrayShift": [Function],
                                                                      "arraySplice": [Function],
                                                                      "arraySwap": [Function],
                                                                      "arrayUnshift": [Function],
                                                                      "asyncErrors": undefined,
                                                                      "asyncValidate": [Function],
                                                                      "asyncValidating": false,
                                                                      "autofill": [Function],
                                                                      "blur": [Function],
                                                                      "change": [Function],
                                                                      "clearAsyncError": [Function],
                                                                      "clearFields": [Function],
                                                                      "clearSubmit": [Function],
                                                                      "clearSubmitErrors": [Function],
                                                                      "closeModal": [Function],
                                                                      "destroy": [Function],
                                                                      "destroyOnUnmount": true,
                                                                      "dirty": false,
                                                                      "dispatch": [Function],
                                                                      "enableReinitialize": false,
                                                                      "error": undefined,
                                                                      "focus": [Function],
                                                                      "forceUnregisterOnUnmount": false,
                                                                      "form": "RegisterCluster",
                                                                      "getFormState": [Function],
                                                                      "getValues": [Function],
                                                                      "history": Object {
                                                                        "action": "POP",
                                                                        "block": [Function],
                                                                        "canGo": [Function],
                                                                        "createHref": [Function],
                                                                        "entries": Array [
                                                                          Object {
                                                                            "hash": "",
                                                                            "key": "testKey",
                                                                            "pathname": "/register",
                                                                            "search": "",
                                                                          },
                                                                        ],
                                                                        "go": [Function],
                                                                        "goBack": [Function],
                                                                        "goForward": [Function],
                                                                        "index": 0,
                                                                        "length": 1,
                                                                        "listen": [Function],
                                                                        "location": Object {
                                                                          "hash": "",
                                                                          "key": "testKey",
                                                                          "pathname": "/register",
                                                                          "search": "",
                                                                        },
                                                                        "push": [Function],
                                                                        "replace": [Function],
                                                                      },
                                                                      "initialValues": Object {
                                                                        "cluster_id": "",
                                                                        "display_name": "",
                                                                        "memory_gib": "",
                                                                        "nodes_compute": "",
                                                                        "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                        "socket_num": "",
                                                                        "system_type": "physical",
                                                                        "vcpu_num": "",
                                                                        "web_console_url": "",
                                                                      },
                                                                      "initialize": [Function],
                                                                      "initialized": true,
                                                                      "invalid": true,
                                                                      "isOpen": false,
                                                                      "keepDirtyOnReinitialize": false,
                                                                      "location": Object {
                                                                        "hash": "",
                                                                        "key": "testKey",
                                                                        "pathname": "/register",
                                                                        "search": "",
                                                                      },
                                                                      "match": Object {
                                                                        "isExact": true,
                                                                        "params": Object {},
                                                                        "path": "/register",
                                                                        "url": "/register",
                                                                      },
                                                                      "onSubmit": [Function],
                                                                      "openModal": [Function],
                                                                      "persistentSubmitErrors": false,
                                                                      "pristine": true,
                                                                      "pure": true,
                                                                      "register": [Function],
                                                                      "registerClusterResponse": Object {
                                                                        "cluster": null,
                                                                        "error": false,
                                                                        "errorDetails": null,
                                                                        "errorMessage": "",
                                                                        "fulfilled": false,
                                                                        "pending": false,
                                                                        "valid": true,
                                                                      },
                                                                      "registerField": [Function],
                                                                      "registerInnerOnSubmit": [Function],
                                                                      "registeredFields": Object {
                                                                        "cluster_id": Object {
                                                                          "count": 31,
                                                                          "name": "cluster_id",
                                                                          "type": "Field",
                                                                        },
                                                                        "display_name": Object {
                                                                          "count": 31,
                                                                          "name": "display_name",
                                                                          "type": "Field",
                                                                        },
                                                                        "memory_gib": Object {
                                                                          "count": 31,
                                                                          "name": "memory_gib",
                                                                          "type": "Field",
                                                                        },
                                                                        "nodes_compute": Object {
                                                                          "count": 31,
                                                                          "name": "nodes_compute",
                                                                          "type": "Field",
                                                                        },
                                                                        "operating_system": Object {
                                                                          "count": 31,
                                                                          "name": "operating_system",
                                                                          "type": "Field",
                                                                        },
                                                                        "socket_num": Object {
                                                                          "count": 31,
                                                                          "name": "socket_num",
                                                                          "type": "Field",
                                                                        },
                                                                        "system_type": Object {
                                                                          "count": 31,
                                                                          "name": "system_type",
                                                                          "type": "Field",
                                                                        },
                                                                        "web_console_url": Object {
                                                                          "count": 31,
                                                                          "name": "web_console_url",
                                                                          "type": "Field",
                                                                        },
                                                                      },
                                                                      "reset": [Function],
                                                                      "resetForm": [Function],
                                                                      "resetResponse": [Function],
                                                                      "resetSection": [Function],
                                                                      "sectionPrefix": undefined,
                                                                      "setSubmitFailed": [Function],
                                                                      "setSubmitSucceeded": [Function],
                                                                      "shouldAsyncValidate": [Function],
                                                                      "shouldError": [Function],
                                                                      "shouldValidate": [Function],
                                                                      "shouldWarn": [Function],
                                                                      "startAsyncValidation": [Function],
                                                                      "startSubmit": [Function],
                                                                      "staticContext": undefined,
                                                                      "stopAsyncValidation": [Function],
                                                                      "stopSubmit": [Function],
                                                                      "submit": [Function],
                                                                      "submitFailed": false,
                                                                      "submitSucceeded": false,
                                                                      "submitting": false,
                                                                      "syncErrors": Object {
                                                                        "cluster_id": "Cluster ID is required.",
                                                                        "socket_num": "Field is required",
                                                                      },
                                                                      "syncWarnings": Object {},
                                                                      "touch": [Function],
                                                                      "touchOnBlur": true,
                                                                      "touchOnChange": false,
                                                                      "triggerSubmit": undefined,
                                                                      "unregister": [Function],
                                                                      "unregisterField": [Function],
                                                                      "untouch": [Function],
                                                                      "updateSyncErrors": [Function],
                                                                      "updateSyncWarnings": [Function],
                                                                      "updateUnregisteredFields": false,
                                                                      "valid": false,
                                                                      "validExceptSubmit": false,
                                                                      "values": Object {
                                                                        "cluster_id": "",
                                                                        "display_name": "",
                                                                        "memory_gib": "",
                                                                        "nodes_compute": "",
                                                                        "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                        "socket_num": "",
                                                                        "system_type": "physical",
                                                                        "vcpu_num": "",
                                                                        "web_console_url": "",
                                                                      },
                                                                      "warning": undefined,
                                                                    }
                                                                  }
                                                                  component={[Function]}
                                                                  defaultValue="Red Hat Enterprise Linux CoreOS"
                                                                  disabled={false}
                                                                  name="operating_system"
                                                                  normalize={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "Red Hat Enterprise Linux CoreOS",
                                                                        "value": "Red Hat Enterprise Linux CoreOS",
                                                                      },
                                                                      Object {
                                                                        "label": "Red Hat Enterprise Linux",
                                                                        "value": "Red Hat Enterprise Linux",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <ConnectedField
                                                                    _reduxForm={
                                                                      Object {
                                                                        "anyTouched": false,
                                                                        "array": Object {
                                                                          "insert": [Function],
                                                                          "move": [Function],
                                                                          "pop": [Function],
                                                                          "push": [Function],
                                                                          "remove": [Function],
                                                                          "removeAll": [Function],
                                                                          "shift": [Function],
                                                                          "splice": [Function],
                                                                          "swap": [Function],
                                                                          "unshift": [Function],
                                                                        },
                                                                        "arrayInsert": [Function],
                                                                        "arrayMove": [Function],
                                                                        "arrayPop": [Function],
                                                                        "arrayPush": [Function],
                                                                        "arrayRemove": [Function],
                                                                        "arrayRemoveAll": [Function],
                                                                        "arrayShift": [Function],
                                                                        "arraySplice": [Function],
                                                                        "arraySwap": [Function],
                                                                        "arrayUnshift": [Function],
                                                                        "asyncErrors": undefined,
                                                                        "asyncValidate": [Function],
                                                                        "asyncValidating": false,
                                                                        "autofill": [Function],
                                                                        "blur": [Function],
                                                                        "change": [Function],
                                                                        "clearAsyncError": [Function],
                                                                        "clearFields": [Function],
                                                                        "clearSubmit": [Function],
                                                                        "clearSubmitErrors": [Function],
                                                                        "closeModal": [Function],
                                                                        "destroy": [Function],
                                                                        "destroyOnUnmount": true,
                                                                        "dirty": false,
                                                                        "dispatch": [Function],
                                                                        "enableReinitialize": false,
                                                                        "error": undefined,
                                                                        "focus": [Function],
                                                                        "forceUnregisterOnUnmount": false,
                                                                        "form": "RegisterCluster",
                                                                        "getFormState": [Function],
                                                                        "getValues": [Function],
                                                                        "history": Object {
                                                                          "action": "POP",
                                                                          "block": [Function],
                                                                          "canGo": [Function],
                                                                          "createHref": [Function],
                                                                          "entries": Array [
                                                                            Object {
                                                                              "hash": "",
                                                                              "key": "testKey",
                                                                              "pathname": "/register",
                                                                              "search": "",
                                                                            },
                                                                          ],
                                                                          "go": [Function],
                                                                          "goBack": [Function],
                                                                          "goForward": [Function],
                                                                          "index": 0,
                                                                          "length": 1,
                                                                          "listen": [Function],
                                                                          "location": Object {
                                                                            "hash": "",
                                                                            "key": "testKey",
                                                                            "pathname": "/register",
                                                                            "search": "",
                                                                          },
                                                                          "push": [Function],
                                                                          "replace": [Function],
                                                                        },
                                                                        "initialValues": Object {
                                                                          "cluster_id": "",
                                                                          "display_name": "",
                                                                          "memory_gib": "",
                                                                          "nodes_compute": "",
                                                                          "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                          "socket_num": "",
                                                                          "system_type": "physical",
                                                                          "vcpu_num": "",
                                                                          "web_console_url": "",
                                                                        },
                                                                        "initialize": [Function],
                                                                        "initialized": true,
                                                                        "invalid": true,
                                                                        "isOpen": false,
                                                                        "keepDirtyOnReinitialize": false,
                                                                        "location": Object {
                                                                          "hash": "",
                                                                          "key": "testKey",
                                                                          "pathname": "/register",
                                                                          "search": "",
                                                                        },
                                                                        "match": Object {
                                                                          "isExact": true,
                                                                          "params": Object {},
                                                                          "path": "/register",
                                                                          "url": "/register",
                                                                        },
                                                                        "onSubmit": [Function],
                                                                        "openModal": [Function],
                                                                        "persistentSubmitErrors": false,
                                                                        "pristine": true,
                                                                        "pure": true,
                                                                        "register": [Function],
                                                                        "registerClusterResponse": Object {
                                                                          "cluster": null,
                                                                          "error": false,
                                                                          "errorDetails": null,
                                                                          "errorMessage": "",
                                                                          "fulfilled": false,
                                                                          "pending": false,
                                                                          "valid": true,
                                                                        },
                                                                        "registerField": [Function],
                                                                        "registerInnerOnSubmit": [Function],
                                                                        "registeredFields": Object {
                                                                          "cluster_id": Object {
                                                                            "count": 31,
                                                                            "name": "cluster_id",
                                                                            "type": "Field",
                                                                          },
                                                                          "display_name": Object {
                                                                            "count": 31,
                                                                            "name": "display_name",
                                                                            "type": "Field",
                                                                          },
                                                                          "memory_gib": Object {
                                                                            "count": 31,
                                                                            "name": "memory_gib",
                                                                            "type": "Field",
                                                                          },
                                                                          "nodes_compute": Object {
                                                                            "count": 31,
                                                                            "name": "nodes_compute",
                                                                            "type": "Field",
                                                                          },
                                                                          "operating_system": Object {
                                                                            "count": 31,
                                                                            "name": "operating_system",
                                                                            "type": "Field",
                                                                          },
                                                                          "socket_num": Object {
                                                                            "count": 31,
                                                                            "name": "socket_num",
                                                                            "type": "Field",
                                                                          },
                                                                          "system_type": Object {
                                                                            "count": 31,
                                                                            "name": "system_type",
                                                                            "type": "Field",
                                                                          },
                                                                          "web_console_url": Object {
                                                                            "count": 31,
                                                                            "name": "web_console_url",
                                                                            "type": "Field",
                                                                          },
                                                                        },
                                                                        "reset": [Function],
                                                                        "resetForm": [Function],
                                                                        "resetResponse": [Function],
                                                                        "resetSection": [Function],
                                                                        "sectionPrefix": undefined,
                                                                        "setSubmitFailed": [Function],
                                                                        "setSubmitSucceeded": [Function],
                                                                        "shouldAsyncValidate": [Function],
                                                                        "shouldError": [Function],
                                                                        "shouldValidate": [Function],
                                                                        "shouldWarn": [Function],
                                                                        "startAsyncValidation": [Function],
                                                                        "startSubmit": [Function],
                                                                        "staticContext": undefined,
                                                                        "stopAsyncValidation": [Function],
                                                                        "stopSubmit": [Function],
                                                                        "submit": [Function],
                                                                        "submitFailed": false,
                                                                        "submitSucceeded": false,
                                                                        "submitting": false,
                                                                        "syncErrors": Object {
                                                                          "cluster_id": "Cluster ID is required.",
                                                                          "socket_num": "Field is required",
                                                                        },
                                                                        "syncWarnings": Object {},
                                                                        "touch": [Function],
                                                                        "touchOnBlur": true,
                                                                        "touchOnChange": false,
                                                                        "triggerSubmit": undefined,
                                                                        "unregister": [Function],
                                                                        "unregisterField": [Function],
                                                                        "untouch": [Function],
                                                                        "updateSyncErrors": [Function],
                                                                        "updateSyncWarnings": [Function],
                                                                        "updateUnregisteredFields": false,
                                                                        "valid": false,
                                                                        "validExceptSubmit": false,
                                                                        "values": Object {
                                                                          "cluster_id": "",
                                                                          "display_name": "",
                                                                          "memory_gib": "",
                                                                          "nodes_compute": "",
                                                                          "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                          "socket_num": "",
                                                                          "system_type": "physical",
                                                                          "vcpu_num": "",
                                                                          "web_console_url": "",
                                                                        },
                                                                        "warning": undefined,
                                                                      }
                                                                    }
                                                                    asyncValidating={false}
                                                                    component={[Function]}
                                                                    defaultValue="Red Hat Enterprise Linux CoreOS"
                                                                    dirty={false}
                                                                    disabled={false}
                                                                    dispatch={[Function]}
                                                                    initial="Red Hat Enterprise Linux CoreOS"
                                                                    name="operating_system"
                                                                    normalize={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Red Hat Enterprise Linux CoreOS",
                                                                          "value": "Red Hat Enterprise Linux CoreOS",
                                                                        },
                                                                        Object {
                                                                          "label": "Red Hat Enterprise Linux",
                                                                          "value": "Red Hat Enterprise Linux",
                                                                        },
                                                                      ]
                                                                    }
                                                                    pristine={true}
                                                                    value="Red Hat Enterprise Linux CoreOS"
                                                                  >
                                                                    <RadioButtons
                                                                      defaultValue="Red Hat Enterprise Linux CoreOS"
                                                                      disabled={false}
                                                                      input={
                                                                        Object {
                                                                          "name": "operating_system",
                                                                          "onBlur": [Function],
                                                                          "onChange": [Function],
                                                                          "onDragStart": [Function],
                                                                          "onDrop": [Function],
                                                                          "onFocus": [Function],
                                                                          "value": "Red Hat Enterprise Linux CoreOS",
                                                                        }
                                                                      }
                                                                      meta={
                                                                        Object {
                                                                          "active": false,
                                                                          "asyncValidating": false,
                                                                          "autofilled": false,
                                                                          "dirty": false,
                                                                          "dispatch": [Function],
                                                                          "error": undefined,
                                                                          "form": "RegisterCluster",
                                                                          "initial": "Red Hat Enterprise Linux CoreOS",
                                                                          "invalid": false,
                                                                          "pristine": true,
                                                                          "submitFailed": false,
                                                                          "submitting": false,
                                                                          "touched": false,
                                                                          "valid": true,
                                                                          "visited": false,
                                                                          "warning": undefined,
                                                                        }
                                                                      }
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "label": "Red Hat Enterprise Linux CoreOS",
                                                                            "value": "Red Hat Enterprise Linux CoreOS",
                                                                          },
                                                                          Object {
                                                                            "label": "Red Hat Enterprise Linux",
                                                                            "value": "Red Hat Enterprise Linux",
                                                                          },
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Radio
                                                                        aria-label="Red Hat Enterprise Linux CoreOS"
                                                                        className=""
                                                                        id="operating_system-Red Hat Enterprise Linux CoreOS"
                                                                        isChecked={true}
                                                                        isDisabled={false}
                                                                        isValid={true}
                                                                        key="operating_system-Red Hat Enterprise Linux CoreOS"
                                                                        label="Red Hat Enterprise Linux CoreOS"
                                                                        name="operating_system"
                                                                        onChange={[Function]}
                                                                        value="Red Hat Enterprise Linux CoreOS"
                                                                      >
                                                                        <div
                                                                          className="pf-c-radio"
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            checked={true}
                                                                            className="pf-c-radio__input"
                                                                            disabled={false}
                                                                            id="operating_system-Red Hat Enterprise Linux CoreOS"
                                                                            name="operating_system"
                                                                            onChange={[Function]}
                                                                            type="radio"
                                                                            value="Red Hat Enterprise Linux CoreOS"
                                                                          />
                                                                          <label
                                                                            className="pf-c-radio__label"
                                                                            htmlFor="operating_system-Red Hat Enterprise Linux CoreOS"
                                                                          >
                                                                            Red Hat Enterprise Linux CoreOS
                                                                          </label>
                                                                        </div>
                                                                      </Radio>
                                                                      <Radio
                                                                        aria-label="Red Hat Enterprise Linux"
                                                                        className=""
                                                                        id="operating_system-Red Hat Enterprise Linux"
                                                                        isChecked={false}
                                                                        isDisabled={false}
                                                                        isValid={true}
                                                                        key="operating_system-Red Hat Enterprise Linux"
                                                                        label="Red Hat Enterprise Linux"
                                                                        name="operating_system"
                                                                        onChange={[Function]}
                                                                        value="Red Hat Enterprise Linux"
                                                                      >
                                                                        <div
                                                                          className="pf-c-radio"
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            checked={false}
                                                                            className="pf-c-radio__input"
                                                                            disabled={false}
                                                                            id="operating_system-Red Hat Enterprise Linux"
                                                                            name="operating_system"
                                                                            onChange={[Function]}
                                                                            type="radio"
                                                                            value="Red Hat Enterprise Linux"
                                                                          />
                                                                          <label
                                                                            className="pf-c-radio__label"
                                                                            htmlFor="operating_system-Red Hat Enterprise Linux"
                                                                          >
                                                                            Red Hat Enterprise Linux
                                                                          </label>
                                                                        </div>
                                                                      </Radio>
                                                                    </RadioButtons>
                                                                  </ConnectedField>
                                                                </Connect(ConnectedField)>
                                                              </Field>
                                                            </div>
                                                          </div>
                                                        </FormGroup>
                                                        <FormGroup
                                                          fieldId="system_type"
                                                          isRequired={true}
                                                          label="System type"
                                                        >
                                                          <div
                                                            className="pf-c-form__group"
                                                          >
                                                            <div
                                                              className="pf-c-form__group-label"
                                                            >
                                                              <label
                                                                className="pf-c-form__label"
                                                                htmlFor="system_type"
                                                              >
                                                                <span
                                                                  className="pf-c-form__label-text"
                                                                >
                                                                  System type
                                                                </span>
                                                                <span
                                                                  aria-hidden="true"
                                                                  className="pf-c-form__label-required"
                                                                >
                                                                   
                                                                  *
                                                                </span>
                                                              </label>
                                                               
                                                            </div>
                                                            <div
                                                              className="pf-c-form__group-control"
                                                            >
                                                              <Field
                                                                component={[Function]}
                                                                defaultValue="physical"
                                                                disabled={false}
                                                                name="system_type"
                                                                onChange={[Function]}
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "label": "Physical",
                                                                      "value": "physical",
                                                                    },
                                                                    Object {
                                                                      "label": "Virtual",
                                                                      "value": "virtual",
                                                                    },
                                                                  ]
                                                                }
                                                              >
                                                                <Connect(ConnectedField)
                                                                  _reduxForm={
                                                                    Object {
                                                                      "anyTouched": false,
                                                                      "array": Object {
                                                                        "insert": [Function],
                                                                        "move": [Function],
                                                                        "pop": [Function],
                                                                        "push": [Function],
                                                                        "remove": [Function],
                                                                        "removeAll": [Function],
                                                                        "shift": [Function],
                                                                        "splice": [Function],
                                                                        "swap": [Function],
                                                                        "unshift": [Function],
                                                                      },
                                                                      "arrayInsert": [Function],
                                                                      "arrayMove": [Function],
                                                                      "arrayPop": [Function],
                                                                      "arrayPush": [Function],
                                                                      "arrayRemove": [Function],
                                                                      "arrayRemoveAll": [Function],
                                                                      "arrayShift": [Function],
                                                                      "arraySplice": [Function],
                                                                      "arraySwap": [Function],
                                                                      "arrayUnshift": [Function],
                                                                      "asyncErrors": undefined,
                                                                      "asyncValidate": [Function],
                                                                      "asyncValidating": false,
                                                                      "autofill": [Function],
                                                                      "blur": [Function],
                                                                      "change": [Function],
                                                                      "clearAsyncError": [Function],
                                                                      "clearFields": [Function],
                                                                      "clearSubmit": [Function],
                                                                      "clearSubmitErrors": [Function],
                                                                      "closeModal": [Function],
                                                                      "destroy": [Function],
                                                                      "destroyOnUnmount": true,
                                                                      "dirty": false,
                                                                      "dispatch": [Function],
                                                                      "enableReinitialize": false,
                                                                      "error": undefined,
                                                                      "focus": [Function],
                                                                      "forceUnregisterOnUnmount": false,
                                                                      "form": "RegisterCluster",
                                                                      "getFormState": [Function],
                                                                      "getValues": [Function],
                                                                      "history": Object {
                                                                        "action": "POP",
                                                                        "block": [Function],
                                                                        "canGo": [Function],
                                                                        "createHref": [Function],
                                                                        "entries": Array [
                                                                          Object {
                                                                            "hash": "",
                                                                            "key": "testKey",
                                                                            "pathname": "/register",
                                                                            "search": "",
                                                                          },
                                                                        ],
                                                                        "go": [Function],
                                                                        "goBack": [Function],
                                                                        "goForward": [Function],
                                                                        "index": 0,
                                                                        "length": 1,
                                                                        "listen": [Function],
                                                                        "location": Object {
                                                                          "hash": "",
                                                                          "key": "testKey",
                                                                          "pathname": "/register",
                                                                          "search": "",
                                                                        },
                                                                        "push": [Function],
                                                                        "replace": [Function],
                                                                      },
                                                                      "initialValues": Object {
                                                                        "cluster_id": "",
                                                                        "display_name": "",
                                                                        "memory_gib": "",
                                                                        "nodes_compute": "",
                                                                        "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                        "socket_num": "",
                                                                        "system_type": "physical",
                                                                        "vcpu_num": "",
                                                                        "web_console_url": "",
                                                                      },
                                                                      "initialize": [Function],
                                                                      "initialized": true,
                                                                      "invalid": true,
                                                                      "isOpen": false,
                                                                      "keepDirtyOnReinitialize": false,
                                                                      "location": Object {
                                                                        "hash": "",
                                                                        "key": "testKey",
                                                                        "pathname": "/register",
                                                                        "search": "",
                                                                      },
                                                                      "match": Object {
                                                                        "isExact": true,
                                                                        "params": Object {},
                                                                        "path": "/register",
                                                                        "url": "/register",
                                                                      },
                                                                      "onSubmit": [Function],
                                                                      "openModal": [Function],
                                                                      "persistentSubmitErrors": false,
                                                                      "pristine": true,
                                                                      "pure": true,
                                                                      "register": [Function],
                                                                      "registerClusterResponse": Object {
                                                                        "cluster": null,
                                                                        "error": false,
                                                                        "errorDetails": null,
                                                                        "errorMessage": "",
                                                                        "fulfilled": false,
                                                                        "pending": false,
                                                                        "valid": true,
                                                                      },
                                                                      "registerField": [Function],
                                                                      "registerInnerOnSubmit": [Function],
                                                                      "registeredFields": Object {
                                                                        "cluster_id": Object {
                                                                          "count": 31,
                                                                          "name": "cluster_id",
                                                                          "type": "Field",
                                                                        },
                                                                        "display_name": Object {
                                                                          "count": 31,
                                                                          "name": "display_name",
                                                                          "type": "Field",
                                                                        },
                                                                        "memory_gib": Object {
                                                                          "count": 31,
                                                                          "name": "memory_gib",
                                                                          "type": "Field",
                                                                        },
                                                                        "nodes_compute": Object {
                                                                          "count": 31,
                                                                          "name": "nodes_compute",
                                                                          "type": "Field",
                                                                        },
                                                                        "operating_system": Object {
                                                                          "count": 31,
                                                                          "name": "operating_system",
                                                                          "type": "Field",
                                                                        },
                                                                        "socket_num": Object {
                                                                          "count": 31,
                                                                          "name": "socket_num",
                                                                          "type": "Field",
                                                                        },
                                                                        "system_type": Object {
                                                                          "count": 31,
                                                                          "name": "system_type",
                                                                          "type": "Field",
                                                                        },
                                                                        "web_console_url": Object {
                                                                          "count": 31,
                                                                          "name": "web_console_url",
                                                                          "type": "Field",
                                                                        },
                                                                      },
                                                                      "reset": [Function],
                                                                      "resetForm": [Function],
                                                                      "resetResponse": [Function],
                                                                      "resetSection": [Function],
                                                                      "sectionPrefix": undefined,
                                                                      "setSubmitFailed": [Function],
                                                                      "setSubmitSucceeded": [Function],
                                                                      "shouldAsyncValidate": [Function],
                                                                      "shouldError": [Function],
                                                                      "shouldValidate": [Function],
                                                                      "shouldWarn": [Function],
                                                                      "startAsyncValidation": [Function],
                                                                      "startSubmit": [Function],
                                                                      "staticContext": undefined,
                                                                      "stopAsyncValidation": [Function],
                                                                      "stopSubmit": [Function],
                                                                      "submit": [Function],
                                                                      "submitFailed": false,
                                                                      "submitSucceeded": false,
                                                                      "submitting": false,
                                                                      "syncErrors": Object {
                                                                        "cluster_id": "Cluster ID is required.",
                                                                        "socket_num": "Field is required",
                                                                      },
                                                                      "syncWarnings": Object {},
                                                                      "touch": [Function],
                                                                      "touchOnBlur": true,
                                                                      "touchOnChange": false,
                                                                      "triggerSubmit": undefined,
                                                                      "unregister": [Function],
                                                                      "unregisterField": [Function],
                                                                      "untouch": [Function],
                                                                      "updateSyncErrors": [Function],
                                                                      "updateSyncWarnings": [Function],
                                                                      "updateUnregisteredFields": false,
                                                                      "valid": false,
                                                                      "validExceptSubmit": false,
                                                                      "values": Object {
                                                                        "cluster_id": "",
                                                                        "display_name": "",
                                                                        "memory_gib": "",
                                                                        "nodes_compute": "",
                                                                        "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                        "socket_num": "",
                                                                        "system_type": "physical",
                                                                        "vcpu_num": "",
                                                                        "web_console_url": "",
                                                                      },
                                                                      "warning": undefined,
                                                                    }
                                                                  }
                                                                  component={[Function]}
                                                                  defaultValue="physical"
                                                                  disabled={false}
                                                                  name="system_type"
                                                                  normalize={[Function]}
                                                                  onChange={[Function]}
                                                                  options={
                                                                    Array [
                                                                      Object {
                                                                        "label": "Physical",
                                                                        "value": "physical",
                                                                      },
                                                                      Object {
                                                                        "label": "Virtual",
                                                                        "value": "virtual",
                                                                      },
                                                                    ]
                                                                  }
                                                                >
                                                                  <ConnectedField
                                                                    _reduxForm={
                                                                      Object {
                                                                        "anyTouched": false,
                                                                        "array": Object {
                                                                          "insert": [Function],
                                                                          "move": [Function],
                                                                          "pop": [Function],
                                                                          "push": [Function],
                                                                          "remove": [Function],
                                                                          "removeAll": [Function],
                                                                          "shift": [Function],
                                                                          "splice": [Function],
                                                                          "swap": [Function],
                                                                          "unshift": [Function],
                                                                        },
                                                                        "arrayInsert": [Function],
                                                                        "arrayMove": [Function],
                                                                        "arrayPop": [Function],
                                                                        "arrayPush": [Function],
                                                                        "arrayRemove": [Function],
                                                                        "arrayRemoveAll": [Function],
                                                                        "arrayShift": [Function],
                                                                        "arraySplice": [Function],
                                                                        "arraySwap": [Function],
                                                                        "arrayUnshift": [Function],
                                                                        "asyncErrors": undefined,
                                                                        "asyncValidate": [Function],
                                                                        "asyncValidating": false,
                                                                        "autofill": [Function],
                                                                        "blur": [Function],
                                                                        "change": [Function],
                                                                        "clearAsyncError": [Function],
                                                                        "clearFields": [Function],
                                                                        "clearSubmit": [Function],
                                                                        "clearSubmitErrors": [Function],
                                                                        "closeModal": [Function],
                                                                        "destroy": [Function],
                                                                        "destroyOnUnmount": true,
                                                                        "dirty": false,
                                                                        "dispatch": [Function],
                                                                        "enableReinitialize": false,
                                                                        "error": undefined,
                                                                        "focus": [Function],
                                                                        "forceUnregisterOnUnmount": false,
                                                                        "form": "RegisterCluster",
                                                                        "getFormState": [Function],
                                                                        "getValues": [Function],
                                                                        "history": Object {
                                                                          "action": "POP",
                                                                          "block": [Function],
                                                                          "canGo": [Function],
                                                                          "createHref": [Function],
                                                                          "entries": Array [
                                                                            Object {
                                                                              "hash": "",
                                                                              "key": "testKey",
                                                                              "pathname": "/register",
                                                                              "search": "",
                                                                            },
                                                                          ],
                                                                          "go": [Function],
                                                                          "goBack": [Function],
                                                                          "goForward": [Function],
                                                                          "index": 0,
                                                                          "length": 1,
                                                                          "listen": [Function],
                                                                          "location": Object {
                                                                            "hash": "",
                                                                            "key": "testKey",
                                                                            "pathname": "/register",
                                                                            "search": "",
                                                                          },
                                                                          "push": [Function],
                                                                          "replace": [Function],
                                                                        },
                                                                        "initialValues": Object {
                                                                          "cluster_id": "",
                                                                          "display_name": "",
                                                                          "memory_gib": "",
                                                                          "nodes_compute": "",
                                                                          "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                          "socket_num": "",
                                                                          "system_type": "physical",
                                                                          "vcpu_num": "",
                                                                          "web_console_url": "",
                                                                        },
                                                                        "initialize": [Function],
                                                                        "initialized": true,
                                                                        "invalid": true,
                                                                        "isOpen": false,
                                                                        "keepDirtyOnReinitialize": false,
                                                                        "location": Object {
                                                                          "hash": "",
                                                                          "key": "testKey",
                                                                          "pathname": "/register",
                                                                          "search": "",
                                                                        },
                                                                        "match": Object {
                                                                          "isExact": true,
                                                                          "params": Object {},
                                                                          "path": "/register",
                                                                          "url": "/register",
                                                                        },
                                                                        "onSubmit": [Function],
                                                                        "openModal": [Function],
                                                                        "persistentSubmitErrors": false,
                                                                        "pristine": true,
                                                                        "pure": true,
                                                                        "register": [Function],
                                                                        "registerClusterResponse": Object {
                                                                          "cluster": null,
                                                                          "error": false,
                                                                          "errorDetails": null,
                                                                          "errorMessage": "",
                                                                          "fulfilled": false,
                                                                          "pending": false,
                                                                          "valid": true,
                                                                        },
                                                                        "registerField": [Function],
                                                                        "registerInnerOnSubmit": [Function],
                                                                        "registeredFields": Object {
                                                                          "cluster_id": Object {
                                                                            "count": 31,
                                                                            "name": "cluster_id",
                                                                            "type": "Field",
                                                                          },
                                                                          "display_name": Object {
                                                                            "count": 31,
                                                                            "name": "display_name",
                                                                            "type": "Field",
                                                                          },
                                                                          "memory_gib": Object {
                                                                            "count": 31,
                                                                            "name": "memory_gib",
                                                                            "type": "Field",
                                                                          },
                                                                          "nodes_compute": Object {
                                                                            "count": 31,
                                                                            "name": "nodes_compute",
                                                                            "type": "Field",
                                                                          },
                                                                          "operating_system": Object {
                                                                            "count": 31,
                                                                            "name": "operating_system",
                                                                            "type": "Field",
                                                                          },
                                                                          "socket_num": Object {
                                                                            "count": 31,
                                                                            "name": "socket_num",
                                                                            "type": "Field",
                                                                          },
                                                                          "system_type": Object {
                                                                            "count": 31,
                                                                            "name": "system_type",
                                                                            "type": "Field",
                                                                          },
                                                                          "web_console_url": Object {
                                                                            "count": 31,
                                                                            "name": "web_console_url",
                                                                            "type": "Field",
                                                                          },
                                                                        },
                                                                        "reset": [Function],
                                                                        "resetForm": [Function],
                                                                        "resetResponse": [Function],
                                                                        "resetSection": [Function],
                                                                        "sectionPrefix": undefined,
                                                                        "setSubmitFailed": [Function],
                                                                        "setSubmitSucceeded": [Function],
                                                                        "shouldAsyncValidate": [Function],
                                                                        "shouldError": [Function],
                                                                        "shouldValidate": [Function],
                                                                        "shouldWarn": [Function],
                                                                        "startAsyncValidation": [Function],
                                                                        "startSubmit": [Function],
                                                                        "staticContext": undefined,
                                                                        "stopAsyncValidation": [Function],
                                                                        "stopSubmit": [Function],
                                                                        "submit": [Function],
                                                                        "submitFailed": false,
                                                                        "submitSucceeded": false,
                                                                        "submitting": false,
                                                                        "syncErrors": Object {
                                                                          "cluster_id": "Cluster ID is required.",
                                                                          "socket_num": "Field is required",
                                                                        },
                                                                        "syncWarnings": Object {},
                                                                        "touch": [Function],
                                                                        "touchOnBlur": true,
                                                                        "touchOnChange": false,
                                                                        "triggerSubmit": undefined,
                                                                        "unregister": [Function],
                                                                        "unregisterField": [Function],
                                                                        "untouch": [Function],
                                                                        "updateSyncErrors": [Function],
                                                                        "updateSyncWarnings": [Function],
                                                                        "updateUnregisteredFields": false,
                                                                        "valid": false,
                                                                        "validExceptSubmit": false,
                                                                        "values": Object {
                                                                          "cluster_id": "",
                                                                          "display_name": "",
                                                                          "memory_gib": "",
                                                                          "nodes_compute": "",
                                                                          "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                          "socket_num": "",
                                                                          "system_type": "physical",
                                                                          "vcpu_num": "",
                                                                          "web_console_url": "",
                                                                        },
                                                                        "warning": undefined,
                                                                      }
                                                                    }
                                                                    asyncValidating={false}
                                                                    component={[Function]}
                                                                    defaultValue="physical"
                                                                    dirty={false}
                                                                    disabled={false}
                                                                    dispatch={[Function]}
                                                                    initial="physical"
                                                                    name="system_type"
                                                                    normalize={[Function]}
                                                                    onChange={[Function]}
                                                                    options={
                                                                      Array [
                                                                        Object {
                                                                          "label": "Physical",
                                                                          "value": "physical",
                                                                        },
                                                                        Object {
                                                                          "label": "Virtual",
                                                                          "value": "virtual",
                                                                        },
                                                                      ]
                                                                    }
                                                                    pristine={true}
                                                                    value="physical"
                                                                  >
                                                                    <RadioButtons
                                                                      defaultValue="physical"
                                                                      disabled={false}
                                                                      input={
                                                                        Object {
                                                                          "name": "system_type",
                                                                          "onBlur": [Function],
                                                                          "onChange": [Function],
                                                                          "onDragStart": [Function],
                                                                          "onDrop": [Function],
                                                                          "onFocus": [Function],
                                                                          "value": "physical",
                                                                        }
                                                                      }
                                                                      meta={
                                                                        Object {
                                                                          "active": false,
                                                                          "asyncValidating": false,
                                                                          "autofilled": false,
                                                                          "dirty": false,
                                                                          "dispatch": [Function],
                                                                          "error": undefined,
                                                                          "form": "RegisterCluster",
                                                                          "initial": "physical",
                                                                          "invalid": false,
                                                                          "pristine": true,
                                                                          "submitFailed": false,
                                                                          "submitting": false,
                                                                          "touched": false,
                                                                          "valid": true,
                                                                          "visited": false,
                                                                          "warning": undefined,
                                                                        }
                                                                      }
                                                                      options={
                                                                        Array [
                                                                          Object {
                                                                            "label": "Physical",
                                                                            "value": "physical",
                                                                          },
                                                                          Object {
                                                                            "label": "Virtual",
                                                                            "value": "virtual",
                                                                          },
                                                                        ]
                                                                      }
                                                                    >
                                                                      <Radio
                                                                        aria-label="Physical"
                                                                        className=""
                                                                        id="system_type-physical"
                                                                        isChecked={true}
                                                                        isDisabled={false}
                                                                        isValid={true}
                                                                        key="system_type-physical"
                                                                        label="Physical"
                                                                        name="system_type"
                                                                        onChange={[Function]}
                                                                        value="physical"
                                                                      >
                                                                        <div
                                                                          className="pf-c-radio"
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            checked={true}
                                                                            className="pf-c-radio__input"
                                                                            disabled={false}
                                                                            id="system_type-physical"
                                                                            name="system_type"
                                                                            onChange={[Function]}
                                                                            type="radio"
                                                                            value="physical"
                                                                          />
                                                                          <label
                                                                            className="pf-c-radio__label"
                                                                            htmlFor="system_type-physical"
                                                                          >
                                                                            Physical
                                                                          </label>
                                                                        </div>
                                                                      </Radio>
                                                                      <Radio
                                                                        aria-label="Virtual"
                                                                        className=""
                                                                        id="system_type-virtual"
                                                                        isChecked={false}
                                                                        isDisabled={false}
                                                                        isValid={true}
                                                                        key="system_type-virtual"
                                                                        label="Virtual"
                                                                        name="system_type"
                                                                        onChange={[Function]}
                                                                        value="virtual"
                                                                      >
                                                                        <div
                                                                          className="pf-c-radio"
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            checked={false}
                                                                            className="pf-c-radio__input"
                                                                            disabled={false}
                                                                            id="system_type-virtual"
                                                                            name="system_type"
                                                                            onChange={[Function]}
                                                                            type="radio"
                                                                            value="virtual"
                                                                          />
                                                                          <label
                                                                            className="pf-c-radio__label"
                                                                            htmlFor="system_type-virtual"
                                                                          >
                                                                            Virtual
                                                                          </label>
                                                                        </div>
                                                                      </Radio>
                                                                    </RadioButtons>
                                                                  </ConnectedField>
                                                                </Connect(ConnectedField)>
                                                              </Field>
                                                            </div>
                                                          </div>
                                                        </FormGroup>
                                                        <Field
                                                          component={[Function]}
                                                          disabled={false}
                                                          inputMode="numeric"
                                                          isRequired={true}
                                                          label="Number of sockets or LPARs"
                                                          name="socket_num"
                                                          validate={
                                                            Array [
                                                              [Function],
                                                              [Function],
                                                            ]
                                                          }
                                                        >
                                                          <Connect(ConnectedField)
                                                            _reduxForm={
                                                              Object {
                                                                "anyTouched": false,
                                                                "array": Object {
                                                                  "insert": [Function],
                                                                  "move": [Function],
                                                                  "pop": [Function],
                                                                  "push": [Function],
                                                                  "remove": [Function],
                                                                  "removeAll": [Function],
                                                                  "shift": [Function],
                                                                  "splice": [Function],
                                                                  "swap": [Function],
                                                                  "unshift": [Function],
                                                                },
                                                                "arrayInsert": [Function],
                                                                "arrayMove": [Function],
                                                                "arrayPop": [Function],
                                                                "arrayPush": [Function],
                                                                "arrayRemove": [Function],
                                                                "arrayRemoveAll": [Function],
                                                                "arrayShift": [Function],
                                                                "arraySplice": [Function],
                                                                "arraySwap": [Function],
                                                                "arrayUnshift": [Function],
                                                                "asyncErrors": undefined,
                                                                "asyncValidate": [Function],
                                                                "asyncValidating": false,
                                                                "autofill": [Function],
                                                                "blur": [Function],
                                                                "change": [Function],
                                                                "clearAsyncError": [Function],
                                                                "clearFields": [Function],
                                                                "clearSubmit": [Function],
                                                                "clearSubmitErrors": [Function],
                                                                "closeModal": [Function],
                                                                "destroy": [Function],
                                                                "destroyOnUnmount": true,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "enableReinitialize": false,
                                                                "error": undefined,
                                                                "focus": [Function],
                                                                "forceUnregisterOnUnmount": false,
                                                                "form": "RegisterCluster",
                                                                "getFormState": [Function],
                                                                "getValues": [Function],
                                                                "history": Object {
                                                                  "action": "POP",
                                                                  "block": [Function],
                                                                  "canGo": [Function],
                                                                  "createHref": [Function],
                                                                  "entries": Array [
                                                                    Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                  ],
                                                                  "go": [Function],
                                                                  "goBack": [Function],
                                                                  "goForward": [Function],
                                                                  "index": 0,
                                                                  "length": 1,
                                                                  "listen": [Function],
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "push": [Function],
                                                                  "replace": [Function],
                                                                },
                                                                "initialValues": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "initialize": [Function],
                                                                "initialized": true,
                                                                "invalid": true,
                                                                "isOpen": false,
                                                                "keepDirtyOnReinitialize": false,
                                                                "location": Object {
                                                                  "hash": "",
                                                                  "key": "testKey",
                                                                  "pathname": "/register",
                                                                  "search": "",
                                                                },
                                                                "match": Object {
                                                                  "isExact": true,
                                                                  "params": Object {},
                                                                  "path": "/register",
                                                                  "url": "/register",
                                                                },
                                                                "onSubmit": [Function],
                                                                "openModal": [Function],
                                                                "persistentSubmitErrors": false,
                                                                "pristine": true,
                                                                "pure": true,
                                                                "register": [Function],
                                                                "registerClusterResponse": Object {
                                                                  "cluster": null,
                                                                  "error": false,
                                                                  "errorDetails": null,
                                                                  "errorMessage": "",
                                                                  "fulfilled": false,
                                                                  "pending": false,
                                                                  "valid": true,
                                                                },
                                                                "registerField": [Function],
                                                                "registerInnerOnSubmit": [Function],
                                                                "registeredFields": Object {
                                                                  "cluster_id": Object {
                                                                    "count": 31,
                                                                    "name": "cluster_id",
                                                                    "type": "Field",
                                                                  },
                                                                  "display_name": Object {
                                                                    "count": 31,
                                                                    "name": "display_name",
                                                                    "type": "Field",
                                                                  },
                                                                  "memory_gib": Object {
                                                                    "count": 31,
                                                                    "name": "memory_gib",
                                                                    "type": "Field",
                                                                  },
                                                                  "nodes_compute": Object {
                                                                    "count": 31,
                                                                    "name": "nodes_compute",
                                                                    "type": "Field",
                                                                  },
                                                                  "operating_system": Object {
                                                                    "count": 31,
                                                                    "name": "operating_system",
                                                                    "type": "Field",
                                                                  },
                                                                  "socket_num": Object {
                                                                    "count": 31,
                                                                    "name": "socket_num",
                                                                    "type": "Field",
                                                                  },
                                                                  "system_type": Object {
                                                                    "count": 31,
                                                                    "name": "system_type",
                                                                    "type": "Field",
                                                                  },
                                                                  "web_console_url": Object {
                                                                    "count": 31,
                                                                    "name": "web_console_url",
                                                                    "type": "Field",
                                                                  },
                                                                },
                                                                "reset": [Function],
                                                                "resetForm": [Function],
                                                                "resetResponse": [Function],
                                                                "resetSection": [Function],
                                                                "sectionPrefix": undefined,
                                                                "setSubmitFailed": [Function],
                                                                "setSubmitSucceeded": [Function],
                                                                "shouldAsyncValidate": [Function],
                                                                "shouldError": [Function],
                                                                "shouldValidate": [Function],
                                                                "shouldWarn": [Function],
                                                                "startAsyncValidation": [Function],
                                                                "startSubmit": [Function],
                                                                "staticContext": undefined,
                                                                "stopAsyncValidation": [Function],
                                                                "stopSubmit": [Function],
                                                                "submit": [Function],
                                                                "submitFailed": false,
                                                                "submitSucceeded": false,
                                                                "submitting": false,
                                                                "syncErrors": Object {
                                                                  "cluster_id": "Cluster ID is required.",
                                                                  "socket_num": "Field is required",
                                                                },
                                                                "syncWarnings": Object {},
                                                                "touch": [Function],
                                                                "touchOnBlur": true,
                                                                "touchOnChange": false,
                                                                "triggerSubmit": undefined,
                                                                "unregister": [Function],
                                                                "unregisterField": [Function],
                                                                "untouch": [Function],
                                                                "updateSyncErrors": [Function],
                                                                "updateSyncWarnings": [Function],
                                                                "updateUnregisteredFields": false,
                                                                "valid": false,
                                                                "validExceptSubmit": false,
                                                                "values": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            component={[Function]}
                                                            disabled={false}
                                                            inputMode="numeric"
                                                            isRequired={true}
                                                            label="Number of sockets or LPARs"
                                                            name="socket_num"
                                                            normalize={[Function]}
                                                            validate={
                                                              Array [
                                                                [Function],
                                                                [Function],
                                                              ]
                                                            }
                                                          >
                                                            <ConnectedField
                                                              _reduxForm={
                                                                Object {
                                                                  "anyTouched": false,
                                                                  "array": Object {
                                                                    "insert": [Function],
                                                                    "move": [Function],
                                                                    "pop": [Function],
                                                                    "push": [Function],
                                                                    "remove": [Function],
                                                                    "removeAll": [Function],
                                                                    "shift": [Function],
                                                                    "splice": [Function],
                                                                    "swap": [Function],
                                                                    "unshift": [Function],
                                                                  },
                                                                  "arrayInsert": [Function],
                                                                  "arrayMove": [Function],
                                                                  "arrayPop": [Function],
                                                                  "arrayPush": [Function],
                                                                  "arrayRemove": [Function],
                                                                  "arrayRemoveAll": [Function],
                                                                  "arrayShift": [Function],
                                                                  "arraySplice": [Function],
                                                                  "arraySwap": [Function],
                                                                  "arrayUnshift": [Function],
                                                                  "asyncErrors": undefined,
                                                                  "asyncValidate": [Function],
                                                                  "asyncValidating": false,
                                                                  "autofill": [Function],
                                                                  "blur": [Function],
                                                                  "change": [Function],
                                                                  "clearAsyncError": [Function],
                                                                  "clearFields": [Function],
                                                                  "clearSubmit": [Function],
                                                                  "clearSubmitErrors": [Function],
                                                                  "closeModal": [Function],
                                                                  "destroy": [Function],
                                                                  "destroyOnUnmount": true,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "enableReinitialize": false,
                                                                  "error": undefined,
                                                                  "focus": [Function],
                                                                  "forceUnregisterOnUnmount": false,
                                                                  "form": "RegisterCluster",
                                                                  "getFormState": [Function],
                                                                  "getValues": [Function],
                                                                  "history": Object {
                                                                    "action": "POP",
                                                                    "block": [Function],
                                                                    "canGo": [Function],
                                                                    "createHref": [Function],
                                                                    "entries": Array [
                                                                      Object {
                                                                        "hash": "",
                                                                        "key": "testKey",
                                                                        "pathname": "/register",
                                                                        "search": "",
                                                                      },
                                                                    ],
                                                                    "go": [Function],
                                                                    "goBack": [Function],
                                                                    "goForward": [Function],
                                                                    "index": 0,
                                                                    "length": 1,
                                                                    "listen": [Function],
                                                                    "location": Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                    "push": [Function],
                                                                    "replace": [Function],
                                                                  },
                                                                  "initialValues": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "initialize": [Function],
                                                                  "initialized": true,
                                                                  "invalid": true,
                                                                  "isOpen": false,
                                                                  "keepDirtyOnReinitialize": false,
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "match": Object {
                                                                    "isExact": true,
                                                                    "params": Object {},
                                                                    "path": "/register",
                                                                    "url": "/register",
                                                                  },
                                                                  "onSubmit": [Function],
                                                                  "openModal": [Function],
                                                                  "persistentSubmitErrors": false,
                                                                  "pristine": true,
                                                                  "pure": true,
                                                                  "register": [Function],
                                                                  "registerClusterResponse": Object {
                                                                    "cluster": null,
                                                                    "error": false,
                                                                    "errorDetails": null,
                                                                    "errorMessage": "",
                                                                    "fulfilled": false,
                                                                    "pending": false,
                                                                    "valid": true,
                                                                  },
                                                                  "registerField": [Function],
                                                                  "registerInnerOnSubmit": [Function],
                                                                  "registeredFields": Object {
                                                                    "cluster_id": Object {
                                                                      "count": 31,
                                                                      "name": "cluster_id",
                                                                      "type": "Field",
                                                                    },
                                                                    "display_name": Object {
                                                                      "count": 31,
                                                                      "name": "display_name",
                                                                      "type": "Field",
                                                                    },
                                                                    "memory_gib": Object {
                                                                      "count": 31,
                                                                      "name": "memory_gib",
                                                                      "type": "Field",
                                                                    },
                                                                    "nodes_compute": Object {
                                                                      "count": 31,
                                                                      "name": "nodes_compute",
                                                                      "type": "Field",
                                                                    },
                                                                    "operating_system": Object {
                                                                      "count": 31,
                                                                      "name": "operating_system",
                                                                      "type": "Field",
                                                                    },
                                                                    "socket_num": Object {
                                                                      "count": 31,
                                                                      "name": "socket_num",
                                                                      "type": "Field",
                                                                    },
                                                                    "system_type": Object {
                                                                      "count": 31,
                                                                      "name": "system_type",
                                                                      "type": "Field",
                                                                    },
                                                                    "web_console_url": Object {
                                                                      "count": 31,
                                                                      "name": "web_console_url",
                                                                      "type": "Field",
                                                                    },
                                                                  },
                                                                  "reset": [Function],
                                                                  "resetForm": [Function],
                                                                  "resetResponse": [Function],
                                                                  "resetSection": [Function],
                                                                  "sectionPrefix": undefined,
                                                                  "setSubmitFailed": [Function],
                                                                  "setSubmitSucceeded": [Function],
                                                                  "shouldAsyncValidate": [Function],
                                                                  "shouldError": [Function],
                                                                  "shouldValidate": [Function],
                                                                  "shouldWarn": [Function],
                                                                  "startAsyncValidation": [Function],
                                                                  "startSubmit": [Function],
                                                                  "staticContext": undefined,
                                                                  "stopAsyncValidation": [Function],
                                                                  "stopSubmit": [Function],
                                                                  "submit": [Function],
                                                                  "submitFailed": false,
                                                                  "submitSucceeded": false,
                                                                  "submitting": false,
                                                                  "syncErrors": Object {
                                                                    "cluster_id": "Cluster ID is required.",
                                                                    "socket_num": "Field is required",
                                                                  },
                                                                  "syncWarnings": Object {},
                                                                  "touch": [Function],
                                                                  "touchOnBlur": true,
                                                                  "touchOnChange": false,
                                                                  "triggerSubmit": undefined,
                                                                  "unregister": [Function],
                                                                  "unregisterField": [Function],
                                                                  "untouch": [Function],
                                                                  "updateSyncErrors": [Function],
                                                                  "updateSyncWarnings": [Function],
                                                                  "updateUnregisteredFields": false,
                                                                  "valid": false,
                                                                  "validExceptSubmit": false,
                                                                  "values": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              asyncValidating={false}
                                                              component={[Function]}
                                                              dirty={false}
                                                              disabled={false}
                                                              dispatch={[Function]}
                                                              initial=""
                                                              inputMode="numeric"
                                                              isRequired={true}
                                                              label="Number of sockets or LPARs"
                                                              name="socket_num"
                                                              normalize={[Function]}
                                                              pristine={true}
                                                              syncError="Field is required"
                                                              validate={
                                                                Array [
                                                                  [Function],
                                                                  [Function],
                                                                ]
                                                              }
                                                              value=""
                                                            >
                                                              <ReduxVerticalFormGroup
                                                                disabled={false}
                                                                helpText=""
                                                                input={
                                                                  Object {
                                                                    "name": "socket_num",
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onDragStart": [Function],
                                                                    "onDrop": [Function],
                                                                    "onFocus": [Function],
                                                                    "value": "",
                                                                  }
                                                                }
                                                                inputMode="numeric"
                                                                isRequired={true}
                                                                label="Number of sockets or LPARs"
                                                                meta={
                                                                  Object {
                                                                    "active": false,
                                                                    "asyncValidating": false,
                                                                    "autofilled": false,
                                                                    "dirty": false,
                                                                    "dispatch": [Function],
                                                                    "error": "Field is required",
                                                                    "form": "RegisterCluster",
                                                                    "initial": "",
                                                                    "invalid": true,
                                                                    "pristine": true,
                                                                    "submitFailed": false,
                                                                    "submitting": false,
                                                                    "touched": false,
                                                                    "valid": false,
                                                                    "visited": false,
                                                                    "warning": undefined,
                                                                  }
                                                                }
                                                                showHelpTextOnError={true}
                                                              >
                                                                <FormGroup
                                                                  fieldId="socket_num"
                                                                  helperText=""
                                                                  helperTextInvalid=""
                                                                  isRequired={true}
                                                                  label="Number of sockets or LPARs"
                                                                  validated="default"
                                                                >
                                                                  <div
                                                                    className="pf-c-form__group"
                                                                  >
                                                                    <div
                                                                      className="pf-c-form__group-label"
                                                                    >
                                                                      <label
                                                                        className="pf-c-form__label"
                                                                        htmlFor="socket_num"
                                                                      >
                                                                        <span
                                                                          className="pf-c-form__label-text"
                                                                        >
                                                                          Number of sockets or LPARs
                                                                        </span>
                                                                        <span
                                                                          aria-hidden="true"
                                                                          className="pf-c-form__label-required"
                                                                        >
                                                                           
                                                                          *
                                                                        </span>
                                                                      </label>
                                                                       
                                                                    </div>
                                                                    <div
                                                                      className="pf-c-form__group-control"
                                                                    >
                                                                      <ForwardRef
                                                                        id="socket_num"
                                                                        inputMode="numeric"
                                                                        isDisabled={false}
                                                                        isRequired={true}
                                                                        name="socket_num"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onDrop={[Function]}
                                                                        onFocus={[Function]}
                                                                        validated="default"
                                                                        value=""
                                                                      >
                                                                        <TextInputBase
                                                                          aria-label={null}
                                                                          className=""
                                                                          id="socket_num"
                                                                          innerRef={null}
                                                                          inputMode="numeric"
                                                                          isDisabled={false}
                                                                          isReadOnly={false}
                                                                          isRequired={true}
                                                                          name="socket_num"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onDragStart={[Function]}
                                                                          onDrop={[Function]}
                                                                          onFocus={[Function]}
                                                                          type="text"
                                                                          validated="default"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            aria-label={null}
                                                                            className="pf-c-form-control"
                                                                            disabled={false}
                                                                            id="socket_num"
                                                                            inputMode="numeric"
                                                                            name="socket_num"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onDragStart={[Function]}
                                                                            onDrop={[Function]}
                                                                            onFocus={[Function]}
                                                                            readOnly={false}
                                                                            required={true}
                                                                            type="text"
                                                                            value=""
                                                                          />
                                                                        </TextInputBase>
                                                                      </ForwardRef>
                                                                    </div>
                                                                  </div>
                                                                </FormGroup>
                                                              </ReduxVerticalFormGroup>
                                                            </ConnectedField>
                                                          </Connect(ConnectedField)>
                                                        </Field>
                                                        <Field
                                                          component={[Function]}
                                                          disabled={false}
                                                          inputMode="numeric"
                                                          label="Memory capacity (GiB)"
                                                          name="memory_gib"
                                                          step="any"
                                                          validate={[Function]}
                                                        >
                                                          <Connect(ConnectedField)
                                                            _reduxForm={
                                                              Object {
                                                                "anyTouched": false,
                                                                "array": Object {
                                                                  "insert": [Function],
                                                                  "move": [Function],
                                                                  "pop": [Function],
                                                                  "push": [Function],
                                                                  "remove": [Function],
                                                                  "removeAll": [Function],
                                                                  "shift": [Function],
                                                                  "splice": [Function],
                                                                  "swap": [Function],
                                                                  "unshift": [Function],
                                                                },
                                                                "arrayInsert": [Function],
                                                                "arrayMove": [Function],
                                                                "arrayPop": [Function],
                                                                "arrayPush": [Function],
                                                                "arrayRemove": [Function],
                                                                "arrayRemoveAll": [Function],
                                                                "arrayShift": [Function],
                                                                "arraySplice": [Function],
                                                                "arraySwap": [Function],
                                                                "arrayUnshift": [Function],
                                                                "asyncErrors": undefined,
                                                                "asyncValidate": [Function],
                                                                "asyncValidating": false,
                                                                "autofill": [Function],
                                                                "blur": [Function],
                                                                "change": [Function],
                                                                "clearAsyncError": [Function],
                                                                "clearFields": [Function],
                                                                "clearSubmit": [Function],
                                                                "clearSubmitErrors": [Function],
                                                                "closeModal": [Function],
                                                                "destroy": [Function],
                                                                "destroyOnUnmount": true,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "enableReinitialize": false,
                                                                "error": undefined,
                                                                "focus": [Function],
                                                                "forceUnregisterOnUnmount": false,
                                                                "form": "RegisterCluster",
                                                                "getFormState": [Function],
                                                                "getValues": [Function],
                                                                "history": Object {
                                                                  "action": "POP",
                                                                  "block": [Function],
                                                                  "canGo": [Function],
                                                                  "createHref": [Function],
                                                                  "entries": Array [
                                                                    Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                  ],
                                                                  "go": [Function],
                                                                  "goBack": [Function],
                                                                  "goForward": [Function],
                                                                  "index": 0,
                                                                  "length": 1,
                                                                  "listen": [Function],
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "push": [Function],
                                                                  "replace": [Function],
                                                                },
                                                                "initialValues": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "initialize": [Function],
                                                                "initialized": false,
                                                                "invalid": false,
                                                                "isOpen": false,
                                                                "keepDirtyOnReinitialize": false,
                                                                "location": Object {
                                                                  "hash": "",
                                                                  "key": "testKey",
                                                                  "pathname": "/register",
                                                                  "search": "",
                                                                },
                                                                "match": Object {
                                                                  "isExact": true,
                                                                  "params": Object {},
                                                                  "path": "/register",
                                                                  "url": "/register",
                                                                },
                                                                "onSubmit": [Function],
                                                                "openModal": [Function],
                                                                "persistentSubmitErrors": false,
                                                                "pristine": true,
                                                                "pure": true,
                                                                "register": [Function],
                                                                "registerClusterResponse": Object {
                                                                  "cluster": null,
                                                                  "error": false,
                                                                  "errorDetails": null,
                                                                  "errorMessage": "",
                                                                  "fulfilled": false,
                                                                  "pending": false,
                                                                  "valid": true,
                                                                },
                                                                "registerField": [Function],
                                                                "registerInnerOnSubmit": [Function],
                                                                "registeredFields": undefined,
                                                                "reset": [Function],
                                                                "resetForm": [Function],
                                                                "resetResponse": [Function],
                                                                "resetSection": [Function],
                                                                "sectionPrefix": undefined,
                                                                "setSubmitFailed": [Function],
                                                                "setSubmitSucceeded": [Function],
                                                                "shouldAsyncValidate": [Function],
                                                                "shouldError": [Function],
                                                                "shouldValidate": [Function],
                                                                "shouldWarn": [Function],
                                                                "startAsyncValidation": [Function],
                                                                "startSubmit": [Function],
                                                                "staticContext": undefined,
                                                                "stopAsyncValidation": [Function],
                                                                "stopSubmit": [Function],
                                                                "submit": [Function],
                                                                "submitFailed": false,
                                                                "submitSucceeded": false,
                                                                "submitting": false,
                                                                "syncErrors": Object {},
                                                                "syncWarnings": Object {},
                                                                "touch": [Function],
                                                                "touchOnBlur": true,
                                                                "touchOnChange": false,
                                                                "triggerSubmit": undefined,
                                                                "unregister": [Function],
                                                                "unregisterField": [Function],
                                                                "untouch": [Function],
                                                                "updateSyncErrors": [Function],
                                                                "updateSyncWarnings": [Function],
                                                                "updateUnregisteredFields": false,
                                                                "valid": true,
                                                                "validExceptSubmit": true,
                                                                "values": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            component={[Function]}
                                                            disabled={false}
                                                            inputMode="numeric"
                                                            label="Memory capacity (GiB)"
                                                            name="memory_gib"
                                                            normalize={[Function]}
                                                            step="any"
                                                            validate={[Function]}
                                                          >
                                                            <ConnectedField
                                                              _reduxForm={
                                                                Object {
                                                                  "anyTouched": false,
                                                                  "array": Object {
                                                                    "insert": [Function],
                                                                    "move": [Function],
                                                                    "pop": [Function],
                                                                    "push": [Function],
                                                                    "remove": [Function],
                                                                    "removeAll": [Function],
                                                                    "shift": [Function],
                                                                    "splice": [Function],
                                                                    "swap": [Function],
                                                                    "unshift": [Function],
                                                                  },
                                                                  "arrayInsert": [Function],
                                                                  "arrayMove": [Function],
                                                                  "arrayPop": [Function],
                                                                  "arrayPush": [Function],
                                                                  "arrayRemove": [Function],
                                                                  "arrayRemoveAll": [Function],
                                                                  "arrayShift": [Function],
                                                                  "arraySplice": [Function],
                                                                  "arraySwap": [Function],
                                                                  "arrayUnshift": [Function],
                                                                  "asyncErrors": undefined,
                                                                  "asyncValidate": [Function],
                                                                  "asyncValidating": false,
                                                                  "autofill": [Function],
                                                                  "blur": [Function],
                                                                  "change": [Function],
                                                                  "clearAsyncError": [Function],
                                                                  "clearFields": [Function],
                                                                  "clearSubmit": [Function],
                                                                  "clearSubmitErrors": [Function],
                                                                  "closeModal": [Function],
                                                                  "destroy": [Function],
                                                                  "destroyOnUnmount": true,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "enableReinitialize": false,
                                                                  "error": undefined,
                                                                  "focus": [Function],
                                                                  "forceUnregisterOnUnmount": false,
                                                                  "form": "RegisterCluster",
                                                                  "getFormState": [Function],
                                                                  "getValues": [Function],
                                                                  "history": Object {
                                                                    "action": "POP",
                                                                    "block": [Function],
                                                                    "canGo": [Function],
                                                                    "createHref": [Function],
                                                                    "entries": Array [
                                                                      Object {
                                                                        "hash": "",
                                                                        "key": "testKey",
                                                                        "pathname": "/register",
                                                                        "search": "",
                                                                      },
                                                                    ],
                                                                    "go": [Function],
                                                                    "goBack": [Function],
                                                                    "goForward": [Function],
                                                                    "index": 0,
                                                                    "length": 1,
                                                                    "listen": [Function],
                                                                    "location": Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                    "push": [Function],
                                                                    "replace": [Function],
                                                                  },
                                                                  "initialValues": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "initialize": [Function],
                                                                  "initialized": false,
                                                                  "invalid": false,
                                                                  "isOpen": false,
                                                                  "keepDirtyOnReinitialize": false,
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "match": Object {
                                                                    "isExact": true,
                                                                    "params": Object {},
                                                                    "path": "/register",
                                                                    "url": "/register",
                                                                  },
                                                                  "onSubmit": [Function],
                                                                  "openModal": [Function],
                                                                  "persistentSubmitErrors": false,
                                                                  "pristine": true,
                                                                  "pure": true,
                                                                  "register": [Function],
                                                                  "registerClusterResponse": Object {
                                                                    "cluster": null,
                                                                    "error": false,
                                                                    "errorDetails": null,
                                                                    "errorMessage": "",
                                                                    "fulfilled": false,
                                                                    "pending": false,
                                                                    "valid": true,
                                                                  },
                                                                  "registerField": [Function],
                                                                  "registerInnerOnSubmit": [Function],
                                                                  "registeredFields": undefined,
                                                                  "reset": [Function],
                                                                  "resetForm": [Function],
                                                                  "resetResponse": [Function],
                                                                  "resetSection": [Function],
                                                                  "sectionPrefix": undefined,
                                                                  "setSubmitFailed": [Function],
                                                                  "setSubmitSucceeded": [Function],
                                                                  "shouldAsyncValidate": [Function],
                                                                  "shouldError": [Function],
                                                                  "shouldValidate": [Function],
                                                                  "shouldWarn": [Function],
                                                                  "startAsyncValidation": [Function],
                                                                  "startSubmit": [Function],
                                                                  "staticContext": undefined,
                                                                  "stopAsyncValidation": [Function],
                                                                  "stopSubmit": [Function],
                                                                  "submit": [Function],
                                                                  "submitFailed": false,
                                                                  "submitSucceeded": false,
                                                                  "submitting": false,
                                                                  "syncErrors": Object {},
                                                                  "syncWarnings": Object {},
                                                                  "touch": [Function],
                                                                  "touchOnBlur": true,
                                                                  "touchOnChange": false,
                                                                  "triggerSubmit": undefined,
                                                                  "unregister": [Function],
                                                                  "unregisterField": [Function],
                                                                  "untouch": [Function],
                                                                  "updateSyncErrors": [Function],
                                                                  "updateSyncWarnings": [Function],
                                                                  "updateUnregisteredFields": false,
                                                                  "valid": true,
                                                                  "validExceptSubmit": true,
                                                                  "values": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              asyncValidating={false}
                                                              component={[Function]}
                                                              dirty={false}
                                                              disabled={false}
                                                              dispatch={[Function]}
                                                              initial=""
                                                              inputMode="numeric"
                                                              label="Memory capacity (GiB)"
                                                              name="memory_gib"
                                                              normalize={[Function]}
                                                              pristine={true}
                                                              step="any"
                                                              validate={[Function]}
                                                              value=""
                                                            >
                                                              <ReduxVerticalFormGroup
                                                                disabled={false}
                                                                helpText=""
                                                                input={
                                                                  Object {
                                                                    "name": "memory_gib",
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onDragStart": [Function],
                                                                    "onDrop": [Function],
                                                                    "onFocus": [Function],
                                                                    "value": "",
                                                                  }
                                                                }
                                                                inputMode="numeric"
                                                                isRequired={false}
                                                                label="Memory capacity (GiB)"
                                                                meta={
                                                                  Object {
                                                                    "active": false,
                                                                    "asyncValidating": false,
                                                                    "autofilled": false,
                                                                    "dirty": false,
                                                                    "dispatch": [Function],
                                                                    "error": undefined,
                                                                    "form": "RegisterCluster",
                                                                    "initial": "",
                                                                    "invalid": false,
                                                                    "pristine": true,
                                                                    "submitFailed": false,
                                                                    "submitting": false,
                                                                    "touched": false,
                                                                    "valid": true,
                                                                    "visited": false,
                                                                    "warning": undefined,
                                                                  }
                                                                }
                                                                showHelpTextOnError={true}
                                                                step="any"
                                                              >
                                                                <FormGroup
                                                                  fieldId="memory_gib"
                                                                  helperText=""
                                                                  helperTextInvalid=""
                                                                  isRequired={false}
                                                                  label="Memory capacity (GiB)"
                                                                  validated="default"
                                                                >
                                                                  <div
                                                                    className="pf-c-form__group"
                                                                  >
                                                                    <div
                                                                      className="pf-c-form__group-label"
                                                                    >
                                                                      <label
                                                                        className="pf-c-form__label"
                                                                        htmlFor="memory_gib"
                                                                      >
                                                                        <span
                                                                          className="pf-c-form__label-text"
                                                                        >
                                                                          Memory capacity (GiB)
                                                                        </span>
                                                                      </label>
                                                                       
                                                                    </div>
                                                                    <div
                                                                      className="pf-c-form__group-control"
                                                                    >
                                                                      <ForwardRef
                                                                        id="memory_gib"
                                                                        inputMode="numeric"
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        name="memory_gib"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onDrop={[Function]}
                                                                        onFocus={[Function]}
                                                                        step="any"
                                                                        validated="default"
                                                                        value=""
                                                                      >
                                                                        <TextInputBase
                                                                          aria-label={null}
                                                                          className=""
                                                                          id="memory_gib"
                                                                          innerRef={null}
                                                                          inputMode="numeric"
                                                                          isDisabled={false}
                                                                          isReadOnly={false}
                                                                          isRequired={false}
                                                                          name="memory_gib"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onDragStart={[Function]}
                                                                          onDrop={[Function]}
                                                                          onFocus={[Function]}
                                                                          step="any"
                                                                          type="text"
                                                                          validated="default"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            aria-label={null}
                                                                            className="pf-c-form-control"
                                                                            disabled={false}
                                                                            id="memory_gib"
                                                                            inputMode="numeric"
                                                                            name="memory_gib"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onDragStart={[Function]}
                                                                            onDrop={[Function]}
                                                                            onFocus={[Function]}
                                                                            readOnly={false}
                                                                            required={false}
                                                                            step="any"
                                                                            type="text"
                                                                            value=""
                                                                          />
                                                                        </TextInputBase>
                                                                      </ForwardRef>
                                                                    </div>
                                                                  </div>
                                                                </FormGroup>
                                                              </ReduxVerticalFormGroup>
                                                            </ConnectedField>
                                                          </Connect(ConnectedField)>
                                                        </Field>
                                                        <Field
                                                          component={[Function]}
                                                          disabled={false}
                                                          inputMode="numeric"
                                                          label="Number of compute nodes"
                                                          name="nodes_compute"
                                                          validate={[Function]}
                                                        >
                                                          <Connect(ConnectedField)
                                                            _reduxForm={
                                                              Object {
                                                                "anyTouched": false,
                                                                "array": Object {
                                                                  "insert": [Function],
                                                                  "move": [Function],
                                                                  "pop": [Function],
                                                                  "push": [Function],
                                                                  "remove": [Function],
                                                                  "removeAll": [Function],
                                                                  "shift": [Function],
                                                                  "splice": [Function],
                                                                  "swap": [Function],
                                                                  "unshift": [Function],
                                                                },
                                                                "arrayInsert": [Function],
                                                                "arrayMove": [Function],
                                                                "arrayPop": [Function],
                                                                "arrayPush": [Function],
                                                                "arrayRemove": [Function],
                                                                "arrayRemoveAll": [Function],
                                                                "arrayShift": [Function],
                                                                "arraySplice": [Function],
                                                                "arraySwap": [Function],
                                                                "arrayUnshift": [Function],
                                                                "asyncErrors": undefined,
                                                                "asyncValidate": [Function],
                                                                "asyncValidating": false,
                                                                "autofill": [Function],
                                                                "blur": [Function],
                                                                "change": [Function],
                                                                "clearAsyncError": [Function],
                                                                "clearFields": [Function],
                                                                "clearSubmit": [Function],
                                                                "clearSubmitErrors": [Function],
                                                                "closeModal": [Function],
                                                                "destroy": [Function],
                                                                "destroyOnUnmount": true,
                                                                "dirty": false,
                                                                "dispatch": [Function],
                                                                "enableReinitialize": false,
                                                                "error": undefined,
                                                                "focus": [Function],
                                                                "forceUnregisterOnUnmount": false,
                                                                "form": "RegisterCluster",
                                                                "getFormState": [Function],
                                                                "getValues": [Function],
                                                                "history": Object {
                                                                  "action": "POP",
                                                                  "block": [Function],
                                                                  "canGo": [Function],
                                                                  "createHref": [Function],
                                                                  "entries": Array [
                                                                    Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                  ],
                                                                  "go": [Function],
                                                                  "goBack": [Function],
                                                                  "goForward": [Function],
                                                                  "index": 0,
                                                                  "length": 1,
                                                                  "listen": [Function],
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "push": [Function],
                                                                  "replace": [Function],
                                                                },
                                                                "initialValues": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "initialize": [Function],
                                                                "initialized": false,
                                                                "invalid": false,
                                                                "isOpen": false,
                                                                "keepDirtyOnReinitialize": false,
                                                                "location": Object {
                                                                  "hash": "",
                                                                  "key": "testKey",
                                                                  "pathname": "/register",
                                                                  "search": "",
                                                                },
                                                                "match": Object {
                                                                  "isExact": true,
                                                                  "params": Object {},
                                                                  "path": "/register",
                                                                  "url": "/register",
                                                                },
                                                                "onSubmit": [Function],
                                                                "openModal": [Function],
                                                                "persistentSubmitErrors": false,
                                                                "pristine": true,
                                                                "pure": true,
                                                                "register": [Function],
                                                                "registerClusterResponse": Object {
                                                                  "cluster": null,
                                                                  "error": false,
                                                                  "errorDetails": null,
                                                                  "errorMessage": "",
                                                                  "fulfilled": false,
                                                                  "pending": false,
                                                                  "valid": true,
                                                                },
                                                                "registerField": [Function],
                                                                "registerInnerOnSubmit": [Function],
                                                                "registeredFields": undefined,
                                                                "reset": [Function],
                                                                "resetForm": [Function],
                                                                "resetResponse": [Function],
                                                                "resetSection": [Function],
                                                                "sectionPrefix": undefined,
                                                                "setSubmitFailed": [Function],
                                                                "setSubmitSucceeded": [Function],
                                                                "shouldAsyncValidate": [Function],
                                                                "shouldError": [Function],
                                                                "shouldValidate": [Function],
                                                                "shouldWarn": [Function],
                                                                "startAsyncValidation": [Function],
                                                                "startSubmit": [Function],
                                                                "staticContext": undefined,
                                                                "stopAsyncValidation": [Function],
                                                                "stopSubmit": [Function],
                                                                "submit": [Function],
                                                                "submitFailed": false,
                                                                "submitSucceeded": false,
                                                                "submitting": false,
                                                                "syncErrors": Object {},
                                                                "syncWarnings": Object {},
                                                                "touch": [Function],
                                                                "touchOnBlur": true,
                                                                "touchOnChange": false,
                                                                "triggerSubmit": undefined,
                                                                "unregister": [Function],
                                                                "unregisterField": [Function],
                                                                "untouch": [Function],
                                                                "updateSyncErrors": [Function],
                                                                "updateSyncWarnings": [Function],
                                                                "updateUnregisteredFields": false,
                                                                "valid": true,
                                                                "validExceptSubmit": true,
                                                                "values": Object {
                                                                  "cluster_id": "",
                                                                  "display_name": "",
                                                                  "memory_gib": "",
                                                                  "nodes_compute": "",
                                                                  "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                  "socket_num": "",
                                                                  "system_type": "physical",
                                                                  "vcpu_num": "",
                                                                  "web_console_url": "",
                                                                },
                                                                "warning": undefined,
                                                              }
                                                            }
                                                            component={[Function]}
                                                            disabled={false}
                                                            inputMode="numeric"
                                                            label="Number of compute nodes"
                                                            name="nodes_compute"
                                                            normalize={[Function]}
                                                            validate={[Function]}
                                                          >
                                                            <ConnectedField
                                                              _reduxForm={
                                                                Object {
                                                                  "anyTouched": false,
                                                                  "array": Object {
                                                                    "insert": [Function],
                                                                    "move": [Function],
                                                                    "pop": [Function],
                                                                    "push": [Function],
                                                                    "remove": [Function],
                                                                    "removeAll": [Function],
                                                                    "shift": [Function],
                                                                    "splice": [Function],
                                                                    "swap": [Function],
                                                                    "unshift": [Function],
                                                                  },
                                                                  "arrayInsert": [Function],
                                                                  "arrayMove": [Function],
                                                                  "arrayPop": [Function],
                                                                  "arrayPush": [Function],
                                                                  "arrayRemove": [Function],
                                                                  "arrayRemoveAll": [Function],
                                                                  "arrayShift": [Function],
                                                                  "arraySplice": [Function],
                                                                  "arraySwap": [Function],
                                                                  "arrayUnshift": [Function],
                                                                  "asyncErrors": undefined,
                                                                  "asyncValidate": [Function],
                                                                  "asyncValidating": false,
                                                                  "autofill": [Function],
                                                                  "blur": [Function],
                                                                  "change": [Function],
                                                                  "clearAsyncError": [Function],
                                                                  "clearFields": [Function],
                                                                  "clearSubmit": [Function],
                                                                  "clearSubmitErrors": [Function],
                                                                  "closeModal": [Function],
                                                                  "destroy": [Function],
                                                                  "destroyOnUnmount": true,
                                                                  "dirty": false,
                                                                  "dispatch": [Function],
                                                                  "enableReinitialize": false,
                                                                  "error": undefined,
                                                                  "focus": [Function],
                                                                  "forceUnregisterOnUnmount": false,
                                                                  "form": "RegisterCluster",
                                                                  "getFormState": [Function],
                                                                  "getValues": [Function],
                                                                  "history": Object {
                                                                    "action": "POP",
                                                                    "block": [Function],
                                                                    "canGo": [Function],
                                                                    "createHref": [Function],
                                                                    "entries": Array [
                                                                      Object {
                                                                        "hash": "",
                                                                        "key": "testKey",
                                                                        "pathname": "/register",
                                                                        "search": "",
                                                                      },
                                                                    ],
                                                                    "go": [Function],
                                                                    "goBack": [Function],
                                                                    "goForward": [Function],
                                                                    "index": 0,
                                                                    "length": 1,
                                                                    "listen": [Function],
                                                                    "location": Object {
                                                                      "hash": "",
                                                                      "key": "testKey",
                                                                      "pathname": "/register",
                                                                      "search": "",
                                                                    },
                                                                    "push": [Function],
                                                                    "replace": [Function],
                                                                  },
                                                                  "initialValues": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "initialize": [Function],
                                                                  "initialized": false,
                                                                  "invalid": false,
                                                                  "isOpen": false,
                                                                  "keepDirtyOnReinitialize": false,
                                                                  "location": Object {
                                                                    "hash": "",
                                                                    "key": "testKey",
                                                                    "pathname": "/register",
                                                                    "search": "",
                                                                  },
                                                                  "match": Object {
                                                                    "isExact": true,
                                                                    "params": Object {},
                                                                    "path": "/register",
                                                                    "url": "/register",
                                                                  },
                                                                  "onSubmit": [Function],
                                                                  "openModal": [Function],
                                                                  "persistentSubmitErrors": false,
                                                                  "pristine": true,
                                                                  "pure": true,
                                                                  "register": [Function],
                                                                  "registerClusterResponse": Object {
                                                                    "cluster": null,
                                                                    "error": false,
                                                                    "errorDetails": null,
                                                                    "errorMessage": "",
                                                                    "fulfilled": false,
                                                                    "pending": false,
                                                                    "valid": true,
                                                                  },
                                                                  "registerField": [Function],
                                                                  "registerInnerOnSubmit": [Function],
                                                                  "registeredFields": undefined,
                                                                  "reset": [Function],
                                                                  "resetForm": [Function],
                                                                  "resetResponse": [Function],
                                                                  "resetSection": [Function],
                                                                  "sectionPrefix": undefined,
                                                                  "setSubmitFailed": [Function],
                                                                  "setSubmitSucceeded": [Function],
                                                                  "shouldAsyncValidate": [Function],
                                                                  "shouldError": [Function],
                                                                  "shouldValidate": [Function],
                                                                  "shouldWarn": [Function],
                                                                  "startAsyncValidation": [Function],
                                                                  "startSubmit": [Function],
                                                                  "staticContext": undefined,
                                                                  "stopAsyncValidation": [Function],
                                                                  "stopSubmit": [Function],
                                                                  "submit": [Function],
                                                                  "submitFailed": false,
                                                                  "submitSucceeded": false,
                                                                  "submitting": false,
                                                                  "syncErrors": Object {},
                                                                  "syncWarnings": Object {},
                                                                  "touch": [Function],
                                                                  "touchOnBlur": true,
                                                                  "touchOnChange": false,
                                                                  "triggerSubmit": undefined,
                                                                  "unregister": [Function],
                                                                  "unregisterField": [Function],
                                                                  "untouch": [Function],
                                                                  "updateSyncErrors": [Function],
                                                                  "updateSyncWarnings": [Function],
                                                                  "updateUnregisteredFields": false,
                                                                  "valid": true,
                                                                  "validExceptSubmit": true,
                                                                  "values": Object {
                                                                    "cluster_id": "",
                                                                    "display_name": "",
                                                                    "memory_gib": "",
                                                                    "nodes_compute": "",
                                                                    "operating_system": "Red Hat Enterprise Linux CoreOS",
                                                                    "socket_num": "",
                                                                    "system_type": "physical",
                                                                    "vcpu_num": "",
                                                                    "web_console_url": "",
                                                                  },
                                                                  "warning": undefined,
                                                                }
                                                              }
                                                              asyncValidating={false}
                                                              component={[Function]}
                                                              dirty={false}
                                                              disabled={false}
                                                              dispatch={[Function]}
                                                              initial=""
                                                              inputMode="numeric"
                                                              label="Number of compute nodes"
                                                              name="nodes_compute"
                                                              normalize={[Function]}
                                                              pristine={true}
                                                              validate={[Function]}
                                                              value=""
                                                            >
                                                              <ReduxVerticalFormGroup
                                                                disabled={false}
                                                                helpText=""
                                                                input={
                                                                  Object {
                                                                    "name": "nodes_compute",
                                                                    "onBlur": [Function],
                                                                    "onChange": [Function],
                                                                    "onDragStart": [Function],
                                                                    "onDrop": [Function],
                                                                    "onFocus": [Function],
                                                                    "value": "",
                                                                  }
                                                                }
                                                                inputMode="numeric"
                                                                isRequired={false}
                                                                label="Number of compute nodes"
                                                                meta={
                                                                  Object {
                                                                    "active": false,
                                                                    "asyncValidating": false,
                                                                    "autofilled": false,
                                                                    "dirty": false,
                                                                    "dispatch": [Function],
                                                                    "error": undefined,
                                                                    "form": "RegisterCluster",
                                                                    "initial": "",
                                                                    "invalid": false,
                                                                    "pristine": true,
                                                                    "submitFailed": false,
                                                                    "submitting": false,
                                                                    "touched": false,
                                                                    "valid": true,
                                                                    "visited": false,
                                                                    "warning": undefined,
                                                                  }
                                                                }
                                                                showHelpTextOnError={true}
                                                              >
                                                                <FormGroup
                                                                  fieldId="nodes_compute"
                                                                  helperText=""
                                                                  helperTextInvalid=""
                                                                  isRequired={false}
                                                                  label="Number of compute nodes"
                                                                  validated="default"
                                                                >
                                                                  <div
                                                                    className="pf-c-form__group"
                                                                  >
                                                                    <div
                                                                      className="pf-c-form__group-label"
                                                                    >
                                                                      <label
                                                                        className="pf-c-form__label"
                                                                        htmlFor="nodes_compute"
                                                                      >
                                                                        <span
                                                                          className="pf-c-form__label-text"
                                                                        >
                                                                          Number of compute nodes
                                                                        </span>
                                                                      </label>
                                                                       
                                                                    </div>
                                                                    <div
                                                                      className="pf-c-form__group-control"
                                                                    >
                                                                      <ForwardRef
                                                                        id="nodes_compute"
                                                                        inputMode="numeric"
                                                                        isDisabled={false}
                                                                        isRequired={false}
                                                                        name="nodes_compute"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onDragStart={[Function]}
                                                                        onDrop={[Function]}
                                                                        onFocus={[Function]}
                                                                        validated="default"
                                                                        value=""
                                                                      >
                                                                        <TextInputBase
                                                                          aria-label={null}
                                                                          className=""
                                                                          id="nodes_compute"
                                                                          innerRef={null}
                                                                          inputMode="numeric"
                                                                          isDisabled={false}
                                                                          isReadOnly={false}
                                                                          isRequired={false}
                                                                          name="nodes_compute"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onDragStart={[Function]}
                                                                          onDrop={[Function]}
                                                                          onFocus={[Function]}
                                                                          type="text"
                                                                          validated="default"
                                                                          value=""
                                                                        >
                                                                          <input
                                                                            aria-invalid={false}
                                                                            aria-label={null}
                                                                            className="pf-c-form-control"
                                                                            disabled={false}
                                                                            id="nodes_compute"
                                                                            inputMode="numeric"
                                                                            name="nodes_compute"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            onDragStart={[Function]}
                                                                            onDrop={[Function]}
                                                                            onFocus={[Function]}
                                                                            readOnly={false}
                                                                            required={false}
                                                                            type="text"
                                                                            value=""
                                                                          />
                                                                        </TextInputBase>
                                                                      </ForwardRef>
                                                                    </div>
                                                                  </div>
                                                                </FormGroup>
                                                              </ReduxVerticalFormGroup>
                                                            </ConnectedField>
                                                          </Connect(ConnectedField)>
                                                        </Field>
                                                      </form>
                                                    </Form>
                                                  </div>
                                                </GridItem>
                                              </div>
                                            </Grid>
                                          </div>
                                        </CardBody>
                                        <CardFooter>
                                          <div
                                            className="pf-c-card__footer"
                                          >
                                            <Button
                                              isDisabled={false}
                                              onClick={[Function]}
                                              type="submit"
                                              variant="primary"
                                            >
                                              <button
                                                aria-disabled={false}
                                                aria-label={null}
                                                className="pf-c-button pf-m-primary"
                                                data-ouia-component-id={38041}
                                                data-ouia-component-type="PF4/Button"
                                                data-ouia-safe={true}
                                                disabled={false}
                                                onClick={[Function]}
                                                type="submit"
                                              >
                                                Register cluster
                                              </button>
                                            </Button>
                                            <Link
                                              replace={false}
                                              to="/"
                                            >
                                              <a
                                                href="/"
                                                onClick={[Function]}
                                              >
                                                <Button
                                                  isDisabled={false}
                                                  variant="secondary"
                                                >
                                                  <button
                                                    aria-disabled={false}
                                                    aria-label={null}
                                                    className="pf-c-button pf-m-secondary"
                                                    data-ouia-component-id={38042}
                                                    data-ouia-component-type="PF4/Button"
                                                    data-ouia-safe={true}
                                                    disabled={false}
                                                    type="button"
                                                  >
                                                    Cancel
                                                  </button>
                                                </Button>
                                              </a>
                                            </Link>
                                          </div>
                                        </CardFooter>
                                      </article>
                                    </Card>
                                  </section>
                                </PageSection>
                              </RegisterCluster>
                            </Form(RegisterCluster)>
                          </Connect(Form(RegisterCluster))>
                        </ReduxForm>
                      </Connect(ReduxForm)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /subscriptions 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/subscriptions",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/subscriptions",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/subscriptions",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/subscriptions",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/subscriptions",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/subscriptions",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/subscriptions",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/subscriptions",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/subscriptions",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/subscriptions",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/subscriptions",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/subscriptions",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/subscriptions",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/subscriptions",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/subscriptions",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/subscriptions",
                          "url": "/subscriptions",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/subscriptions",
                          "search": "",
                        }
                      }
                      path="/subscriptions"
                    >
                      <Connect(Subscriptions)
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/subscriptions",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/subscriptions",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/subscriptions",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/subscriptions",
                            "url": "/subscriptions",
                          }
                        }
                      >
                        <Subscriptions
                          account={
                            Object {
                              "data": Object {},
                              "error": false,
                              "errorDetails": null,
                              "errorMessage": "",
                              "fulfilled": false,
                              "pending": true,
                              "valid": false,
                            }
                          }
                          fetchAccount={[Function]}
                          history={
                            Object {
                              "action": "POP",
                              "block": [Function],
                              "canGo": [Function],
                              "createHref": [Function],
                              "entries": Array [
                                Object {
                                  "hash": "",
                                  "key": "testKey",
                                  "pathname": "/subscriptions",
                                  "search": "",
                                },
                              ],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "index": 0,
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/subscriptions",
                                "search": "",
                              },
                              "push": [Function],
                              "replace": [Function],
                            }
                          }
                          invalidateClusters={[Function]}
                          location={
                            Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/subscriptions",
                              "search": "",
                            }
                          }
                          match={
                            Object {
                              "isExact": true,
                              "params": Object {},
                              "path": "/subscriptions",
                              "url": "/subscriptions",
                            }
                          }
                        >
                          <SubscriptionNotFulfilled
                            data={
                              Object {
                                "error": false,
                                "pending": true,
                                "type": "account",
                              }
                            }
                            refresh={[Function]}
                          >
                            <PageSection>
                              <section
                                className="pf-c-page__main-section"
                              >
                                <Spinner
                                  centered={true}
                                >
                                  <div
                                    className="ins-c-spinner ins-m-center"
                                    role="status"
                                  >
                                    <span
                                      className="pf-u-screen-reader"
                                    >
                                      Loading...
                                    </span>
                                  </div>
                                </Spinner>
                              </section>
                            </PageSection>
                          </SubscriptionNotFulfilled>
                        </Subscriptions>
                      </Connect(Subscriptions)>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /token 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/token",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/token",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/token",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/token",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/token",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/token",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/token",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/token",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/token",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/token",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/token",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/token",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/token",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/token",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/token",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/token",
                          "url": "/token",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/token",
                          "search": "",
                        }
                      }
                      path="/token"
                    >
                      <Tokens
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/token",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/token",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/token",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/token",
                            "url": "/token",
                          }
                        }
                      >
                        <PageHeader>
                          <section
                            className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                            widget-type="InsightsPageHeader"
                          >
                            <PageHeaderTitle
                              title="OpenShift Cluster Manager API Token"
                            >
                              <Title
                                className=""
                                headingLevel="h1"
                                size="2xl"
                                widget-type="InsightsPageHeaderTitle"
                              >
                                <h1
                                  className="pf-c-title pf-m-2xl"
                                  widget-type="InsightsPageHeaderTitle"
                                >
                                   
                                  OpenShift Cluster Manager API Token
                                   
                                </h1>
                              </Title>
                            </PageHeaderTitle>
                          </section>
                        </PageHeader>
                        <PageSection>
                          <section
                            className="pf-c-page__main-section"
                          >
                            <Card
                              className="ins-c-card__skeleton"
                            >
                              <article
                                className="pf-c-card ins-c-card__skeleton"
                              >
                                <CardTitle>
                                  <div
                                    className="pf-c-card__title"
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="md"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__md"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </div>
                                </CardTitle>
                                <CardBody>
                                  <div
                                    className="pf-c-card__body"
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </div>
                                </CardBody>
                                <CardFooter>
                                  <div
                                    className="pf-c-card__footer"
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="sm"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__sm"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </div>
                                </CardFooter>
                              </article>
                            </Card>
                          </section>
                        </PageSection>
                      </Tokens>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;

exports[`Every route should render:  /token/moa 1`] = `
<Provider
  store={
    Object {
      "dispatch": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
      Symbol(observable): [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        Object {
          "key": "testKey",
          "pathname": "/token/moa",
        },
      ]
    }
    keyLength={0}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/token/moa",
              "search": "",
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 0,
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "testKey",
            "pathname": "/token/moa",
            "search": "",
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <withRouter(Router)>
        <Route>
          <Router
            history={
              Object {
                "action": "POP",
                "block": [Function],
                "canGo": [Function],
                "createHref": [Function],
                "entries": Array [
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/token/moa",
                    "search": "",
                  },
                ],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "index": 0,
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "key": "testKey",
                  "pathname": "/token/moa",
                  "search": "",
                },
                "push": [Function],
                "replace": [Function],
              }
            }
            location={
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/token/moa",
                "search": "",
              }
            }
            match={
              Object {
                "isExact": false,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
          >
            <Insights
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/token/moa",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/token/moa",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            />
            <Connect(ConnectedRouter)
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "canGo": [Function],
                  "createHref": [Function],
                  "entries": Array [
                    Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/token/moa",
                      "search": "",
                    },
                  ],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "index": 0,
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/token/moa",
                    "search": "",
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
            >
              <ConnectedRouter
                action="POP"
                history={
                  Object {
                    "action": "POP",
                    "block": [Function],
                    "canGo": [Function],
                    "createHref": [Function],
                    "entries": Array [
                      Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/token/moa",
                        "search": "",
                      },
                    ],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "index": 0,
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "key": "testKey",
                      "pathname": "/token/moa",
                      "search": "",
                    },
                    "push": [Function],
                    "replace": [Function],
                  }
                }
                location={
                  Object {
                    "hash": "",
                    "key": "testKey",
                    "pathname": "/token/moa",
                    "search": "",
                  }
                }
                onLocationChanged={[Function]}
              >
                <Router
                  history={
                    Object {
                      "action": "POP",
                      "block": [Function],
                      "canGo": [Function],
                      "createHref": [Function],
                      "entries": Array [
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/token/moa",
                          "search": "",
                        },
                      ],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "index": 0,
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "key": "testKey",
                        "pathname": "/token/moa",
                        "search": "",
                      },
                      "push": [Function],
                      "replace": [Function],
                    }
                  }
                >
                  <Switch>
                    <Route
                      component={[Function]}
                      computedMatch={
                        Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/token/moa",
                          "url": "/token/moa",
                        }
                      }
                      location={
                        Object {
                          "hash": "",
                          "key": "testKey",
                          "pathname": "/token/moa",
                          "search": "",
                        }
                      }
                      path="/token/moa"
                    >
                      <TokensMOA
                        history={
                          Object {
                            "action": "POP",
                            "block": [Function],
                            "canGo": [Function],
                            "createHref": [Function],
                            "entries": Array [
                              Object {
                                "hash": "",
                                "key": "testKey",
                                "pathname": "/token/moa",
                                "search": "",
                              },
                            ],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "index": 0,
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "key": "testKey",
                              "pathname": "/token/moa",
                              "search": "",
                            },
                            "push": [Function],
                            "replace": [Function],
                          }
                        }
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/token/moa",
                            "search": "",
                          }
                        }
                        match={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/token/moa",
                            "url": "/token/moa",
                          }
                        }
                      >
                        <PageHeader>
                          <section
                            className="pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light"
                            widget-type="InsightsPageHeader"
                          >
                            <PageHeaderTitle
                              title="Red Hat Managed OpenShift on AWS"
                            >
                              <Title
                                className=""
                                headingLevel="h1"
                                size="2xl"
                                widget-type="InsightsPageHeaderTitle"
                              >
                                <h1
                                  className="pf-c-title pf-m-2xl"
                                  widget-type="InsightsPageHeaderTitle"
                                >
                                   
                                  Red Hat Managed OpenShift on AWS
                                   
                                </h1>
                              </Title>
                            </PageHeaderTitle>
                          </section>
                        </PageHeader>
                        <PageSection>
                          <section
                            className="pf-c-page__main-section"
                          >
                            <Card
                              className="ins-c-card__skeleton"
                            >
                              <article
                                className="pf-c-card ins-c-card__skeleton"
                              >
                                <CardTitle>
                                  <div
                                    className="pf-c-card__title"
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="md"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__md"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </div>
                                </CardTitle>
                                <CardBody>
                                  <div
                                    className="pf-c-card__body"
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="lg"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__lg"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </div>
                                </CardBody>
                                <CardFooter>
                                  <div
                                    className="pf-c-card__footer"
                                  >
                                    <Skeleton
                                      isDark={false}
                                      size="sm"
                                    >
                                      <div
                                        className="ins-c-skeleton ins-c-skeleton__sm"
                                      >
                                         
                                      </div>
                                    </Skeleton>
                                  </div>
                                </CardFooter>
                              </article>
                            </Card>
                          </section>
                        </PageSection>
                      </TokensMOA>
                    </Route>
                  </Switch>
                </Router>
              </ConnectedRouter>
            </Connect(ConnectedRouter)>
          </Router>
        </Route>
      </withRouter(Router)>
    </Router>
  </MemoryRouter>
</Provider>
`;
