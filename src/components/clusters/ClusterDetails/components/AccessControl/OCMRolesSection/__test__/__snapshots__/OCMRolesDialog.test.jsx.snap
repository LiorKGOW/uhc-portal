// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<OCMRolesDialog /> should render 1`] = `
<Modal
  id="ocm-roles-access-dialog"
  isPrimaryDisabled={false}
  onClose={[Function]}
  onPrimaryClick={[Function]}
  onSecondaryClick={[Function]}
  primaryText="Edit role"
  secondaryText="Cancel"
  title="Edit role"
>
  <p
    className="pf-u-mb-xl"
  >
    Allow users in your organization to edit or view clusters. These permissions only apply to cluster management in OpenShift Cluster Manager.
  </p>
  <Form
    className="control-form-cursor"
    onSubmit={[Function]}
  >
    <FormGroup
      fieldId="username"
      helperTextInvalid=""
      isRequired={true}
      label={
        <React.Fragment>
          <span>
            Red Hat login
          </span>
          <PopoverHint
            hasAutoWidth={true}
            hint={
              <TextContent>
                <Text
                  component="p"
                >
                  Your Red Hat login is the username you use to access your Red Hat account.
                </Text>
              </TextContent>
            }
            iconClassName="text-input-tootip-icon"
            id="ocm-roles-section-username-tooltip"
            maxWidth="20.0rem"
          />
        </React.Fragment>
      }
      validated="default"
    >
      <TextInput
        aria-label="username"
        id="username"
        isDisabled={true}
        isRequired={true}
        onChange={[Function]}
        type="text"
        validated="default"
        value={null}
      />
    </FormGroup>
    <FormGroup
      isRequired={true}
      label="Role"
    >
      <Select
        aria-describedby=""
        aria-invalid={false}
        aria-label=""
        aria-labelledby=""
        chipGroupComponent={null}
        className=""
        clearSelectionsAriaLabel="Clear all"
        createText="Create"
        customBadgeText={null}
        customContent={null}
        direction="down"
        favorites={Array []}
        favoritesLabel="Favorites"
        hasInlineFilter={false}
        hasPlaceholderStyle={false}
        inlineFilterPlaceholderText={null}
        inputAutoComplete="off"
        inputIdPrefix=""
        isCreatable={false}
        isCreateOptionOnTop={false}
        isCreateSelectOptionObject={false}
        isDisabled={false}
        isFlipEnabled={true}
        isGrouped={false}
        isInputFilterPersisted={false}
        isInputValuePersisted={false}
        isOpen={false}
        isPlain={false}
        menuAppendTo={[Function]}
        noResultsFoundText="No results found"
        onClear={[Function]}
        onCreateOption={[Function]}
        onFilter={null}
        onSelect={[Function]}
        onToggle={[Function]}
        onTypeaheadInputChanged={null}
        ouiaSafe={true}
        placeholderText=""
        position="left"
        removeFindDomNode={false}
        removeSelectionAriaLabel="Remove"
        selections={null}
        shouldResetOnSelect={true}
        toggleAriaLabel="Options menu"
        toggleIcon={null}
        toggleId={null}
        toggleIndicator={null}
        typeAheadAriaDescribedby=""
        typeAheadAriaLabel=""
        validated="default"
        variant="single"
        width=""
        zIndex={9999}
      >
        <SelectOption
          className=""
          component="button"
          description="Cluster editor role will allow users or groups to manage and configure the cluster."
          index={0}
          inputId=""
          isChecked={false}
          isDisabled={false}
          isFavorite={null}
          isLastOptionBeforeFooter={[Function]}
          isLoad={false}
          isLoading={false}
          isNoResultsOption={false}
          isPlaceholder={false}
          isSelected={false}
          key="ClusterEditor"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          setViewMoreNextIndex={[Function]}
          value="ClusterEditor"
        >
          Cluster editor
        </SelectOption>
        <SelectOption
          className=""
          component="button"
          description="Cluster viewer role will allow users or groups to view cluster details only."
          index={0}
          inputId=""
          isChecked={false}
          isDisabled={false}
          isFavorite={null}
          isLastOptionBeforeFooter={[Function]}
          isLoad={false}
          isLoading={false}
          isNoResultsOption={false}
          isPlaceholder={false}
          isSelected={false}
          key="ClusterViewer"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          setViewMoreNextIndex={[Function]}
          value="ClusterViewer"
        >
          Cluster viewer
        </SelectOption>
        <SelectOption
          className=""
          component="button"
          description="Cluster autoscaler editor role will allow users or groups to manage and configure the cluster autoscaler settings."
          index={0}
          inputId=""
          isChecked={false}
          isDisabled={false}
          isFavorite={null}
          isLastOptionBeforeFooter={[Function]}
          isLoad={false}
          isLoading={false}
          isNoResultsOption={false}
          isPlaceholder={false}
          isSelected={false}
          key="ClusterAutoscalerEditor"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          setViewMoreNextIndex={[Function]}
          value="ClusterAutoscalerEditor"
        >
          Cluster autoscaler editor
        </SelectOption>
        <SelectOption
          className=""
          component="button"
          description="Identity provider editor role will allow users or groups to manage and configure the identity providers."
          index={0}
          inputId=""
          isChecked={false}
          isDisabled={false}
          isFavorite={null}
          isLastOptionBeforeFooter={[Function]}
          isLoad={false}
          isLoading={false}
          isNoResultsOption={false}
          isPlaceholder={false}
          isSelected={false}
          key="IdpEditor"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          setViewMoreNextIndex={[Function]}
          value="IdpEditor"
        >
          Identity provider editor
        </SelectOption>
        <SelectOption
          className=""
          component="button"
          description="Machine pool editor role will allow users or groups to manage and configure the machine pools."
          index={0}
          inputId=""
          isChecked={false}
          isDisabled={false}
          isFavorite={null}
          isLastOptionBeforeFooter={[Function]}
          isLoad={false}
          isLoading={false}
          isNoResultsOption={false}
          isPlaceholder={false}
          isSelected={false}
          key="MachinePoolEditor"
          keyHandler={[Function]}
          onClick={[Function]}
          sendRef={[Function]}
          setViewMoreNextIndex={[Function]}
          value="MachinePoolEditor"
        >
          Machine pool editor
        </SelectOption>
      </Select>
    </FormGroup>
  </Form>
</Modal>
`;
