// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SubscriptionStatusIndicator /> should not crash when the cluster has no subscription info 1`] = `
<Popover
  appendTo={[Function]}
  aria-label="Not Subscribed"
  bodyContent="This cluster does not have a subscription attached."
  boundary="window"
  className=""
  closeBtnAriaLabel="Close"
  distance={25}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  footerContent={null}
  headerContent={null}
  hideOnOutsideClick={true}
  isVisible={null}
  maxWidth="calc(2rem + 18.75rem)"
  onHidden={[Function]}
  onHide={[Function]}
  onMount={[Function]}
  onShow={[Function]}
  onShown={[Function]}
  position="top"
  shouldClose={[Function]}
  tippyProps={Object {}}
  zIndex={9999}
>
  <Component
    icon={
      <ExclamationTriangleIcon
        color="#f0ab00"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    }
    isInline={true}
    variant="link"
  >
    Not subscribed
  </Component>
</Popover>
`;

exports[`<SubscriptionStatusIndicator /> should render when subscription is InconsistentServices 1`] = `
<Popover
  appendTo={[Function]}
  aria-label="Invalid"
  bodyContent="This cluster is attached to subscriptions with different support levels."
  boundary="window"
  className=""
  closeBtnAriaLabel="Close"
  distance={25}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  footerContent={null}
  headerContent={null}
  hideOnOutsideClick={true}
  isVisible={null}
  maxWidth="calc(2rem + 18.75rem)"
  onHidden={[Function]}
  onHide={[Function]}
  onMount={[Function]}
  onShow={[Function]}
  onShown={[Function]}
  position="top"
  shouldClose={[Function]}
  tippyProps={Object {}}
  zIndex={9999}
>
  <Component
    icon={
      <ExclamationTriangleIcon
        color="#f0ab00"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    }
    isInline={true}
    variant="link"
  >
    Invalid
  </Component>
</Popover>
`;

exports[`<SubscriptionStatusIndicator /> should render when subscription is NotSubscribed 1`] = `
<Popover
  appendTo={[Function]}
  aria-label="Not Subscribed"
  bodyContent="This cluster does not have a subscription attached."
  boundary="window"
  className=""
  closeBtnAriaLabel="Close"
  distance={25}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  footerContent={null}
  headerContent={null}
  hideOnOutsideClick={true}
  isVisible={null}
  maxWidth="calc(2rem + 18.75rem)"
  onHidden={[Function]}
  onHide={[Function]}
  onMount={[Function]}
  onShow={[Function]}
  onShown={[Function]}
  position="top"
  shouldClose={[Function]}
  tippyProps={Object {}}
  zIndex={9999}
>
  <Component
    icon={
      <ExclamationTriangleIcon
        color="#f0ab00"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    }
    isInline={true}
    variant="link"
  >
    Not subscribed
  </Component>
</Popover>
`;

exports[`<SubscriptionStatusIndicator /> should render when subscription is Ok 1`] = `
<Fragment>
  <CheckCircleIcon
    color="#92d400"
    noVerticalAlign={false}
    size="sm"
    title={null}
  />
   
  Subscribed
</Fragment>
`;

exports[`<SubscriptionStatusIndicator /> should render when subscription is Overcommitted 1`] = `
<Popover
  appendTo={[Function]}
  aria-label="Insufficient"
  bodyContent="This cluster is consuming more resources than it is entitled to."
  boundary="window"
  className=""
  closeBtnAriaLabel="Close"
  distance={25}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  footerContent={null}
  headerContent={null}
  hideOnOutsideClick={true}
  isVisible={null}
  maxWidth="calc(2rem + 18.75rem)"
  onHidden={[Function]}
  onHide={[Function]}
  onMount={[Function]}
  onShow={[Function]}
  onShown={[Function]}
  position="top"
  shouldClose={[Function]}
  tippyProps={Object {}}
  zIndex={9999}
>
  <Component
    icon={
      <ExclamationTriangleIcon
        color="#f0ab00"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    }
    isInline={true}
    variant="link"
  >
    Insufficient
  </Component>
</Popover>
`;

exports[`<SubscriptionStatusIndicator /> should render when subscription is SixtyDayEvaluation 1`] = `
<Popover
  appendTo={[Function]}
  aria-label="Sixty Day Evaluation"
  bodyContent="unknown days remaining in the evaluation period."
  boundary="window"
  className=""
  closeBtnAriaLabel="Close"
  distance={25}
  enableFlip={true}
  flipBehavior={
    Array [
      "top",
      "right",
      "bottom",
      "left",
      "top",
      "right",
      "bottom",
    ]
  }
  footerContent={null}
  headerContent={null}
  hideOnOutsideClick={true}
  isVisible={null}
  maxWidth="calc(2rem + 18.75rem)"
  onHidden={[Function]}
  onHide={[Function]}
  onMount={[Function]}
  onShow={[Function]}
  onShown={[Function]}
  position="top"
  shouldClose={[Function]}
  tippyProps={Object {}}
  zIndex={9999}
>
  <Component
    icon={
      <ExclamationTriangleIcon
        color="#f0ab00"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    }
    isInline={true}
    variant="link"
  >
    60-day evaluation
  </Component>
</Popover>
`;

exports[`<SubscriptionStatusIndicator /> should render when subscription is blank and cluster is managed 1`] = `
<Fragment>
  <CheckCircleIcon
    color="#92d400"
    noVerticalAlign={false}
    size="sm"
    title={null}
  />
   
  Subscribed
</Fragment>
`;
