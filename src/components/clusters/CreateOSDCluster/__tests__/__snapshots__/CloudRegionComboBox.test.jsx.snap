// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CloudRegionComboBox /> when region list needs to be fetched renders correctly 1`] = `
<CloudRegionComboBox
  cloudProviderID="aws"
  cloudProviders={
    Object {
      "error": false,
      "errorMessage": "",
      "fulfilled": false,
      "pending": false,
      "providers": Object {},
    }
  }
  getCloudProviders={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  input={
    Object {
      "onChange": [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <div
    className="spinner-fit-container"
  >
    <Spinner>
      <div
        className="ins-c-spinner"
        role="status"
      >
        <span
          className="pf-u-screen-reader"
        >
          Loading...
        </span>
      </div>
    </Spinner>
  </div>
  <div
    className="spinner-loading-text"
  >
    Loading region list...
  </div>
</CloudRegionComboBox>
`;

exports[`<CloudRegionComboBox /> when the region list is available renders correctly 1`] = `
<CloudRegionComboBox
  cloudProviderID="aws"
  cloudProviders={
    Object {
      "error": false,
      "errorMessage": "",
      "fulfilled": true,
      "pending": false,
      "providers": Object {
        "aws": Object {
          "regions": Object {
            "eu-west-1": Object {
              "display_name": "Ireland",
              "id": "eu-west-1",
            },
            "us-east-1": Object {
              "display_name": "N. Virginia",
              "id": "us-east-1",
            },
          },
        },
      },
    }
  }
  getCloudProviders={[MockFunction]}
  input={
    Object {
      "onChange": [MockFunction],
    }
  }
>
  <Select
    aria-label="Region"
    ariaLabelClear="Clear all"
    ariaLabelRemove="Remove"
    ariaLabelToggle="Options menu"
    ariaLabelTypeAhead=""
    ariaLabelledBy=""
    className="cloud-region-combo-box"
    isDisabled={false}
    isExpanded={false}
    isGrouped={false}
    isPlain={false}
    onClear={[Function]}
    onSelect={[Function]}
    onToggle={[Function]}
    placeholderText=""
    selections=""
    toggleId={null}
    variant="single"
    width=""
  >
    <div
      className="pf-c-select cloud-region-combo-box"
      style={
        Object {
          "width": "",
        }
      }
    >
      <SelectToggle
        ariaLabelToggle="Options menu"
        ariaLabelledBy=" pf-toggle-id-0"
        className=""
        handleTypeaheadKeys={[Function]}
        id="pf-toggle-id-0"
        isActive={false}
        isDisabled={false}
        isExpanded={false}
        isFocused={false}
        isHovered={false}
        isPlain={false}
        onClose={[Function]}
        onEnter={[Function]}
        onToggle={[Function]}
        parentRef={
          Object {
            "current": <div
              class="pf-c-select cloud-region-combo-box"
            >
              <button
                aria-expanded="false"
                aria-haspopup="listbox"
                aria-labelledby=" pf-toggle-id-0"
                class="pf-c-select__toggle"
                id="pf-toggle-id-0"
                type="button"
              >
                <div
                  class="pf-c-select__toggle-wrapper"
                >
                  <span
                    class="pf-c-select__toggle-text"
                  >
                    us-east-1, N. Virginia
                  </span>
                </div>
                <svg
                  aria-hidden="true"
                  class="pf-c-select__toggle-arrow"
                  fill="currentColor"
                  height="1em"
                  role="img"
                  style="vertical-align: -0.125em;"
                  viewBox="0 0 320 512"
                  width="1em"
                >
                  <path
                    d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                    transform=""
                  />
                </svg>
              </button>
            </div>,
          }
        }
        type="button"
        variant="single"
      >
        <button
          aria-expanded={false}
          aria-haspopup="listbox"
          aria-labelledby=" pf-toggle-id-0"
          className="pf-c-select__toggle"
          disabled={false}
          id="pf-toggle-id-0"
          onClick={[Function]}
          onKeyDown={[Function]}
          type="button"
        >
          <div
            className="pf-c-select__toggle-wrapper"
          >
            <span
              className="pf-c-select__toggle-text"
            >
              us-east-1, N. Virginia
            </span>
          </div>
          <CaretDownIcon
            className="pf-c-select__toggle-arrow"
            color="currentColor"
            noVerticalAlign={false}
            size="sm"
            title={null}
          >
            <svg
              aria-hidden={true}
              aria-labelledby={null}
              className="pf-c-select__toggle-arrow"
              fill="currentColor"
              height="1em"
              role="img"
              style={
                Object {
                  "verticalAlign": "-0.125em",
                }
              }
              viewBox="0 0 320 512"
              width="1em"
            >
              <path
                d="M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z"
                transform=""
              />
            </svg>
          </CaretDownIcon>
        </button>
      </SelectToggle>
    </div>
  </Select>
</CloudRegionComboBox>
`;

exports[`<CloudRegionComboBox /> when the request is pending renders correctly 1`] = `
<CloudRegionComboBox
  cloudProviderID="aws"
  cloudProviders={
    Object {
      "error": false,
      "errorMessage": "",
      "fulfilled": false,
      "pending": true,
      "providers": Object {},
    }
  }
  getCloudProviders={[MockFunction]}
  input={
    Object {
      "onChange": [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <div
    className="spinner-fit-container"
  >
    <Spinner>
      <div
        className="ins-c-spinner"
        role="status"
      >
        <span
          className="pf-u-screen-reader"
        >
          Loading...
        </span>
      </div>
    </Spinner>
  </div>
  <div
    className="spinner-loading-text"
  >
    Loading region list...
  </div>
</CloudRegionComboBox>
`;

exports[`<CloudRegionComboBox /> when there was an error renders correctly 1`] = `
<CloudRegionComboBox
  cloudProviderID="aws"
  cloudProviders={
    Object {
      "error": true,
      "errorMessage": "This is an error message",
      "fulfilled": false,
      "pending": false,
      "providers": Object {},
    }
  }
  getCloudProviders={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  input={
    Object {
      "onChange": [MockFunction] {
        "calls": Array [
          Array [
            "",
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
    }
  }
>
  <ErrorBox
    message="Error loading region list"
    response={
      Object {
        "error": true,
        "errorMessage": "This is an error message",
        "fulfilled": false,
        "pending": false,
        "providers": Object {},
      }
    }
  >
    <Alert
      className="error-box"
      isInline={true}
      title="Error loading region list"
      variant="danger"
    >
      <div
        aria-label="Danger Alert"
        className="pf-c-alert pf-m-inline pf-m-danger error-box"
      >
        <AlertIcon
          variant="danger"
        >
          <div
            className="pf-c-alert__icon"
          >
            <ExclamationCircleIcon
              color="currentColor"
              noVerticalAlign={false}
              size="sm"
              title={null}
            >
              <svg
                aria-hidden={true}
                aria-labelledby={null}
                fill="currentColor"
                height="1em"
                role="img"
                style={
                  Object {
                    "verticalAlign": "-0.125em",
                  }
                }
                viewBox="0 0 512 512"
                width="1em"
              >
                <path
                  d="M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z"
                  transform=""
                />
              </svg>
            </ExclamationCircleIcon>
          </div>
        </AlertIcon>
        <h4
          className="pf-c-alert__title"
        >
          <span
            className="pf-u-screen-reader"
          >
            Danger alert:
          </span>
          Error loading region list
        </h4>
        <div
          className="pf-c-alert__description"
        >
          <span>
            This is an error message
          </span>
          <br />
          <span>
            Operation ID: N/A
          </span>
        </div>
      </div>
    </Alert>
  </ErrorBox>
</CloudRegionComboBox>
`;
