// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RegisterCluster /> renders correctly 1`] = `
<Fragment>
  <PageHeader>
    <Breadcrumbs
      path={
        Array [
          Object {
            "label": "Clusters",
          },
          Object {
            "label": "Cluster registration",
          },
        ]
      }
    />
    <PageHeaderTitle
      title="Cluster registration"
    />
  </PageHeader>
  <PageSection>
    <Card
      id="register-cluster"
    >
      <CardBody>
        <Grid>
          <GridItem
            span={5}
          >
            <Form
              className="subscription-settings form"
              onSubmit={[MockFunction]}
            >
              <Field
                component={[Function]}
                disabled={false}
                extendedHelpText="The cluster ID may be found on the About page of the cluster web console"
                isRequired={true}
                label="Cluster ID"
                name="cluster_id"
                type="text"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                disabled={false}
                label="Display name"
                name="display_name"
                type="text"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                disabled={false}
                label="Web console URL"
                name="web_console_url"
                type="text"
                validate={[Function]}
              />
              <Title
                headingLevel="h4"
                size="xl"
              >
                Subscription Settings
              </Title>
              <TextContent>
                <Text
                  component="p"
                >
                  Editing the subscription settings will help ensure that you receive the level of support that you expect, and that your cluster is consuming the correct type of subscription.
                </Text>
              </TextContent>
              <EditSubscriptionSettingsDialog
                isDialog={false}
                isOpen={false}
                onChangeNumericInputCallback={[Function]}
                onChangeSupportLevelCallback={[Function]}
                subscription={
                  Object {
                    "support_level": "Eval",
                  }
                }
              />
            </Form>
          </GridItem>
        </Grid>
      </CardBody>
      <CardFooter>
        <Button
          isDisabled={false}
          onClick={[MockFunction]}
          type="submit"
          variant="primary"
        >
          Register cluster
        </Button>
        <Link
          to="/"
        >
          <Button
            isDisabled={false}
            variant="secondary"
          >
            Cancel
          </Button>
        </Link>
      </CardFooter>
    </Card>
  </PageSection>
</Fragment>
`;

exports[`<RegisterCluster /> renders correctly when user can't subscribe ocp 1`] = `
<Fragment>
  <PageHeader>
    <Breadcrumbs
      path={
        Array [
          Object {
            "label": "Clusters",
          },
          Object {
            "label": "Cluster registration",
          },
        ]
      }
    />
    <PageHeaderTitle
      title="Cluster registration"
    />
  </PageHeader>
  <PageSection>
    <Card
      id="register-cluster"
    >
      <CardBody>
        <Grid>
          <GridItem
            span={5}
          >
            <Form
              className="subscription-settings form"
              onSubmit={[MockFunction]}
            >
              <Field
                component={[Function]}
                disabled={false}
                extendedHelpText="The cluster ID may be found on the About page of the cluster web console"
                isRequired={true}
                label="Cluster ID"
                name="cluster_id"
                type="text"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                disabled={false}
                label="Display name"
                name="display_name"
                type="text"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                disabled={false}
                label="Web console URL"
                name="web_console_url"
                type="text"
                validate={[Function]}
              />
            </Form>
          </GridItem>
        </Grid>
      </CardBody>
      <CardFooter>
        <Button
          isDisabled={false}
          onClick={[MockFunction]}
          type="submit"
          variant="primary"
        >
          Register cluster
        </Button>
        <Link
          to="/"
        >
          <Button
            isDisabled={false}
            variant="secondary"
          >
            Cancel
          </Button>
        </Link>
      </CardFooter>
    </Card>
  </PageSection>
</Fragment>
`;
