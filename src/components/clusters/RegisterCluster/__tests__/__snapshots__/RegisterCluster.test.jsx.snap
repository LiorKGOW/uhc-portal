// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<RegisterCluster /> renders correctly 1`] = `
<Fragment>
  <PageHeader>
    <PageHeaderTitle
      title="Cluster registration"
    />
  </PageHeader>
  <PageSection>
    <Card
      id="register-cluster"
    >
      <CardBody>
        <Grid>
          <GridItem
            span={8}
          >
            <Form
              onSubmit={[MockFunction]}
            >
              <Field
                component={[Function]}
                disabled={false}
                extendedHelpText="The cluster ID may be found on the About page of the cluster web console"
                isRequired={true}
                label="Cluster ID"
                name="cluster_id"
                type="text"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                disabled={false}
                label="Display name"
                name="display_name"
                type="text"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                disabled={false}
                label="Web console URL"
                name="web_console_url"
                type="text"
                validate={[Function]}
              />
              <FormGroup
                fieldId="operating_system"
                isRequired={true}
                label="Operating system"
              >
                <Field
                  component={[Function]}
                  defaultValue="Red Hat Enterprise Linux CoreOS"
                  disabled={false}
                  name="operating_system"
                  options={
                    Array [
                      Object {
                        "label": "Red Hat Enterprise Linux CoreOS",
                        "value": "Red Hat Enterprise Linux CoreOS",
                      },
                      Object {
                        "label": "Red Hat Enterprise Linux",
                        "value": "Red Hat Enterprise Linux",
                      },
                    ]
                  }
                />
              </FormGroup>
              <FormGroup
                fieldId="system_type"
                isRequired={true}
                label="System type"
              >
                <Field
                  component={[Function]}
                  defaultValue="physical"
                  disabled={false}
                  name="system_type"
                  onChange={[Function]}
                  options={
                    Array [
                      Object {
                        "label": "Physical",
                        "value": "physical",
                      },
                      Object {
                        "label": "Virtual",
                        "value": "virtual",
                      },
                    ]
                  }
                />
              </FormGroup>
              <Field
                component={[Function]}
                disabled={false}
                inputMode="numeric"
                isRequired={true}
                label="Number of sockets or LAPRs"
                name="socket_num"
                validate={
                  Array [
                    [Function],
                    [Function],
                  ]
                }
              />
              <Field
                component={[Function]}
                disabled={false}
                inputMode="numeric"
                label="Memory capacity (GiB)"
                name="memory_gib"
                step="any"
                validate={[Function]}
              />
              <Field
                component={[Function]}
                disabled={false}
                inputMode="numeric"
                label="Number of compute nodes"
                name="nodes_compute"
                validate={[Function]}
              />
            </Form>
          </GridItem>
        </Grid>
      </CardBody>
      <CardFooter>
        <Component
          isDisabled={false}
          onClick={[MockFunction]}
          type="submit"
          variant="primary"
        >
          Register cluster
        </Component>
        <Link
          replace={false}
          to="/"
        >
          <Component
            isDisabled={false}
            variant="secondary"
          >
            Cancel
          </Component>
        </Link>
      </CardFooter>
    </Card>
  </PageSection>
</Fragment>
`;
