// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cluster Actions Dropdown Items admin console url does not exist should render (no console) 1`] = `
<Fragment>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="undefined.menu.adminconsole"
    title="Open console"
    tooltip={
      <span>
        Admin console is not yet available for this cluster
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Open console
  </DropdownItem>
  <DropdownItem
    component="button"
    key="undefined.menu.editdisplayname"
    onClick={[Function]}
    title="Edit display name"
  >
    Edit display name
  </DropdownItem>
  <DropdownItem
    component="button"
    key="undefined.menu.editconsoleurl"
    onClick={[Function]}
    title="Add console URL"
  >
    Add console URL
  </DropdownItem>
</Fragment>
`;

exports[`Cluster Actions Dropdown Items cluster configuration_mode read_only should render (read_only) 1`] = `
<Fragment>
  <DropdownItem
    component="a"
    href="www.testuhc.com"
    key="1.menu.adminconsole"
    rel="noopener noreferrer"
    target="_blank"
    title="Open console"
  >
    Open console
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.editdisplayname"
    onClick={[Function]}
    title="Edit display name"
  >
    Edit display name
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.scalecluster"
    title="Edit load balancers and persistent storage"
    tooltip={
      <span>
        This operation is not available during maintenance
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit load balancers and persistent storage
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.editmachinepools"
    title="Edit machine pool"
    tooltip={
      <span>
        This operation is not available during maintenance
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit machine pool
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.hibernatecluster"
    title="Hibernate cluster"
    tooltip={
      <span>
        This operation is not available during maintenance
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Hibernate cluster
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.deletecluster"
    title="Delete cluster"
    tooltip={
      <span>
        This operation is not available during maintenance
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Delete cluster
  </DropdownItem>
</Fragment>
`;

exports[`Cluster Actions Dropdown Items cluster state hibernating should render (hibernating) 1`] = `
<Fragment>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.adminconsole"
    title="Open console"
    tooltip={
      <React.Fragment>
        This cluster is hibernating; resume cluster in order to perform actions
      </React.Fragment>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Open console
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.editdisplayname"
    onClick={[Function]}
    title="Edit display name"
  >
    Edit display name
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.scalecluster"
    title="Edit load balancers and persistent storage"
    tooltip={
      <React.Fragment>
        This cluster is hibernating; resume cluster in order to perform actions
      </React.Fragment>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit load balancers and persistent storage
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.editmachinepools"
    title="Edit machine pool"
    tooltip={
      <React.Fragment>
        This cluster is hibernating; resume cluster in order to perform actions
      </React.Fragment>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit machine pool
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.hibernatecluster"
    onClick={[Function]}
    title="Resume from Hibernation"
  >
    Resume from Hibernation
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.deletecluster"
    title="Delete cluster"
    tooltip={
      <React.Fragment>
        This cluster is hibernating; resume cluster in order to perform actions
      </React.Fragment>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Delete cluster
  </DropdownItem>
</Fragment>
`;

exports[`Cluster Actions Dropdown Items cluster with state not ready should render (not ready) 1`] = `
<Fragment>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.adminconsole"
    title="Open console"
    tooltip={
      <span>
        Admin console is not yet available for this cluster
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Open console
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.editdisplayname"
    onClick={[Function]}
    title="Edit display name"
  >
    Edit display name
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.scalecluster"
    title="Edit load balancers and persistent storage"
    tooltip={
      <span>
        This cluster is not ready
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit load balancers and persistent storage
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.editmachinepools"
    title="Edit machine pool"
    tooltip={
      <span>
        This cluster is not ready
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit machine pool
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.hibernatecluster"
    title="Hibernate cluster"
    tooltip={
      <span>
        This cluster is not ready
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Hibernate cluster
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.deletecluster"
    onClick={[Function]}
    title="Delete cluster"
  >
    Delete cluster
  </DropdownItem>
</Fragment>
`;

exports[`Cluster Actions Dropdown Items cluster with state ready and console url and product osdtrial should render 1`] = `
<Fragment>
  <DropdownItem
    component="a"
    href="www.testuhc.com"
    key="1.menu.adminconsole"
    rel="noopener noreferrer"
    target="_blank"
    title="Open console"
  >
    Open console
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.editdisplayname"
    onClick={[Function]}
    title="Edit display name"
  >
    Edit display name
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.scalecluster"
    onClick={[Function]}
    title="Edit load balancers and persistent storage"
  >
    Edit load balancers and persistent storage
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.editmachinepools"
    onClick={[Function]}
    title="Edit machine pool"
  >
    Edit machine pool
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.upgradetrialcluster"
    onClick={[Function]}
    title="Upgrade cluster from Trial"
  >
    Upgrade cluster from Trial
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.deletecluster"
    onClick={[Function]}
    title="Delete cluster"
  >
    Delete cluster
  </DropdownItem>
</Fragment>
`;

exports[`Cluster Actions Dropdown Items cluster with state ready and console url should render 1`] = `
<Fragment>
  <DropdownItem
    component="a"
    href="www.testuhc.com"
    key="1.menu.adminconsole"
    rel="noopener noreferrer"
    target="_blank"
    title="Open console"
  >
    Open console
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.editdisplayname"
    onClick={[Function]}
    title="Edit display name"
  >
    Edit display name
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.scalecluster"
    onClick={[Function]}
    title="Edit load balancers and persistent storage"
  >
    Edit load balancers and persistent storage
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.editmachinepools"
    onClick={[Function]}
    title="Edit machine pool"
  >
    Edit machine pool
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.hibernatecluster"
    onClick={[Function]}
    title="Hibernate cluster"
  >
    Hibernate cluster
  </DropdownItem>
  <DropdownItem
    component="button"
    key="1.menu.deletecluster"
    onClick={[Function]}
    title="Delete cluster"
  >
    Delete cluster
  </DropdownItem>
</Fragment>
`;

exports[`Cluster Actions Dropdown Items cluster with state uninstalling should render (uninstalling) 1`] = `
<Fragment>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.adminconsole"
    title="Open console"
    tooltip={
      <span>
        The cluster is being uninstalled
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Open console
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.editdisplayname"
    title="Edit display name"
    tooltip={
      <span>
        The cluster is being uninstalled
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit display name
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.scalecluster"
    title="Edit load balancers and persistent storage"
    tooltip={
      <span>
        The cluster is being uninstalled
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit load balancers and persistent storage
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.editmachinepools"
    title="Edit machine pool"
    tooltip={
      <span>
        The cluster is being uninstalled
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Edit machine pool
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.hibernatecluster"
    title="Hibernate cluster"
    tooltip={
      <span>
        The cluster is being uninstalled
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Hibernate cluster
  </DropdownItem>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="1.menu.deletecluster"
    title="Delete cluster"
    tooltip={
      <span>
        The cluster is being uninstalled
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Delete cluster
  </DropdownItem>
</Fragment>
`;

exports[`Cluster Actions Dropdown Items read only cluster should render correctly 1`] = `
<Fragment>
  <DropdownItem
    component="a"
    href="www.testuhc.com"
    key="1.menu.adminconsole"
    rel="noopener noreferrer"
    target="_blank"
    title="Open console"
  >
    Open console
  </DropdownItem>
</Fragment>
`;

exports[`Cluster Actions Dropdown Items self managed cluster should render (self managed) 1`] = `
<Fragment>
  <DropdownItem
    component="button"
    isAriaDisabled={true}
    key="undefined.menu.adminconsole"
    title="Open console"
    tooltip={
      <span>
        Admin console is not yet available for this cluster
      </span>
    }
    tooltipProps={
      Object {
        "position": "left",
      }
    }
  >
    Open console
  </DropdownItem>
  <DropdownItem
    component="button"
    key="undefined.menu.editdisplayname"
    onClick={[Function]}
    title="Edit display name"
  >
    Edit display name
  </DropdownItem>
  <DropdownItem
    component="button"
    key="undefined.menu.editconsoleurl"
    onClick={[Function]}
    title="Add console URL"
  >
    Add console URL
  </DropdownItem>
</Fragment>
`;
