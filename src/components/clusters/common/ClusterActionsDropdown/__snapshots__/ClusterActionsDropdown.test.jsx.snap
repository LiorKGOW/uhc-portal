// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ClusterActionsDropdown /> admin console url does not exist should render (no console) 1`] = `
<Dropdown
  data-test-id="cluster-actions-dropdown"
  dropdownItems={
    Array [
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Open console"
        tooltip={
          <span>
            Admin console is not yet available for this cluster
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Open console
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Edit display name"
      >
        Edit display name
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Add console URL"
      >
        Add console URL
      </DropdownItem>,
    ]
  }
  isOpen={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <DropdownToggle
      onToggle={[Function]}
    >
      Actions
    </DropdownToggle>
  }
/>
`;

exports[`<ClusterActionsDropdown /> cluster with state not ready should render (not ready) 1`] = `
<Dropdown
  data-test-id="cluster-actions-dropdown"
  dropdownItems={
    Array [
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Open console"
        tooltip={
          <span>
            Admin console is not yet available for this cluster
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Open console
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Edit display name"
      >
        Edit display name
      </DropdownItem>,
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Edit load balancers and persistent storage"
        tooltip={
          <span>
            This cluster is not ready
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Edit load balancers and persistent storage
      </DropdownItem>,
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Edit node count"
        tooltip={
          <span>
            This cluster is not ready
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Edit node count
      </DropdownItem>,
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Hibernate cluster"
        tooltip={
          <span>
            This cluster is not ready
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Hibernate cluster
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Delete cluster"
      >
        Delete cluster
      </DropdownItem>,
    ]
  }
  isOpen={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <DropdownToggle
      onToggle={[Function]}
    >
      Actions
    </DropdownToggle>
  }
/>
`;

exports[`<ClusterActionsDropdown /> cluster with state ready and console url should render 1`] = `
<Dropdown
  data-test-id="cluster-actions-dropdown"
  dropdownItems={
    Array [
      <DropdownItem
        component="a"
        href="www.testuhc.com"
        rel="noopener noreferrer"
        target="_blank"
        title="Open console"
      >
        Open console
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Edit display name"
      >
        Edit display name
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Edit load balancers and persistent storage"
      >
        Edit load balancers and persistent storage
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Edit node count"
      >
        Edit node count
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Hibernate cluster"
      >
        Hibernate cluster
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Delete cluster"
      >
        Delete cluster
      </DropdownItem>,
    ]
  }
  isOpen={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <DropdownToggle
      onToggle={[Function]}
    >
      Actions
    </DropdownToggle>
  }
/>
`;

exports[`<ClusterActionsDropdown /> cluster with state uninstalling should render (uninstalling) 1`] = `
<Dropdown
  data-test-id="cluster-actions-dropdown"
  dropdownItems={
    Array [
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Open console"
        tooltip={
          <span>
            The cluster is being uninstalled
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Open console
      </DropdownItem>,
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Edit display name"
        tooltip={
          <span>
            The cluster is being uninstalled
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Edit display name
      </DropdownItem>,
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Edit load balancers and persistent storage"
        tooltip={
          <span>
            The cluster is being uninstalled
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Edit load balancers and persistent storage
      </DropdownItem>,
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Edit node count"
        tooltip={
          <span>
            The cluster is being uninstalled
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Edit node count
      </DropdownItem>,
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Hibernate cluster"
        tooltip={
          <span>
            The cluster is being uninstalled
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Hibernate cluster
      </DropdownItem>,
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Delete cluster"
        tooltip={
          <span>
            The cluster is being uninstalled
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Delete cluster
      </DropdownItem>,
    ]
  }
  isOpen={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <DropdownToggle
      onToggle={[Function]}
    >
      Actions
    </DropdownToggle>
  }
/>
`;

exports[`<ClusterActionsDropdown /> read only cluster should render correctly 1`] = `
<Dropdown
  data-test-id="cluster-actions-dropdown"
  dropdownItems={
    Array [
      <DropdownItem
        component="a"
        href="www.testuhc.com"
        rel="noopener noreferrer"
        target="_blank"
        title="Open console"
      >
        Open console
      </DropdownItem>,
    ]
  }
  isOpen={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <DropdownToggle
      onToggle={[Function]}
    >
      Actions
    </DropdownToggle>
  }
/>
`;

exports[`<ClusterActionsDropdown /> self managed cluster should render (self managed) 1`] = `
<Dropdown
  data-test-id="cluster-actions-dropdown"
  dropdownItems={
    Array [
      <DropdownItem
        component="button"
        isAriaDisabled={true}
        title="Open console"
        tooltip={
          <span>
            Admin console is not yet available for this cluster
          </span>
        }
        tooltipProps={
          Object {
            "position": "left",
          }
        }
      >
        Open console
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Edit display name"
      >
        Edit display name
      </DropdownItem>,
      <DropdownItem
        component="button"
        onClick={[Function]}
        title="Add console URL"
      >
        Add console URL
      </DropdownItem>,
    ]
  }
  isOpen={false}
  onSelect={[Function]}
  position="right"
  toggle={
    <DropdownToggle
      onToggle={[Function]}
    >
      Actions
    </DropdownToggle>
  }
/>
`;
