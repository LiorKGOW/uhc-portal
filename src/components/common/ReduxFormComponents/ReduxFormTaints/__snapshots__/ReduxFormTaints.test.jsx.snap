// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReduxFormKeyValueList /> should render when there is no input - initial reder 1`] = `
<div
  className="reduxFormKeyValueList"
>
  <div
    className="pf-c-form__label reduxFormKeyValueList-colTitles"
  >
    <div
      className="reduxFormKeyValueList-title pf-c-form__label-text"
    >
      Key
    </div>
    <div
      className="reduxFormKeyValueList-title reduxFormKeyValueList-title-value pf-c-form__label-text"
    >
      Value
    </div>
  </div>
  <div
    className="pf-u-mb-md"
    key="undefined"
  >
    <Field
      component={[Function]}
      index={0}
      name="[object Object].key"
      type="text"
    />
    <Field
      component={[Function]}
      index={0}
      name="[object Object].value"
      type="text"
    />
    <Button
      className="reduxFormKeyValueList-removeBtn-disabled"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={true}
      onClick={[Function]}
      variant="link"
    />
  </div>
  <Button
    className="reduxFormKeyValueList-addBtn"
    icon={
      <PlusCircleIcon
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
      />
    }
    onClick={[Function]}
    variant="link"
  >
    Add label
  </Button>
</div>
`;

exports[`<ReduxFormKeyValueList /> should render with input 1`] = `
<div
  className="reduxFormKeyValueList"
>
  <div
    className="pf-c-form__label reduxFormKeyValueList-colTitles"
  >
    <div
      className="reduxFormKeyValueList-title pf-c-form__label-text"
    >
      Key
    </div>
    <div
      className="reduxFormKeyValueList-title reduxFormKeyValueList-title-value pf-c-form__label-text"
    >
      Value
    </div>
  </div>
  <div
    className="pf-u-mb-md"
    key="undefined"
  >
    <Field
      component={[Function]}
      index={0}
      name="[object Object].key"
      type="text"
    />
    <Field
      component={[Function]}
      index={0}
      name="[object Object].value"
      type="text"
    />
    <Button
      className="reduxFormKeyValueList-removeBtn"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={false}
      onClick={[Function]}
      variant="link"
    />
  </div>
  <div
    className="pf-u-mb-md"
    key="undefined"
  >
    <Field
      component={[Function]}
      index={1}
      name="[object Object].key"
      type="text"
    />
    <Field
      component={[Function]}
      index={1}
      name="[object Object].value"
      type="text"
    />
    <Button
      className="reduxFormKeyValueList-removeBtn"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={false}
      onClick={[Function]}
      variant="link"
    />
  </div>
  <Button
    className="reduxFormKeyValueList-addBtn"
    icon={
      <PlusCircleIcon
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
      />
    }
    onClick={[Function]}
    variant="link"
  >
    Add label
  </Button>
</div>
`;

exports[`<ReduxFormTaints /> should render when there is no input - initial reder 1`] = `
<div
  className="reduxFormKeyValueList"
>
  <div
    className="pf-c-form__label reduxFormKeyValueList-colTitles"
  >
    <div
      className="reduxFormKeyValueList-title pf-c-form__label-text"
    >
      Key
    </div>
    <div
      className="reduxFormKeyValueList-title reduxFormKeyValueList-title-value pf-c-form__label-text"
    >
      Value
    </div>
    <div
      className="reduxFormKeyValueList-title reduxFormKeyValueList-title-value pf-c-form__label-text"
    >
      Effect
    </div>
  </div>
  <div
    className="pf-u-mb-md"
    key="undefined"
  >
    <Field
      aria-label="Key-value list key"
      component={[Function]}
      formGroupClass="reduxFormKeyValueList-key"
      index={0}
      isRequired={true}
      name="[object Object].key"
    />
    <Field
      aria-label="Key-value list value"
      component={[Function]}
      formGroupClass="reduxFormKeyValueList-value"
      index={0}
      isRequired={true}
      name="[object Object].value"
    />
    <Field
      className="reduxFormKeyValueList-extraField"
      component={[Function]}
      isFormGroup={false}
      name="[object Object].effect"
      options={
        Array [
          Object {
            "name": "NoSchedule",
            "value": "NoSchedule",
          },
          Object {
            "name": "NoExecute",
            "value": "NoExecute",
          },
          Object {
            "name": "PreferNoSchedule",
            "value": "PreferNoSchedule",
          },
        ]
      }
    />
    <Button
      className="reduxFormKeyValueList-removeBtn-disabled"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={true}
      onClick={[Function]}
      variant="link"
    />
  </div>
  <Button
    className="reduxFormKeyValueList-addBtn pf-u-mb-lg"
    icon={
      <PlusCircleIcon
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
      />
    }
    onClick={[Function]}
    variant="link"
  >
    Add taint
  </Button>
</div>
`;

exports[`<ReduxFormTaints /> should render with input 1`] = `
<div
  className="reduxFormKeyValueList"
>
  <div
    className="pf-c-form__label reduxFormKeyValueList-colTitles"
  >
    <div
      className="reduxFormKeyValueList-title pf-c-form__label-text"
    >
      Key
    </div>
    <div
      className="reduxFormKeyValueList-title reduxFormKeyValueList-title-value pf-c-form__label-text"
    >
      Value
    </div>
    <div
      className="reduxFormKeyValueList-title reduxFormKeyValueList-title-value pf-c-form__label-text"
    >
      Effect
    </div>
  </div>
  <div
    className="pf-u-mb-md"
    key="undefined"
  >
    <Field
      aria-label="Key-value list key"
      component={[Function]}
      formGroupClass="reduxFormKeyValueList-key"
      index={0}
      isRequired={true}
      name="[object Object].key"
    />
    <Field
      aria-label="Key-value list value"
      component={[Function]}
      formGroupClass="reduxFormKeyValueList-value"
      index={0}
      isRequired={true}
      name="[object Object].value"
    />
    <Field
      className="reduxFormKeyValueList-extraField"
      component={[Function]}
      isFormGroup={false}
      name="[object Object].effect"
      options={
        Array [
          Object {
            "name": "NoSchedule",
            "value": "NoSchedule",
          },
          Object {
            "name": "NoExecute",
            "value": "NoExecute",
          },
          Object {
            "name": "PreferNoSchedule",
            "value": "PreferNoSchedule",
          },
        ]
      }
    />
    <Button
      className="reduxFormKeyValueList-removeBtn"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={false}
      onClick={[Function]}
      variant="link"
    />
  </div>
  <div
    className="pf-u-mb-md"
    key="undefined"
  >
    <Field
      aria-label="Key-value list key"
      component={[Function]}
      formGroupClass="reduxFormKeyValueList-key"
      index={1}
      isRequired={true}
      name="[object Object].key"
    />
    <Field
      aria-label="Key-value list value"
      component={[Function]}
      formGroupClass="reduxFormKeyValueList-value"
      index={1}
      isRequired={true}
      name="[object Object].value"
    />
    <Field
      className="reduxFormKeyValueList-extraField"
      component={[Function]}
      isFormGroup={false}
      name="[object Object].effect"
      options={
        Array [
          Object {
            "name": "NoSchedule",
            "value": "NoSchedule",
          },
          Object {
            "name": "NoExecute",
            "value": "NoExecute",
          },
          Object {
            "name": "PreferNoSchedule",
            "value": "PreferNoSchedule",
          },
        ]
      }
    />
    <Button
      className="reduxFormKeyValueList-removeBtn"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={false}
      onClick={[Function]}
      variant="link"
    />
  </div>
  <Button
    className="reduxFormKeyValueList-addBtn pf-u-mb-lg"
    icon={
      <PlusCircleIcon
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
      />
    }
    onClick={[Function]}
    variant="link"
  >
    Add taint
  </Button>
</div>
`;
