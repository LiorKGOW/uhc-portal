// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ReduxFormKeyValueList /> should render when there is no input - initial reder 1`] = `
<Grid
  hasGutter={true}
>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={4}
  >
    Key
  </GridItem>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={4}
  >
    Value
  </GridItem>
  <GridItem
    span={4}
  />
  <GridItem
    span={4}
  >
    <Field
      component={[Function]}
      index={0}
      name="[object Object].key"
      type="text"
      validate={[Function]}
    />
  </GridItem>
  <GridItem
    span={4}
  >
    <Field
      component={[Function]}
      index={0}
      name="[object Object].value"
      type="text"
      validate={[Function]}
    />
  </GridItem>
  <GridItem
    span={4}
  >
    <Button
      className="reduxFormKeyValueList-removeBtn-disabled"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={true}
      onClick={[Function]}
      variant="link"
    />
  </GridItem>
  <GridItem>
    <Button
      className="reduxFormKeyValueList-addBtn"
      icon={
        <PlusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isInline={true}
      onClick={[Function]}
      variant="link"
    >
      Add label
    </Button>
  </GridItem>
</Grid>
`;

exports[`<ReduxFormKeyValueList /> should render with input 1`] = `
<Grid
  hasGutter={true}
>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={4}
  >
    Key
  </GridItem>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={4}
  >
    Value
  </GridItem>
  <GridItem
    span={4}
  />
  <GridItem
    span={4}
  >
    <Field
      component={[Function]}
      index={0}
      name="[object Object].key"
      type="text"
      validate={[Function]}
    />
  </GridItem>
  <GridItem
    span={4}
  >
    <Field
      component={[Function]}
      index={0}
      name="[object Object].value"
      type="text"
      validate={[Function]}
    />
  </GridItem>
  <GridItem
    span={4}
  >
    <Button
      className="reduxFormKeyValueList-removeBtn"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={false}
      onClick={[Function]}
      variant="link"
    />
  </GridItem>
  <GridItem
    span={4}
  >
    <Field
      component={[Function]}
      index={1}
      name="[object Object].key"
      type="text"
      validate={[Function]}
    />
  </GridItem>
  <GridItem
    span={4}
  >
    <Field
      component={[Function]}
      index={1}
      name="[object Object].value"
      type="text"
      validate={[Function]}
    />
  </GridItem>
  <GridItem
    span={4}
  >
    <Button
      className="reduxFormKeyValueList-removeBtn"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={false}
      onClick={[Function]}
      variant="link"
    />
  </GridItem>
  <GridItem>
    <Button
      className="reduxFormKeyValueList-addBtn"
      icon={
        <PlusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isInline={true}
      onClick={[Function]}
      variant="link"
    >
      Add label
    </Button>
  </GridItem>
</Grid>
`;

exports[`<ReduxFormTaints /> should render when there is no input - initial render 1`] = `
<Grid
  hasGutter={true}
>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={3}
  >
    Key
  </GridItem>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={3}
  >
    Value
  </GridItem>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={3}
  >
    Effect
  </GridItem>
  <GridItem
    span={3}
  />
  <GridItem
    span={3}
  >
    <Field
      aria-label="Key-value list key"
      component={[Function]}
      index={0}
      isRequired={true}
      name="[object Object].key"
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Field
      aria-label="Key-value list value"
      component={[Function]}
      index={0}
      isRequired={true}
      name="[object Object].value"
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Field
      component={[Function]}
      isFormGroup={false}
      name="[object Object].effect"
      options={
        Array [
          Object {
            "name": "NoSchedule",
            "value": "NoSchedule",
          },
          Object {
            "name": "NoExecute",
            "value": "NoExecute",
          },
          Object {
            "name": "PreferNoSchedule",
            "value": "PreferNoSchedule",
          },
        ]
      }
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Button
      className="reduxFormKeyValueList-removeBtn-disabled"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={true}
      onClick={[Function]}
      variant="link"
    />
  </GridItem>
  <GridItem>
    <Button
      className="reduxFormKeyValueList-addBtn pf-u-mb-lg"
      icon={
        <PlusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isInline={true}
      onClick={[Function]}
      variant="link"
    >
      Add taint
    </Button>
  </GridItem>
</Grid>
`;

exports[`<ReduxFormTaints /> should render with input 1`] = `
<Grid
  hasGutter={true}
>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={3}
  >
    Key
  </GridItem>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={3}
  >
    Value
  </GridItem>
  <GridItem
    className="pf-c-form__label pf-c-form__label-text"
    span={3}
  >
    Effect
  </GridItem>
  <GridItem
    span={3}
  />
  <GridItem
    span={3}
  >
    <Field
      aria-label="Key-value list key"
      component={[Function]}
      index={0}
      isRequired={true}
      name="[object Object].key"
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Field
      aria-label="Key-value list value"
      component={[Function]}
      index={0}
      isRequired={true}
      name="[object Object].value"
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Field
      component={[Function]}
      isFormGroup={false}
      name="[object Object].effect"
      options={
        Array [
          Object {
            "name": "NoSchedule",
            "value": "NoSchedule",
          },
          Object {
            "name": "NoExecute",
            "value": "NoExecute",
          },
          Object {
            "name": "PreferNoSchedule",
            "value": "PreferNoSchedule",
          },
        ]
      }
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Button
      className="reduxFormKeyValueList-removeBtn"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={false}
      onClick={[Function]}
      variant="link"
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Field
      aria-label="Key-value list key"
      component={[Function]}
      index={1}
      isRequired={true}
      name="[object Object].key"
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Field
      aria-label="Key-value list value"
      component={[Function]}
      index={1}
      isRequired={true}
      name="[object Object].value"
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Field
      component={[Function]}
      isFormGroup={false}
      name="[object Object].effect"
      options={
        Array [
          Object {
            "name": "NoSchedule",
            "value": "NoSchedule",
          },
          Object {
            "name": "NoExecute",
            "value": "NoExecute",
          },
          Object {
            "name": "PreferNoSchedule",
            "value": "PreferNoSchedule",
          },
        ]
      }
    />
  </GridItem>
  <GridItem
    span={3}
  >
    <Button
      className="reduxFormKeyValueList-removeBtn"
      icon={
        <MinusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isDisabled={false}
      onClick={[Function]}
      variant="link"
    />
  </GridItem>
  <GridItem>
    <Button
      className="reduxFormKeyValueList-addBtn pf-u-mb-lg"
      icon={
        <PlusCircleIcon
          color="currentColor"
          noVerticalAlign={false}
          size="sm"
        />
      }
      isInline={true}
      onClick={[Function]}
      variant="link"
    >
      Add taint
    </Button>
  </GridItem>
</Grid>
`;
