// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Subscriptions /> OCPSubscriptionCard Empty should render empty OCP subscriptions 1`] = `
<PageSection>
  <EmptyState>
    <Title
      headingLevel="h4"
      size="2xl"
    >
      You do not have any clusters
    </Title>
    <EmptyStateBody>
      <p>
        Create a cluster to get started.
      </p>
    </EmptyStateBody>
    <Link
      replace={false}
      to="/install"
    >
      <Button>
        Create Cluster
      </Button>
    </Link>
  </EmptyState>
</PageSection>
`;

exports[`<Subscriptions /> OCPSubscriptionCard Error should render error OCP subscriptions 1`] = `
<PageSection>
  <EmptyState>
    <Title
      headingLevel="h4"
      size="2xl"
    >
      Unable to retrieve subscription status
    </Title>
    <EmptyStateBody>
      <p>
        An error has occured! Try again or contact support by including this error message:
      </p>
      <q />
      <p>
        Operation ID: N/A
      </p>
    </EmptyStateBody>
    <Button
      onClick={[MockFunction]}
    >
      Try again
    </Button>
  </EmptyState>
</PageSection>
`;

exports[`<Subscriptions /> OCPSubscriptionCard Loading should render loading OCP subscriptions 1`] = `
<PageSection>
  <Spinner
    centered={true}
  />
</PageSection>
`;

exports[`<Subscriptions /> OCPSubscriptionCard should render 1`] = `
<Card>
  <CardHeader
    className="section-header"
  >
    OpenShift Container Platform
  </CardHeader>
  <CardBody
    className="section-text"
  >
    The summary of subscription status for all self-managed clusters. Follow the individual links to see the specific clusters in each of the corresponding status.
  </CardBody>
  <CardBody>
    <OCPSubscriptionSummary
      stats={
        Object {
          "InconsistentServices": 1,
          "NotReconciled": 1,
          "NotSet": 1,
          "Ok": 1,
          "Overcommitted": 1,
        }
      }
    />
  </CardBody>
</Card>
`;

exports[`<Subscriptions /> OCPSubscriptionCategory should render non-empty category 1`] = `
<Fragment>
  <Stack
    className="status-group status-group-header"
  >
    <StackItem
      className="status-label "
    >
      full
    </StackItem>
  </Stack>
  <Stack
    className="status-group"
  >
    <StackItem>
      <Link
        replace={false}
        to="/"
      >
        Link1
      </Link>
    </StackItem>
  </Stack>
  <Stack
    className="status-group"
  >
    <StackItem>
      <Link
        replace={false}
        to="/"
      >
        Link2
      </Link>
    </StackItem>
  </Stack>
</Fragment>
`;

exports[`<Subscriptions /> OCPSubscriptionSummary should render 1`] = `
<Fragment>
  <h4
    className="content-header"
  >
    Subscription Status
  </h4>
  <OCPSubscriptionCategory
    items={
      Array [
        Object {
          "hint": null,
          "link": <Link
            replace={false}
            to={
              Object {
                "pathname": "/",
                "search": "entitlement_status=Ok&plan_id=OCP",
              }
            }
          >
            1 Cluster
          </Link>,
          "status": "Ok",
          "text": null,
        },
      ]
    }
    labelClass="ok-label"
    labelIcon={
      <CheckCircleIcon
        className="status-icon ok-icon"
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    }
    labelText="Properly entitled"
  />
  <OCPSubscriptionCategory
    items={
      Array [
        Object {
          "hint": "Clusters are attached to subscriptions with different support levels.",
          "link": <Link
            replace={false}
            to={
              Object {
                "pathname": "/",
                "search": "entitlement_status=InconsistentServices&plan_id=OCP",
              }
            }
          >
            1 Cluster
          </Link>,
          "status": "InconsistentServices",
          "text": "Invalid",
        },
        Object {
          "hint": "Clusters do not have subscriptions attached.",
          "link": <Link
            replace={false}
            to={
              Object {
                "pathname": "/",
                "search": "entitlement_status=NotSet&plan_id=OCP",
              }
            }
          >
            1 Cluster
          </Link>,
          "status": "NotSet",
          "text": "Not subscribed",
        },
        Object {
          "hint": "Clusters are consuming more resources than they are entitled to.",
          "link": <Link
            replace={false}
            to={
              Object {
                "pathname": "/",
                "search": "entitlement_status=Overcommitted&plan_id=OCP",
              }
            }
          >
            1 Cluster
          </Link>,
          "status": "Overcommitted",
          "text": "Insufficient",
        },
      ]
    }
    labelClass="warn-label"
    labelIcon={
      <ExclamationTriangleIcon
        className="status-icon warn-icon"
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    }
    labelText="Subscription issues"
  />
  <OCPSubscriptionCategory
    items={
      Array [
        Object {
          "hint": null,
          "link": <Link
            replace={false}
            to={
              Object {
                "pathname": "/",
                "search": "entitlement_status=NotReconciled&plan_id=OCP",
              }
            }
          >
            1 Cluster
          </Link>,
          "status": "NotReconciled",
          "text": null,
        },
      ]
    }
    labelClass="unknown-label"
    labelHint="Subscription status for new clusters may not be available for a few minutes after being created."
    labelIcon={
      <UnknownIcon
        className="status-icon unknown-icon"
        color="currentColor"
        noVerticalAlign={false}
        size="sm"
        title={null}
      />
    }
    labelText="Unknown"
  />
</Fragment>
`;

exports[`<Subscriptions /> OSDSubscriptionCard Empty should render empty OSD quota summary 1`] = `
<PageSection>
  <EmptyState>
    <Title
      headingLevel="h4"
      size="2xl"
    >
      You do not have any quota
    </Title>
    <EmptyStateBody>
      <p>
        <a
          href="https://www.openshift.com/products/dedicated/contact/"
          target="_blank"
        >
          Contact sales
        </a>
         
        to get started with OpenShift Dedicated.
      </p>
    </EmptyStateBody>
  </EmptyState>
</PageSection>
`;

exports[`<Subscriptions /> OSDSubscriptionCard Error should render error OSD quota summary 1`] = `
<PageSection>
  <EmptyState>
    <Title
      headingLevel="h4"
      size="2xl"
    >
      Unable to retrieve quota information
    </Title>
    <EmptyStateBody>
      <p>
        An error has occured! Try again or contact support by including this error message:
      </p>
      <q />
      <p>
        Operation ID: N/A
      </p>
    </EmptyStateBody>
    <Button
      onClick={[MockFunction]}
    >
      Try again
    </Button>
  </EmptyState>
</PageSection>
`;

exports[`<Subscriptions /> OSDSubscriptionCard Loading should render loading OSD quota summary 1`] = `
<PageSection>
  <Spinner
    centered={true}
  />
</PageSection>
`;

exports[`<Subscriptions /> OSDSubscriptionCard should render 1`] = `
<Card>
  <CardHeader
    className="section-header"
  >
    OpenShift Dedicated
  </CardHeader>
  <CardBody
    className="section-text"
  >
    The summary of all subscriptions for OpenShift Dedicated purchased by your organization or granted by Red Hat.
  </CardBody>
  <CardBody
    className="osd-table-container"
  >
    <h4
      className="content-header"
    >
      Quota
    </h4>
    <OSDSubscriptionTable
      rows={
        Array [
          Array [
            "cluster.aws",
            "c5.4xlarge",
            "multi-zone",
            "BYOC",
            10,
            15,
            Object {
              "title": <ResourcesAlmostFullIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
          ],
          Array [
            "cluster.aws",
            "m5.xlarge",
            "multi-zone",
            "BYOC",
            15,
            15,
            Object {
              "title": <ResourcesFullIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
          ],
          Array [
            "compute.node.aws",
            "c5.4xlarge",
            "multi-zone",
            "BYOC",
            0,
            4,
            Object {
              "title": <OutlinedCircleIcon
                color="currentColor"
                noVerticalAlign={false}
                size="sm"
                title={null}
              />,
            },
          ],
        ]
      }
    />
  </CardBody>
</Card>
`;

exports[`<Subscriptions /> OSDSubscriptionTable should render 1`] = `
<Fragment>
  <Table
    borders={true}
    cells={
      Array [
        "Resource type",
        "Resource name",
        "Availability",
        Object {
          "title": "Plan type",
          "transforms": Array [
            [Function],
          ],
        },
        "Used",
        "Max",
        "Capacity",
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    onCollapse={null}
    onExpand={null}
    role="grid"
    rowLabeledBy="simple-node"
    rows={Array []}
    variant={null}
  >
    <TableHeader
      className=""
    />
    <TableBody
      className=""
      onRowClick={[Function]}
      rowKey="id"
    />
  </Table>
</Fragment>
`;

exports[`<Subscriptions /> Subscriptions should render 1`] = `
<Fragment>
  <PageHeader>
    <PageHeaderTitle
      title="Subscriptions"
    />
  </PageHeader>
  <PageSection
    id="subscriptions-content"
  >
    <Connect(OCPSubscriptionCard)
      organizationID="org-1"
    />
    <Connect(OSDSubscriptionCard)
      organizationID="org-1"
    />
  </PageSection>
</Fragment>
`;
