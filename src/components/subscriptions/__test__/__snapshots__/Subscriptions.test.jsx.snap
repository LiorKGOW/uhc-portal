// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Subscriptions /> OCPSubscriptionCard should render 1`] = `
<Card>
  <CardTitle>
    OpenShift Container Platform now uses Subscription Watch to manage subscriptions.
  </CardTitle>
  <CardBody>
    <Stack
      hasGutter={true}
    >
      <StackItem>
        To get started, cluster owners or organization administrators should:
      </StackItem>
      <StackItem>
        <List
          className="osp-list"
          component="ol"
          type="1"
        >
          <ListItem>
            View a cluster in OpenShift Cluster Manager.
          </ListItem>
          <ListItem>
            Choose “Edit subscription settings” from either the actions menu in the upper right, or in the Subscriptions settings section of the Overview.
          </ListItem>
          <ListItem>
            Select the options that apply to your cluster in the dialog and save.
          </ListItem>
          <ListItem>
            Subscription Watch should handle the rest. There’s no more attaching subscriptions to clusters.
          </ListItem>
        </List>
      </StackItem>
      <StackItem>
        <Button
          component="a"
          href="https://cloud.redhat.com/subscriptions/openshift-sw"
          rel="noopener noreferrer"
          target="_blank"
        >
          Open Subscription Watch
        </Button>
      </StackItem>
    </Stack>
  </CardBody>
</Card>
`;

exports[`<Subscriptions /> OSDSubscriptionCard Empty should render empty OSD quota summary 1`] = `
<PageSection
  className="subscriptions-empty-state"
>
  <EmptyState>
    <Title
      headingLevel="h4"
      size="2xl"
    >
      You do not have any quota
    </Title>
    <EmptyStateBody>
      <p>
        <a
          href="https://www.openshift.com/products/dedicated/contact/"
          rel="noreferrer noopener"
          target="_blank"
        >
          Contact sales
        </a>
         
        to get started with OpenShift Dedicated.
      </p>
    </EmptyStateBody>
  </EmptyState>
</PageSection>
`;

exports[`<Subscriptions /> OSDSubscriptionCard Error should render error OSD quota summary 1`] = `
<PageSection
  className="subscriptions-empty-state"
>
  <EmptyState>
    <Title
      headingLevel="h4"
      size="2xl"
    >
      Unable to retrieve quota information
    </Title>
    <EmptyStateBody>
      <p>
        An error has occured! Try again or contact support by including this error message:
      </p>
      <q />
      <p>
        Operation ID: N/A
      </p>
    </EmptyStateBody>
    <Button
      onClick={[MockFunction]}
    >
      Try again
    </Button>
  </EmptyState>
</PageSection>
`;

exports[`<Subscriptions /> OSDSubscriptionCard Loading should render loading OSD quota summary 1`] = `
<PageSection>
  <Spinner
    centered={true}
  />
</PageSection>
`;

exports[`<Subscriptions /> OSDSubscriptionCard should render 1`] = `
<Card>
  <CardTitle>
    OpenShift Dedicated
  </CardTitle>
  <CardBody>
    <Stack
      hasGutter={true}
    >
      <StackItem>
        The summary of all subscriptions for OpenShift Dedicated purchased by your organization or granted by Red Hat.
      </StackItem>
      <StackItem
        className="content-header"
      >
        Quota
      </StackItem>
      <StackItem
        className="table-container"
      >
        <OSDSubscriptionTable
          rows={
            Array [
              Array [
                "compute.node",
                "cpu.large",
                Object {
                  "title": "N/A",
                },
                "Standard",
                "",
                "10 of 15",
                Object {
                  "title": <ResourcesAlmostFullIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  />,
                },
              ],
              Array [
                "compute.node",
                "cpu.large",
                Object {
                  "title": "N/A",
                },
                "Standard",
                "",
                "15 of 15",
                Object {
                  "title": <ResourcesFullIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  />,
                },
              ],
              Array [
                "compute.node",
                "cpu.large",
                Object {
                  "title": "N/A",
                },
                "Standard",
                "",
                "0 of 4",
                Object {
                  "title": <OutlinedCircleIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  />,
                },
              ],
              Array [
                "add-on",
                "addon-dba-operator",
                Object {
                  "title": "N/A",
                },
                "Any",
                "",
                "0 of 5",
                Object {
                  "title": <OutlinedCircleIcon
                    color="currentColor"
                    noVerticalAlign={false}
                    size="sm"
                  />,
                },
              ],
            ]
          }
        />
      </StackItem>
    </Stack>
  </CardBody>
</Card>
`;

exports[`<Subscriptions /> OSDSubscriptionTable should render 1`] = `
<Fragment>
  <Table
    aria-label="Quota Table"
    borders={true}
    canSelectAll={true}
    cells={
      Array [
        "Resource type",
        "Resource name",
        "Availability",
        Object {
          "title": "Plan type",
          "transforms": Array [
            [Function],
          ],
        },
        "Cluster type",
        Object {
          "props": Object {
            "className": "quota-table-used",
          },
          "title": "Used",
        },
        "Capacity",
      ]
    }
    className=""
    contentId="expanded-content"
    dropdownDirection="down"
    dropdownPosition="right"
    expandId="expandable-toggle"
    gridBreakPoint="grid-md"
    isStickyHeader={false}
    ouiaSafe={true}
    role="grid"
    rowLabeledBy="simple-node"
    rows={Array []}
    selectVariant="checkbox"
    variant={null}
  >
    <TableHeader />
    <Component />
  </Table>
</Fragment>
`;

exports[`<Subscriptions /> Subscriptions should render 1`] = `
<Fragment>
  <PageHeader>
    <PageHeaderTitle
      className="page-title"
      title="Subscriptions"
    />
  </PageHeader>
  <PageSection
    className="ins-p-subscriptions"
  >
    <Stack
      hasGutter={true}
    >
      <StackItem
        className="ins-l-ocp-subscription__section"
      >
        <OCPSubscriptionCard
          organizationID="org-1"
        />
      </StackItem>
      <StackItem
        className="ins-l-osd-subscription__section"
      >
        <Connect(OSDSubscriptionCard)
          organizationID="org-1"
        />
      </StackItem>
    </Stack>
  </PageSection>
</Fragment>
`;
